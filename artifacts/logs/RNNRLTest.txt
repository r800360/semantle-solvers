DEBUG:src.train:Episode 1: Input words: ['orange', 'apple', 'orange', 'apple', 'apple', 'apple', 'orange', 'orange', 'orange', 'orange']
DEBUG:src.train:Episode 1: Target words: ['orange', 'orange', 'apple', 'orange', 'apple', 'apple', 'orange', 'apple', 'apple', 'apple']
DEBUG:src.train:Input Word Indices: [1 0 1 0 0 0 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 0, 1, 0, 0, 0, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[0.4995, 0.5005],
        [0.4995, 0.5005],
        [0.4995, 0.5005],
        [0.4995, 0.5005],
        [0.4995, 0.5005],
        [0.4995, 0.5005],
        [0.4995, 0.5005],
        [0.4995, 0.5005],
        [0.4995, 0.5005],
        [0.4995, 0.5005]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([0, 1, 1, 1, 0, 0, 0, 1, 1, 1])
DEBUG:src.train:Action words: ['apple' 'orange' 'orange' 'orange' 'apple' 'apple' 'apple' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
DEBUG:src.train:Log Probabilities: tensor([-0.6942, -0.6921, -0.6921, -0.6921, -0.6942, -0.6942, -0.6942, -0.6921,
        -0.6921, -0.6921], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [False  True False  True  True  True False False False False]
DEBUG:src.train:Input Word Indices: [0 1 1 1 0 0 0 1 1 1]
DEBUG:src.train:Input Tensor: tensor([0, 1, 1, 1, 0, 0, 0, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[0.4961, 0.5039],
        [0.4961, 0.5039],
        [0.4961, 0.5039],
        [0.4961, 0.5039],
        [0.4961, 0.5039],
        [0.4961, 0.5039],
        [0.4961, 0.5039],
        [0.4961, 0.5039],
        [0.4961, 0.5039],
        [0.4961, 0.5039]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 0, 1, 0, 0, 1, 0, 0, 1, 1])
DEBUG:src.train:Action words: ['orange' 'apple' 'orange' 'apple' 'apple' 'orange' 'apple' 'apple'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0200, 0.0134, 0.0134, 0.0134, 0.0200, 0.0134, 0.0134, 0.0200, 0.0134,
        0.0134])
DEBUG:src.train:Log Probabilities: tensor([-0.6853, -0.7010, -0.6853, -0.7010, -0.7010, -0.6853, -0.7010, -0.7010,
        -0.6853, -0.6853], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [ True False False False  True False False  True False False]
DEBUG:src.train:Input Word Indices: [1 0 1 0 0 1 0 0 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 0, 1, 0, 0, 1, 0, 0, 1, 1])
DEBUG:src.train:Action Probs: tensor([[0.4938, 0.5062],
        [0.4938, 0.5062],
        [0.4938, 0.5062],
        [0.4938, 0.5062],
        [0.4938, 0.5062],
        [0.4938, 0.5062],
        [0.4938, 0.5062],
        [0.4938, 0.5062],
        [0.4938, 0.5062],
        [0.4938, 0.5062]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 0, 0, 0, 0, 0, 0, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'apple' 'apple' 'apple' 'apple' 'apple'
 'apple' 'orange']
DEBUG:src.train:Rewards: tensor([0.0400, 0.0400, 0.0267, 0.0267, 0.0400, 0.0400, 0.0267, 0.0400, 0.0400,
        0.0267])
DEBUG:src.train:Log Probabilities: tensor([-0.6809, -0.6809, -0.6809, -0.7056, -0.7056, -0.7056, -0.7056, -0.7056,
        -0.7056, -0.6809], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [ True  True False False  True  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 0 0 0 0 0 0 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 0, 0, 0, 0, 0, 0, 1])
DEBUG:src.train:Action Probs: tensor([[0.4923, 0.5077],
        [0.4923, 0.5077],
        [0.4923, 0.5077],
        [0.4923, 0.5077],
        [0.4923, 0.5077],
        [0.4923, 0.5077],
        [0.4923, 0.5077],
        [0.4923, 0.5077],
        [0.4923, 0.5077],
        [0.4923, 0.5077]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 0, 0, 0, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'apple' 'apple' 'apple' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0600, 0.0600, 0.0600, 0.0401, 0.0600, 0.0401, 0.0600, 0.0401, 0.0401,
        0.0401])
DEBUG:src.train:Log Probabilities: tensor([-0.6779, -0.6779, -0.7086, -0.7086, -0.7086, -0.6779, -0.6779, -0.6779,
        -0.6779, -0.6779], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [ True  True  True False  True False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 0 0 0 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 0, 0, 0, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[0.4913, 0.5087],
        [0.4913, 0.5087],
        [0.4913, 0.5087],
        [0.4913, 0.5087],
        [0.4913, 0.5087],
        [0.4913, 0.5087],
        [0.4913, 0.5087],
        [0.4913, 0.5087],
        [0.4913, 0.5087],
        [0.4913, 0.5087]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 0, 1, 1, 1, 0, 1, 0, 0])
DEBUG:src.train:Action words: ['orange' 'orange' 'apple' 'orange' 'orange' 'orange' 'apple' 'orange'
 'apple' 'apple']
DEBUG:src.train:Rewards: tensor([0.0800, 0.0800, 0.0800, 0.0800, 0.0535, 0.0535, 0.0535, 0.0535, 0.0800,
        0.0800])
DEBUG:src.train:Log Probabilities: tensor([-0.6759, -0.6759, -0.7107, -0.6759, -0.6759, -0.6759, -0.7107, -0.6759,
        -0.7107, -0.7107], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [ True  True  True  True False False False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 0 1 1 1 0 1 0 0]
DEBUG:src.train:Input Tensor: tensor([1, 1, 0, 1, 1, 1, 0, 1, 0, 0])
DEBUG:src.train:Action Probs: tensor([[0.4906, 0.5094],
        [0.4906, 0.5094],
        [0.4906, 0.5094],
        [0.4906, 0.5094],
        [0.4906, 0.5094],
        [0.4906, 0.5094],
        [0.4906, 0.5094],
        [0.4906, 0.5094],
        [0.4906, 0.5094],
        [0.4906, 0.5094]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([0, 0, 1, 0, 0, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['apple' 'apple' 'orange' 'apple' 'apple' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0669, 0.0669, 0.0669, 0.0669, 0.1000, 0.0669, 0.1000, 0.0669, 0.0669,
        0.0669])
DEBUG:src.train:Log Probabilities: tensor([-0.7120, -0.7120, -0.6746, -0.7120, -0.7120, -0.6746, -0.6746, -0.6746,
        -0.6746, -0.6746], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [False False False False  True False  True False False False]
DEBUG:src.train:Input Word Indices: [0 0 1 0 0 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([0, 0, 1, 0, 0, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[0.4902, 0.5098],
        [0.4902, 0.5098],
        [0.4902, 0.5098],
        [0.4902, 0.5098],
        [0.4902, 0.5098],
        [0.4902, 0.5098],
        [0.4902, 0.5098],
        [0.4902, 0.5098],
        [0.4902, 0.5098],
        [0.4902, 0.5098]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 0, 0, 1, 1, 1, 0, 0, 1, 1])
DEBUG:src.train:Action words: ['orange' 'apple' 'apple' 'orange' 'orange' 'orange' 'apple' 'apple'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1200, 0.0802, 0.1200, 0.1200, 0.0802, 0.0802, 0.0802, 0.1200, 0.0802,
        0.0802])
DEBUG:src.train:Log Probabilities: tensor([-0.6737, -0.7130, -0.7130, -0.6737, -0.6737, -0.6737, -0.7130, -0.7130,
        -0.6737, -0.6737], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [ True False  True  True False False False  True False False]
DEBUG:src.train:Input Word Indices: [1 0 0 1 1 1 0 0 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 0, 0, 1, 1, 1, 0, 0, 1, 1])
DEBUG:src.train:Action Probs: tensor([[0.4899, 0.5101],
        [0.4899, 0.5101],
        [0.4899, 0.5101],
        [0.4899, 0.5101],
        [0.4899, 0.5101],
        [0.4899, 0.5101],
        [0.4899, 0.5101],
        [0.4899, 0.5101],
        [0.4899, 0.5101],
        [0.4899, 0.5101]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 0, 0, 0, 1, 0, 0, 0, 1, 1])
DEBUG:src.train:Action words: ['orange' 'apple' 'apple' 'apple' 'orange' 'apple' 'apple' 'apple'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1400, 0.0936, 0.1400, 0.0936, 0.0936, 0.1400, 0.0936, 0.1400, 0.0936,
        0.0936])
DEBUG:src.train:Log Probabilities: tensor([-0.6732, -0.7136, -0.7136, -0.7136, -0.6732, -0.7136, -0.7136, -0.7136,
        -0.6732, -0.6732], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [ True False  True False False  True False  True False False]
DEBUG:src.train:Input Word Indices: [1 0 0 0 1 0 0 0 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 0, 0, 0, 1, 0, 0, 0, 1, 1])
DEBUG:src.train:Action Probs: tensor([[0.4897, 0.5103],
        [0.4897, 0.5103],
        [0.4897, 0.5103],
        [0.4897, 0.5103],
        [0.4897, 0.5103],
        [0.4897, 0.5103],
        [0.4897, 0.5103],
        [0.4897, 0.5103],
        [0.4897, 0.5103],
        [0.4897, 0.5103]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 0, 0, 0, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'apple' 'apple' 'apple' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1600, 0.1600, 0.1600, 0.1070, 0.1600, 0.1070, 0.1600, 0.1070, 0.1070,
        0.1070])
DEBUG:src.train:Log Probabilities: tensor([-0.6728, -0.6728, -0.7139, -0.7139, -0.7139, -0.6728, -0.6728, -0.6728,
        -0.6728, -0.6728], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [ True  True  True False  True False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 0 0 0 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 0, 0, 0, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[0.4896, 0.5104],
        [0.4896, 0.5104],
        [0.4896, 0.5104],
        [0.4896, 0.5104],
        [0.4896, 0.5104],
        [0.4896, 0.5104],
        [0.4896, 0.5104],
        [0.4896, 0.5104],
        [0.4896, 0.5104],
        [0.4896, 0.5104]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 0, 0, 1, 1, 0, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'apple' 'apple' 'orange' 'orange'
 'apple' 'orange']
DEBUG:src.train:Rewards: tensor([0.1800, 0.1800, 0.1203, 0.1800, 0.1800, 0.1800, 0.1800, 0.1203, 0.1800,
        0.1203])
DEBUG:src.train:Log Probabilities: tensor([-0.6725, -0.6725, -0.6725, -0.6725, -0.7142, -0.7142, -0.6725, -0.6725,
        -0.7142, -0.6725], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [ True  True False  True  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 0 0 1 1 0 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 0, 0, 1, 1, 0, 1])
DEBUG:src.train:Action Probs: tensor([[0.4895, 0.5105],
        [0.4895, 0.5105],
        [0.4895, 0.5105],
        [0.4895, 0.5105],
        [0.4895, 0.5105],
        [0.4895, 0.5105],
        [0.4895, 0.5105],
        [0.4895, 0.5105],
        [0.4895, 0.5105],
        [0.4895, 0.5105]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([0, 1, 1, 1, 1, 0, 1, 1, 0, 1])
DEBUG:src.train:Action words: ['apple' 'orange' 'orange' 'orange' 'orange' 'apple' 'orange' 'orange'
 'apple' 'orange']
DEBUG:src.train:Rewards: tensor([0.1337, 0.2000, 0.1337, 0.2000, 0.1337, 0.2000, 0.2000, 0.1337, 0.2000,
        0.1337])
DEBUG:src.train:Log Probabilities: tensor([-0.7144, -0.6724, -0.6724, -0.6724, -0.6724, -0.7144, -0.6724, -0.6724,
        -0.7144, -0.6724], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [False  True False  True False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [0 1 1 1 1 0 1 1 0 1]
DEBUG:src.train:Input Tensor: tensor([0, 1, 1, 1, 1, 0, 1, 1, 0, 1])
DEBUG:src.train:Action Probs: tensor([[0.4894, 0.5106],
        [0.4895, 0.5105],
        [0.4895, 0.5106],
        [0.4895, 0.5105],
        [0.4895, 0.5105],
        [0.4895, 0.5105],
        [0.4895, 0.5105],
        [0.4895, 0.5106],
        [0.4895, 0.5106],
        [0.4894, 0.5106]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 0, 0, 1, 1, 0, 1, 0, 1, 0])
DEBUG:src.train:Action words: ['orange' 'apple' 'apple' 'orange' 'orange' 'apple' 'orange' 'apple'
 'orange' 'apple']
DEBUG:src.train:Rewards: tensor([0.2200, 0.1471, 0.2200, 0.2200, 0.1471, 0.2200, 0.2200, 0.2200, 0.1471,
        0.2200])
DEBUG:src.train:Log Probabilities: tensor([-0.6723, -0.7145, -0.7145, -0.6723, -0.6723, -0.7145, -0.6723, -0.7145,
        -0.6723, -0.7145], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [ True False  True  True False  True  True  True False  True]
DEBUG:src.train:Input Word Indices: [1 0 0 1 1 0 1 0 1 0]
DEBUG:src.train:Input Tensor: tensor([1, 0, 0, 1, 1, 0, 1, 0, 1, 0])
DEBUG:src.train:Action Probs: tensor([[0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 0, 1, 0, 1, 1, 1, 0, 0, 0])
DEBUG:src.train:Action words: ['orange' 'apple' 'orange' 'apple' 'orange' 'orange' 'orange' 'apple'
 'apple' 'apple']
DEBUG:src.train:Rewards: tensor([0.2400, 0.1605, 0.1605, 0.1605, 0.1605, 0.1605, 0.2400, 0.2400, 0.2400,
        0.2400])
DEBUG:src.train:Log Probabilities: tensor([-0.6722, -0.7145, -0.6722, -0.7145, -0.6722, -0.6722, -0.6722, -0.7145,
        -0.7145, -0.7145], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [ True False False False False False  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 0 1 0 1 1 1 0 0 0]
DEBUG:src.train:Input Tensor: tensor([1, 0, 1, 0, 1, 1, 1, 0, 0, 0])
DEBUG:src.train:Action Probs: tensor([[0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 0, 1, 0, 0, 0, 0, 0, 0, 1])
DEBUG:src.train:Action words: ['orange' 'apple' 'orange' 'apple' 'apple' 'apple' 'apple' 'apple' 'apple'
 'orange']
DEBUG:src.train:Rewards: tensor([0.2600, 0.1738, 0.1738, 0.1738, 0.2600, 0.2600, 0.1738, 0.2600, 0.2600,
        0.1738])
DEBUG:src.train:Log Probabilities: tensor([-0.6722, -0.7146, -0.6722, -0.7146, -0.7146, -0.7146, -0.7146, -0.7146,
        -0.7146, -0.6722], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [ True False False False  True  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 0 1 0 0 0 0 0 0 1]
DEBUG:src.train:Input Tensor: tensor([1, 0, 1, 0, 0, 0, 0, 0, 0, 1])
DEBUG:src.train:Action Probs: tensor([[0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 0, 0, 0, 0, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'apple' 'apple' 'apple' 'apple' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2800, 0.2800, 0.1872, 0.1872, 0.2800, 0.2800, 0.1872, 0.1872, 0.1872,
        0.1872])
DEBUG:src.train:Log Probabilities: tensor([-0.6721, -0.6721, -0.6721, -0.7146, -0.7146, -0.7146, -0.7146, -0.6721,
        -0.6721, -0.6721], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [ True  True False False  True  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 0 0 0 0 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 0, 0, 0, 0, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([0, 1, 0, 0, 1, 0, 1, 0, 1, 1])
DEBUG:src.train:Action words: ['apple' 'orange' 'apple' 'apple' 'orange' 'apple' 'orange' 'apple'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2006, 0.3000, 0.3000, 0.2006, 0.2006, 0.3000, 0.3000, 0.3000, 0.2006,
        0.2006])
DEBUG:src.train:Log Probabilities: tensor([-0.7146, -0.6721, -0.7146, -0.7146, -0.6721, -0.7146, -0.6721, -0.7146,
        -0.6721, -0.6721], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [False  True  True False False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [0 1 0 0 1 0 1 0 1 1]
DEBUG:src.train:Input Tensor: tensor([0, 1, 0, 0, 1, 0, 1, 0, 1, 1])
DEBUG:src.train:Action Probs: tensor([[0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 0, 1, 1, 0, 0, 1, 1, 0, 1])
DEBUG:src.train:Action words: ['orange' 'apple' 'orange' 'orange' 'apple' 'apple' 'orange' 'orange'
 'apple' 'orange']
DEBUG:src.train:Rewards: tensor([0.3200, 0.2139, 0.2139, 0.3200, 0.3200, 0.3200, 0.3200, 0.2139, 0.3200,
        0.2139])
DEBUG:src.train:Log Probabilities: tensor([-0.6721, -0.7146, -0.6721, -0.6721, -0.7146, -0.7146, -0.6721, -0.6721,
        -0.7146, -0.6721], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [ True False False  True  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 0 1 1 0 0 1 1 0 1]
DEBUG:src.train:Input Tensor: tensor([1, 0, 1, 1, 0, 0, 1, 1, 0, 1])
DEBUG:src.train:Action Probs: tensor([[0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([0, 0, 0, 0, 1, 0, 0, 1, 1, 1])
DEBUG:src.train:Action words: ['apple' 'apple' 'apple' 'apple' 'orange' 'apple' 'apple' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2273, 0.2273, 0.3400, 0.2273, 0.2273, 0.3400, 0.2273, 0.2273, 0.2273,
        0.2273])
DEBUG:src.train:Log Probabilities: tensor([-0.7146, -0.7146, -0.7146, -0.7146, -0.6721, -0.7146, -0.7146, -0.6721,
        -0.6721, -0.6721], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [False False  True False False  True False False False False]
DEBUG:src.train:Input Word Indices: [0 0 0 0 1 0 0 1 1 1]
DEBUG:src.train:Input Tensor: tensor([0, 0, 0, 0, 1, 0, 0, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 0, 0, 1, 1, 0, 1, 1, 0])
DEBUG:src.train:Action words: ['orange' 'orange' 'apple' 'apple' 'orange' 'orange' 'apple' 'orange'
 'orange' 'apple']
DEBUG:src.train:Rewards: tensor([0.3600, 0.3600, 0.3600, 0.2407, 0.2407, 0.2407, 0.2407, 0.2407, 0.2407,
        0.3600])
DEBUG:src.train:Log Probabilities: tensor([-0.6721, -0.6721, -0.7147, -0.7147, -0.6721, -0.6721, -0.7147, -0.6721,
        -0.6721, -0.7147], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [ True  True  True False False False False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 0 0 1 1 0 1 1 0]
DEBUG:src.train:Input Tensor: tensor([1, 1, 0, 0, 1, 1, 0, 1, 1, 0])
DEBUG:src.train:Action Probs: tensor([[0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([0, 1, 1, 1, 1, 0, 1, 0, 1, 0])
DEBUG:src.train:Action words: ['apple' 'orange' 'orange' 'orange' 'orange' 'apple' 'orange' 'apple'
 'orange' 'apple']
DEBUG:src.train:Rewards: tensor([0.2541, 0.3800, 0.2541, 0.3800, 0.2541, 0.3800, 0.3800, 0.3800, 0.2541,
        0.3800])
DEBUG:src.train:Log Probabilities: tensor([-0.7147, -0.6721, -0.6721, -0.6721, -0.6721, -0.7147, -0.6721, -0.7147,
        -0.6721, -0.7147], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [False  True False  True False  True  True  True False  True]
DEBUG:src.train:Input Word Indices: [0 1 1 1 1 0 1 0 1 0]
DEBUG:src.train:Input Tensor: tensor([0, 1, 1, 1, 1, 0, 1, 0, 1, 0])
DEBUG:src.train:Action Probs: tensor([[0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 0, 1, 0, 1, 0, 1, 1, 0, 1])
DEBUG:src.train:Action words: ['orange' 'apple' 'orange' 'apple' 'orange' 'apple' 'orange' 'orange'
 'apple' 'orange']
DEBUG:src.train:Rewards: tensor([0.4000, 0.2674, 0.2674, 0.2674, 0.2674, 0.4000, 0.4000, 0.2674, 0.4000,
        0.2674])
DEBUG:src.train:Log Probabilities: tensor([-0.6721, -0.7147, -0.6721, -0.7147, -0.6721, -0.7147, -0.6721, -0.6721,
        -0.7147, -0.6721], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [ True False False False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 0 1 0 1 0 1 1 0 1]
DEBUG:src.train:Input Tensor: tensor([1, 0, 1, 0, 1, 0, 1, 1, 0, 1])
DEBUG:src.train:Action Probs: tensor([[0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([0, 0, 0, 0, 0, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['apple' 'apple' 'apple' 'apple' 'apple' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2808, 0.2808, 0.4200, 0.2808, 0.4200, 0.2808, 0.4200, 0.2808, 0.2808,
        0.2808])
DEBUG:src.train:Log Probabilities: tensor([-0.7147, -0.7147, -0.7147, -0.7147, -0.7147, -0.6721, -0.6721, -0.6721,
        -0.6721, -0.6721], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [False False  True False  True False  True False False False]
DEBUG:src.train:Input Word Indices: [0 0 0 0 0 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([0, 0, 0, 0, 0, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 0, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'apple' 'orange']
DEBUG:src.train:Rewards: tensor([0.4400, 0.4400, 0.2942, 0.4400, 0.2942, 0.2942, 0.4400, 0.2942, 0.4400,
        0.2942])
DEBUG:src.train:Log Probabilities: tensor([-0.6721, -0.6721, -0.6721, -0.6721, -0.6721, -0.6721, -0.6721, -0.6721,
        -0.7147, -0.6721], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [ True  True False  True False False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 0 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 0, 1])
DEBUG:src.train:Action Probs: tensor([[0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 0, 1, 0, 1, 0, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'apple' 'orange' 'apple' 'orange' 'apple'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4600, 0.4600, 0.3075, 0.3075, 0.3075, 0.4600, 0.4600, 0.4600, 0.3075,
        0.3075])
DEBUG:src.train:Log Probabilities: tensor([-0.6721, -0.6721, -0.6721, -0.7147, -0.6721, -0.7147, -0.6721, -0.7147,
        -0.6721, -0.6721], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [ True  True False False False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 0 1 0 1 0 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 0, 1, 0, 1, 0, 1, 1])
DEBUG:src.train:Action Probs: tensor([[0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 0, 1, 0, 0, 0, 0, 0, 1, 1])
DEBUG:src.train:Action words: ['orange' 'apple' 'orange' 'apple' 'apple' 'apple' 'apple' 'apple'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4800, 0.3209, 0.3209, 0.3209, 0.4800, 0.4800, 0.3209, 0.4800, 0.3209,
        0.3209])
DEBUG:src.train:Log Probabilities: tensor([-0.6721, -0.7147, -0.6721, -0.7147, -0.7147, -0.7147, -0.7147, -0.7147,
        -0.6721, -0.6721], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [ True False False False  True  True False  True False False]
DEBUG:src.train:Input Word Indices: [1 0 1 0 0 0 0 0 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 0, 1, 0, 0, 0, 0, 0, 1, 1])
DEBUG:src.train:Action Probs: tensor([[0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 0, 0, 1, 0, 0, 1, 0, 0, 1])
DEBUG:src.train:Action words: ['orange' 'apple' 'apple' 'orange' 'apple' 'apple' 'orange' 'apple'
 'apple' 'orange']
DEBUG:src.train:Rewards: tensor([0.5000, 0.3343, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.5000,
        0.3343])
DEBUG:src.train:Log Probabilities: tensor([-0.6721, -0.7147, -0.7147, -0.6721, -0.7147, -0.7147, -0.6721, -0.7147,
        -0.7147, -0.6721], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [ True False  True  True  True  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 0 0 1 0 0 1 0 0 1]
DEBUG:src.train:Input Tensor: tensor([1, 0, 0, 1, 0, 0, 1, 0, 0, 1])
DEBUG:src.train:Action Probs: tensor([[0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([0, 1, 1, 0, 0, 1, 0, 0, 0, 1])
DEBUG:src.train:Action words: ['apple' 'orange' 'orange' 'apple' 'apple' 'orange' 'apple' 'apple'
 'apple' 'orange']
DEBUG:src.train:Rewards: tensor([0.3476, 0.5200, 0.3476, 0.3476, 0.5200, 0.3476, 0.3476, 0.5200, 0.5200,
        0.3476])
DEBUG:src.train:Log Probabilities: tensor([-0.7147, -0.6721, -0.6721, -0.7147, -0.7147, -0.6721, -0.7147, -0.7147,
        -0.7147, -0.6721], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [False  True False False  True False False  True  True False]
DEBUG:src.train:Input Word Indices: [0 1 1 0 0 1 0 0 0 1]
DEBUG:src.train:Input Tensor: tensor([0, 1, 1, 0, 0, 1, 0, 0, 0, 1])
DEBUG:src.train:Action Probs: tensor([[0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 0, 1, 0, 0, 1, 1, 0, 1, 1])
DEBUG:src.train:Action words: ['orange' 'apple' 'orange' 'apple' 'apple' 'orange' 'orange' 'apple'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5400, 0.3610, 0.3610, 0.3610, 0.5400, 0.3610, 0.5400, 0.5400, 0.3610,
        0.3610])
DEBUG:src.train:Log Probabilities: tensor([-0.6721, -0.7147, -0.6721, -0.7147, -0.7147, -0.6721, -0.6721, -0.7147,
        -0.6721, -0.6721], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [ True False False False  True False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 0 1 0 0 1 1 0 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 0, 1, 0, 0, 1, 1, 0, 1, 1])
DEBUG:src.train:Action Probs: tensor([[0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([0, 1, 1, 0, 0, 1, 1, 0, 0, 0])
DEBUG:src.train:Action words: ['apple' 'orange' 'orange' 'apple' 'apple' 'orange' 'orange' 'apple'
 'apple' 'apple']
DEBUG:src.train:Rewards: tensor([0.3744, 0.5600, 0.3744, 0.3744, 0.5600, 0.3744, 0.5600, 0.5600, 0.5600,
        0.5600])
DEBUG:src.train:Log Probabilities: tensor([-0.7147, -0.6721, -0.6721, -0.7147, -0.7147, -0.6721, -0.6721, -0.7147,
        -0.7147, -0.7147], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [False  True False False  True False  True  True  True  True]
DEBUG:src.train:Input Word Indices: [0 1 1 0 0 1 1 0 0 0]
DEBUG:src.train:Input Tensor: tensor([0, 1, 1, 0, 0, 1, 1, 0, 0, 0])
DEBUG:src.train:Action Probs: tensor([[0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 0, 0, 0, 0, 1, 0, 1, 1, 0])
DEBUG:src.train:Action words: ['orange' 'apple' 'apple' 'apple' 'apple' 'orange' 'apple' 'orange'
 'orange' 'apple']
DEBUG:src.train:Rewards: tensor([0.5800, 0.3878, 0.5800, 0.3878, 0.5800, 0.3878, 0.3878, 0.3878, 0.3878,
        0.5800])
DEBUG:src.train:Log Probabilities: tensor([-0.6721, -0.7147, -0.7147, -0.7147, -0.7147, -0.6721, -0.7147, -0.6721,
        -0.6721, -0.7147], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [ True False  True False  True False False False False  True]
DEBUG:src.train:Input Word Indices: [1 0 0 0 0 1 0 1 1 0]
DEBUG:src.train:Input Tensor: tensor([1, 0, 0, 0, 0, 1, 0, 1, 1, 0])
DEBUG:src.train:Action Probs: tensor([[0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 0, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'apple' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6000, 0.6000, 0.6000, 0.6000, 0.4011, 0.4011, 0.6000, 0.4011, 0.4011,
        0.4011])
DEBUG:src.train:Log Probabilities: tensor([-0.6721, -0.6721, -0.7147, -0.6721, -0.6721, -0.6721, -0.6721, -0.6721,
        -0.6721, -0.6721], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [ True  True  True  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 0 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 0, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 0, 1, 0, 1, 1, 0, 0, 1, 1])
DEBUG:src.train:Action words: ['orange' 'apple' 'orange' 'apple' 'orange' 'orange' 'apple' 'apple'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6200, 0.4145, 0.4145, 0.4145, 0.4145, 0.4145, 0.4145, 0.6200, 0.4145,
        0.4145])
DEBUG:src.train:Log Probabilities: tensor([-0.6721, -0.7147, -0.6721, -0.7147, -0.6721, -0.6721, -0.7147, -0.7147,
        -0.6721, -0.6721], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [ True False False False False False False  True False False]
DEBUG:src.train:Input Word Indices: [1 0 1 0 1 1 0 0 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 0, 1, 0, 1, 1, 0, 0, 1, 1])
DEBUG:src.train:Action Probs: tensor([[0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 0, 0, 0, 1, 1, 0, 0, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'apple' 'apple' 'apple' 'orange' 'orange' 'apple'
 'apple' 'orange']
DEBUG:src.train:Rewards: tensor([0.6400, 0.6400, 0.6400, 0.4279, 0.6400, 0.4279, 0.6400, 0.6400, 0.6400,
        0.4279])
DEBUG:src.train:Log Probabilities: tensor([-0.6721, -0.6721, -0.7147, -0.7147, -0.7147, -0.6721, -0.6721, -0.7147,
        -0.7147, -0.6721], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [ True  True  True False  True False  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 0 0 0 1 1 0 0 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 0, 0, 0, 1, 1, 0, 0, 1])
DEBUG:src.train:Action Probs: tensor([[0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([0, 1, 0, 1, 1, 1, 0, 1, 0, 0])
DEBUG:src.train:Action words: ['apple' 'orange' 'apple' 'orange' 'orange' 'orange' 'apple' 'orange'
 'apple' 'apple']
DEBUG:src.train:Rewards: tensor([0.4412, 0.6600, 0.6600, 0.6600, 0.4412, 0.4412, 0.4412, 0.4412, 0.6600,
        0.6600])
DEBUG:src.train:Log Probabilities: tensor([-0.7147, -0.6721, -0.7147, -0.6721, -0.6721, -0.6721, -0.7147, -0.6721,
        -0.7147, -0.7147], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [False  True  True  True False False False False  True  True]
DEBUG:src.train:Input Word Indices: [0 1 0 1 1 1 0 1 0 0]
DEBUG:src.train:Input Tensor: tensor([0, 1, 0, 1, 1, 1, 0, 1, 0, 0])
DEBUG:src.train:Action Probs: tensor([[0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([0, 1, 1, 1, 0, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['apple' 'orange' 'orange' 'orange' 'apple' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4546, 0.6800, 0.4546, 0.6800, 0.6800, 0.4546, 0.6800, 0.4546, 0.4546,
        0.4546])
DEBUG:src.train:Log Probabilities: tensor([-0.7147, -0.6721, -0.6721, -0.6721, -0.7147, -0.6721, -0.6721, -0.6721,
        -0.6721, -0.6721], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [False  True False  True  True False  True False False False]
DEBUG:src.train:Input Word Indices: [0 1 1 1 0 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([0, 1, 1, 1, 0, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 0, 0, 1, 0, 1, 0, 0, 0, 1])
DEBUG:src.train:Action words: ['orange' 'apple' 'apple' 'orange' 'apple' 'orange' 'apple' 'apple'
 'apple' 'orange']
DEBUG:src.train:Rewards: tensor([0.7000, 0.4680, 0.7000, 0.7000, 0.7000, 0.4680, 0.4680, 0.7000, 0.7000,
        0.4680])
DEBUG:src.train:Log Probabilities: tensor([-0.6721, -0.7147, -0.7147, -0.6721, -0.7147, -0.6721, -0.7147, -0.7147,
        -0.7147, -0.6721], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [ True False  True  True  True False False  True  True False]
DEBUG:src.train:Input Word Indices: [1 0 0 1 0 1 0 0 0 1]
DEBUG:src.train:Input Tensor: tensor([1, 0, 0, 1, 0, 1, 0, 0, 0, 1])
DEBUG:src.train:Action Probs: tensor([[0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 0, 1, 1, 0, 0, 0, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'apple' 'orange' 'orange' 'apple' 'apple' 'apple'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7200, 0.7200, 0.7200, 0.7200, 0.4814, 0.7200, 0.4814, 0.7200, 0.4814,
        0.4814])
DEBUG:src.train:Log Probabilities: tensor([-0.6721, -0.6721, -0.7147, -0.6721, -0.6721, -0.7147, -0.7147, -0.7147,
        -0.6721, -0.6721], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [ True  True  True  True False  True False  True False False]
DEBUG:src.train:Input Word Indices: [1 1 0 1 1 0 0 0 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 0, 1, 1, 0, 0, 0, 1, 1])
DEBUG:src.train:Action Probs: tensor([[0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([0, 1, 0, 0, 1, 1, 0, 0, 1, 0])
DEBUG:src.train:Action words: ['apple' 'orange' 'apple' 'apple' 'orange' 'orange' 'apple' 'apple'
 'orange' 'apple']
DEBUG:src.train:Rewards: tensor([0.4947, 0.7400, 0.7400, 0.4947, 0.4947, 0.4947, 0.4947, 0.7400, 0.4947,
        0.7400])
DEBUG:src.train:Log Probabilities: tensor([-0.7147, -0.6721, -0.7147, -0.7147, -0.6721, -0.6721, -0.7147, -0.7147,
        -0.6721, -0.7147], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [False  True  True False False False False  True False  True]
DEBUG:src.train:Input Word Indices: [0 1 0 0 1 1 0 0 1 0]
DEBUG:src.train:Input Tensor: tensor([0, 1, 0, 0, 1, 1, 0, 0, 1, 0])
DEBUG:src.train:Action Probs: tensor([[0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 0, 0, 0, 1, 0, 0, 1, 0, 1])
DEBUG:src.train:Action words: ['orange' 'apple' 'apple' 'apple' 'orange' 'apple' 'apple' 'orange'
 'apple' 'orange']
DEBUG:src.train:Rewards: tensor([0.7600, 0.5081, 0.7600, 0.5081, 0.5081, 0.7600, 0.5081, 0.5081, 0.7600,
        0.5081])
DEBUG:src.train:Log Probabilities: tensor([-0.6721, -0.7147, -0.7147, -0.7147, -0.6721, -0.7147, -0.7147, -0.6721,
        -0.7147, -0.6721], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [ True False  True False False  True False False  True False]
DEBUG:src.train:Input Word Indices: [1 0 0 0 1 0 0 1 0 1]
DEBUG:src.train:Input Tensor: tensor([1, 0, 0, 0, 1, 0, 0, 1, 0, 1])
DEBUG:src.train:Action Probs: tensor([[0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'apple' 'apple' 'apple' 'apple'
 'apple' 'orange']
DEBUG:src.train:Rewards: tensor([0.7800, 0.7800, 0.5215, 0.7800, 0.7800, 0.7800, 0.5215, 0.7800, 0.7800,
        0.5215])
DEBUG:src.train:Log Probabilities: tensor([-0.6721, -0.6721, -0.6721, -0.6721, -0.7147, -0.7147, -0.7147, -0.7147,
        -0.7147, -0.6721], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [ True  True False  True  True  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 0 0 0 0 0 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 0, 0, 0, 0, 0, 1])
DEBUG:src.train:Action Probs: tensor([[0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 0, 1, 0, 0, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'apple' 'orange' 'apple' 'apple' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8000, 0.8000, 0.8000, 0.8000, 0.8000, 0.8000, 0.8000, 0.5348, 0.5348,
        0.5348])
DEBUG:src.train:Log Probabilities: tensor([-0.6721, -0.6721, -0.7147, -0.6721, -0.7147, -0.7147, -0.6721, -0.6721,
        -0.6721, -0.6721], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [ True  True  True  True  True  True  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 0 1 0 0 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 0, 1, 0, 0, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([0, 1, 0, 1, 0, 0, 0, 0, 1, 1])
DEBUG:src.train:Action words: ['apple' 'orange' 'apple' 'orange' 'apple' 'apple' 'apple' 'apple'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5482, 0.8200, 0.8200, 0.8200, 0.8200, 0.8200, 0.5482, 0.8200, 0.5482,
        0.5482])
DEBUG:src.train:Log Probabilities: tensor([-0.7147, -0.6721, -0.7147, -0.6721, -0.7147, -0.7147, -0.7147, -0.7147,
        -0.6721, -0.6721], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [False  True  True  True  True  True False  True False False]
DEBUG:src.train:Input Word Indices: [0 1 0 1 0 0 0 0 1 1]
DEBUG:src.train:Input Tensor: tensor([0, 1, 0, 1, 0, 0, 0, 0, 1, 1])
DEBUG:src.train:Action Probs: tensor([[0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([0, 1, 0, 1, 0, 0, 1, 0, 0, 0])
DEBUG:src.train:Action words: ['apple' 'orange' 'apple' 'orange' 'apple' 'apple' 'orange' 'apple'
 'apple' 'apple']
DEBUG:src.train:Rewards: tensor([0.5616, 0.8400, 0.8400, 0.8400, 0.8400, 0.8400, 0.8400, 0.8400, 0.8400,
        0.8400])
DEBUG:src.train:Log Probabilities: tensor([-0.7147, -0.6721, -0.7147, -0.6721, -0.7147, -0.7147, -0.6721, -0.7147,
        -0.7147, -0.7147], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [False  True  True  True  True  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [0 1 0 1 0 0 1 0 0 0]
DEBUG:src.train:Input Tensor: tensor([0, 1, 0, 1, 0, 0, 1, 0, 0, 0])
DEBUG:src.train:Action Probs: tensor([[0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([0, 1, 0, 0, 1, 0, 1, 1, 0, 1])
DEBUG:src.train:Action words: ['apple' 'orange' 'apple' 'apple' 'orange' 'apple' 'orange' 'orange'
 'apple' 'orange']
DEBUG:src.train:Rewards: tensor([0.5750, 0.8600, 0.8600, 0.5750, 0.5750, 0.8600, 0.8600, 0.5750, 0.8600,
        0.5750])
DEBUG:src.train:Log Probabilities: tensor([-0.7147, -0.6721, -0.7147, -0.7147, -0.6721, -0.7147, -0.6721, -0.6721,
        -0.7147, -0.6721], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [False  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [0 1 0 0 1 0 1 1 0 1]
DEBUG:src.train:Input Tensor: tensor([0, 1, 0, 0, 1, 0, 1, 1, 0, 1])
DEBUG:src.train:Action Probs: tensor([[0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 0, 0, 1, 1, 1, 0, 0, 0, 0])
DEBUG:src.train:Action words: ['orange' 'apple' 'apple' 'orange' 'orange' 'orange' 'apple' 'apple'
 'apple' 'apple']
DEBUG:src.train:Rewards: tensor([0.8800, 0.5883, 0.8800, 0.8800, 0.5883, 0.5883, 0.5883, 0.8800, 0.8800,
        0.8800])
DEBUG:src.train:Log Probabilities: tensor([-0.6721, -0.7147, -0.7147, -0.6721, -0.6721, -0.6721, -0.7147, -0.7147,
        -0.7147, -0.7147], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [ True False  True  True False False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 0 0 1 1 1 0 0 0 0]
DEBUG:src.train:Input Tensor: tensor([1, 0, 0, 1, 1, 1, 0, 0, 0, 0])
DEBUG:src.train:Action Probs: tensor([[0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([0, 1, 0, 0, 1, 0, 1, 0, 1, 1])
DEBUG:src.train:Action words: ['apple' 'orange' 'apple' 'apple' 'orange' 'apple' 'orange' 'apple'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6017, 0.9000, 0.9000, 0.6017, 0.6017, 0.9000, 0.9000, 0.9000, 0.6017,
        0.6017])
DEBUG:src.train:Log Probabilities: tensor([-0.7147, -0.6721, -0.7147, -0.7147, -0.6721, -0.7147, -0.6721, -0.7147,
        -0.6721, -0.6721], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [False  True  True False False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [0 1 0 0 1 0 1 0 1 1]
DEBUG:src.train:Input Tensor: tensor([0, 1, 0, 0, 1, 0, 1, 0, 1, 1])
DEBUG:src.train:Action Probs: tensor([[0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 0, 1, 0, 0, 0, 1, 1, 1, 0])
DEBUG:src.train:Action words: ['orange' 'apple' 'orange' 'apple' 'apple' 'apple' 'orange' 'orange'
 'orange' 'apple']
DEBUG:src.train:Rewards: tensor([0.9200, 0.6151, 0.6151, 0.6151, 0.9200, 0.9200, 0.9200, 0.6151, 0.6151,
        0.9200])
DEBUG:src.train:Log Probabilities: tensor([-0.6721, -0.7147, -0.6721, -0.7147, -0.7147, -0.7147, -0.6721, -0.6721,
        -0.6721, -0.7147], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [ True False False False  True  True  True False False  True]
DEBUG:src.train:Input Word Indices: [1 0 1 0 0 0 1 1 1 0]
DEBUG:src.train:Input Tensor: tensor([1, 0, 1, 0, 0, 0, 1, 1, 1, 0])
DEBUG:src.train:Action Probs: tensor([[0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([0, 0, 1, 1, 0, 0, 1, 1, 1, 0])
DEBUG:src.train:Action words: ['apple' 'apple' 'orange' 'orange' 'apple' 'apple' 'orange' 'orange'
 'orange' 'apple']
DEBUG:src.train:Rewards: tensor([0.6284, 0.6284, 0.6284, 0.9400, 0.9400, 0.9400, 0.9400, 0.6284, 0.6284,
        0.9400])
DEBUG:src.train:Log Probabilities: tensor([-0.7147, -0.7147, -0.6721, -0.6721, -0.7147, -0.7147, -0.6721, -0.6721,
        -0.6721, -0.7147], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [False False False  True  True  True  True False False  True]
DEBUG:src.train:Input Word Indices: [0 0 1 1 0 0 1 1 1 0]
DEBUG:src.train:Input Tensor: tensor([0, 0, 1, 1, 0, 0, 1, 1, 1, 0])
DEBUG:src.train:Action Probs: tensor([[0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([0, 0, 0, 1, 1, 1, 1, 0, 1, 1])
DEBUG:src.train:Action words: ['apple' 'apple' 'apple' 'orange' 'orange' 'orange' 'orange' 'apple'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6418, 0.6418, 0.9600, 0.9600, 0.6418, 0.6418, 0.9600, 0.9600, 0.6418,
        0.6418])
DEBUG:src.train:Log Probabilities: tensor([-0.7147, -0.7147, -0.7147, -0.6721, -0.6721, -0.6721, -0.6721, -0.7147,
        -0.6721, -0.6721], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [False False  True  True False False  True  True False False]
DEBUG:src.train:Input Word Indices: [0 0 0 1 1 1 1 0 1 1]
DEBUG:src.train:Input Tensor: tensor([0, 0, 0, 1, 1, 1, 1, 0, 1, 1])
DEBUG:src.train:Action Probs: tensor([[0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106],
        [0.4894, 0.5106]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([0, 1, 0, 0, 0, 0, 1, 1, 0, 0])
DEBUG:src.train:Action words: ['apple' 'orange' 'apple' 'apple' 'apple' 'apple' 'orange' 'orange'
 'apple' 'apple']
DEBUG:src.train:Rewards: tensor([0.6552, 0.9800, 0.9800, 0.6552, 0.9800, 0.9800, 0.9800, 0.6552, 0.9800,
        0.9800])
DEBUG:src.train:Log Probabilities: tensor([-0.7147, -0.6721, -0.7147, -0.7147, -0.7147, -0.7147, -0.6721, -0.6721,
        -0.7147, -0.7147], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 1: Guess correctness - [False  True  True False  True  True  True False  True  True]
DEBUG:src.train:Log Probs: tensor([[-0.6942, -0.6921, -0.6921, -0.6921, -0.6942, -0.6942, -0.6942, -0.6921,
         -0.6921, -0.6921],
        [-0.6853, -0.7010, -0.6853, -0.7010, -0.7010, -0.6853, -0.7010, -0.7010,
         -0.6853, -0.6853],
        [-0.6809, -0.6809, -0.6809, -0.7056, -0.7056, -0.7056, -0.7056, -0.7056,
         -0.7056, -0.6809],
        [-0.6779, -0.6779, -0.7086, -0.7086, -0.7086, -0.6779, -0.6779, -0.6779,
         -0.6779, -0.6779],
        [-0.6759, -0.6759, -0.7107, -0.6759, -0.6759, -0.6759, -0.7107, -0.6759,
         -0.7107, -0.7107],
        [-0.7120, -0.7120, -0.6746, -0.7120, -0.7120, -0.6746, -0.6746, -0.6746,
         -0.6746, -0.6746],
        [-0.6737, -0.7130, -0.7130, -0.6737, -0.6737, -0.6737, -0.7130, -0.7130,
         -0.6737, -0.6737],
        [-0.6732, -0.7136, -0.7136, -0.7136, -0.6732, -0.7136, -0.7136, -0.7136,
         -0.6732, -0.6732],
        [-0.6728, -0.6728, -0.7139, -0.7139, -0.7139, -0.6728, -0.6728, -0.6728,
         -0.6728, -0.6728],
        [-0.6725, -0.6725, -0.6725, -0.6725, -0.7142, -0.7142, -0.6725, -0.6725,
         -0.7142, -0.6725],
        [-0.7144, -0.6724, -0.6724, -0.6724, -0.6724, -0.7144, -0.6724, -0.6724,
         -0.7144, -0.6724],
        [-0.6723, -0.7145, -0.7145, -0.6723, -0.6723, -0.7145, -0.6723, -0.7145,
         -0.6723, -0.7145],
        [-0.6722, -0.7145, -0.6722, -0.7145, -0.6722, -0.6722, -0.6722, -0.7145,
         -0.7145, -0.7145],
        [-0.6722, -0.7146, -0.6722, -0.7146, -0.7146, -0.7146, -0.7146, -0.7146,
         -0.7146, -0.6722],
        [-0.6721, -0.6721, -0.6721, -0.7146, -0.7146, -0.7146, -0.7146, -0.6721,
         -0.6721, -0.6721],
        [-0.7146, -0.6721, -0.7146, -0.7146, -0.6721, -0.7146, -0.6721, -0.7146,
         -0.6721, -0.6721],
        [-0.6721, -0.7146, -0.6721, -0.6721, -0.7146, -0.7146, -0.6721, -0.6721,
         -0.7146, -0.6721],
        [-0.7146, -0.7146, -0.7146, -0.7146, -0.6721, -0.7146, -0.7146, -0.6721,
         -0.6721, -0.6721],
        [-0.6721, -0.6721, -0.7147, -0.7147, -0.6721, -0.6721, -0.7147, -0.6721,
         -0.6721, -0.7147],
        [-0.7147, -0.6721, -0.6721, -0.6721, -0.6721, -0.7147, -0.6721, -0.7147,
         -0.6721, -0.7147],
        [-0.6721, -0.7147, -0.6721, -0.7147, -0.6721, -0.7147, -0.6721, -0.6721,
         -0.7147, -0.6721],
        [-0.7147, -0.7147, -0.7147, -0.7147, -0.7147, -0.6721, -0.6721, -0.6721,
         -0.6721, -0.6721],
        [-0.6721, -0.6721, -0.6721, -0.6721, -0.6721, -0.6721, -0.6721, -0.6721,
         -0.7147, -0.6721],
        [-0.6721, -0.6721, -0.6721, -0.7147, -0.6721, -0.7147, -0.6721, -0.7147,
         -0.6721, -0.6721],
        [-0.6721, -0.7147, -0.6721, -0.7147, -0.7147, -0.7147, -0.7147, -0.7147,
         -0.6721, -0.6721],
        [-0.6721, -0.7147, -0.7147, -0.6721, -0.7147, -0.7147, -0.6721, -0.7147,
         -0.7147, -0.6721],
        [-0.7147, -0.6721, -0.6721, -0.7147, -0.7147, -0.6721, -0.7147, -0.7147,
         -0.7147, -0.6721],
        [-0.6721, -0.7147, -0.6721, -0.7147, -0.7147, -0.6721, -0.6721, -0.7147,
         -0.6721, -0.6721],
        [-0.7147, -0.6721, -0.6721, -0.7147, -0.7147, -0.6721, -0.6721, -0.7147,
         -0.7147, -0.7147],
        [-0.6721, -0.7147, -0.7147, -0.7147, -0.7147, -0.6721, -0.7147, -0.6721,
         -0.6721, -0.7147],
        [-0.6721, -0.6721, -0.7147, -0.6721, -0.6721, -0.6721, -0.6721, -0.6721,
         -0.6721, -0.6721],
        [-0.6721, -0.7147, -0.6721, -0.7147, -0.6721, -0.6721, -0.7147, -0.7147,
         -0.6721, -0.6721],
        [-0.6721, -0.6721, -0.7147, -0.7147, -0.7147, -0.6721, -0.6721, -0.7147,
         -0.7147, -0.6721],
        [-0.7147, -0.6721, -0.7147, -0.6721, -0.6721, -0.6721, -0.7147, -0.6721,
         -0.7147, -0.7147],
        [-0.7147, -0.6721, -0.6721, -0.6721, -0.7147, -0.6721, -0.6721, -0.6721,
         -0.6721, -0.6721],
        [-0.6721, -0.7147, -0.7147, -0.6721, -0.7147, -0.6721, -0.7147, -0.7147,
         -0.7147, -0.6721],
        [-0.6721, -0.6721, -0.7147, -0.6721, -0.6721, -0.7147, -0.7147, -0.7147,
         -0.6721, -0.6721],
        [-0.7147, -0.6721, -0.7147, -0.7147, -0.6721, -0.6721, -0.7147, -0.7147,
         -0.6721, -0.7147],
        [-0.6721, -0.7147, -0.7147, -0.7147, -0.6721, -0.7147, -0.7147, -0.6721,
         -0.7147, -0.6721],
        [-0.6721, -0.6721, -0.6721, -0.6721, -0.7147, -0.7147, -0.7147, -0.7147,
         -0.7147, -0.6721],
        [-0.6721, -0.6721, -0.7147, -0.6721, -0.7147, -0.7147, -0.6721, -0.6721,
         -0.6721, -0.6721],
        [-0.7147, -0.6721, -0.7147, -0.6721, -0.7147, -0.7147, -0.7147, -0.7147,
         -0.6721, -0.6721],
        [-0.7147, -0.6721, -0.7147, -0.6721, -0.7147, -0.7147, -0.6721, -0.7147,
         -0.7147, -0.7147],
        [-0.7147, -0.6721, -0.7147, -0.7147, -0.6721, -0.7147, -0.6721, -0.6721,
         -0.7147, -0.6721],
        [-0.6721, -0.7147, -0.7147, -0.6721, -0.6721, -0.6721, -0.7147, -0.7147,
         -0.7147, -0.7147],
        [-0.7147, -0.6721, -0.7147, -0.7147, -0.6721, -0.7147, -0.6721, -0.7147,
         -0.6721, -0.6721],
        [-0.6721, -0.7147, -0.6721, -0.7147, -0.7147, -0.7147, -0.6721, -0.6721,
         -0.6721, -0.7147],
        [-0.7147, -0.7147, -0.6721, -0.6721, -0.7147, -0.7147, -0.6721, -0.6721,
         -0.6721, -0.7147],
        [-0.7147, -0.7147, -0.7147, -0.6721, -0.6721, -0.6721, -0.6721, -0.7147,
         -0.6721, -0.6721],
        [-0.7147, -0.6721, -0.7147, -0.7147, -0.7147, -0.7147, -0.6721, -0.6721,
         -0.7147, -0.7147]], grad_fn=<CatBackward0>)
INFO:src.train:Episode 1: Cumulative reward: 206.36655024439096
INFO:src.train:Episode 1: Reward Differences: 8.67194889485836
INFO:src.train:Episode 1: Average loss: 2.768160343170166
INFO:src.train:Episode 1: Last Step Accuracy: 0.699999988079071
DEBUG:src.train:Episode 2: Input words: ['orange', 'apple', 'orange', 'orange', 'orange', 'apple', 'apple', 'apple', 'orange', 'orange']
DEBUG:src.train:Episode 2: Target words: ['apple', 'apple', 'orange', 'orange', 'orange', 'orange', 'apple', 'apple', 'apple', 'orange']
DEBUG:src.train:Input Word Indices: [1 0 1 1 1 0 0 0 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 0, 1, 1, 1, 0, 0, 0, 1, 1])
DEBUG:src.train:Action Probs: tensor([[0.2517, 0.7483],
        [0.2517, 0.7483],
        [0.2517, 0.7483],
        [0.2517, 0.7483],
        [0.2517, 0.7483],
        [0.2517, 0.7483],
        [0.2517, 0.7483],
        [0.2517, 0.7483],
        [0.2517, 0.7483],
        [0.2517, 0.7483]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
DEBUG:src.train:Log Probabilities: tensor([-0.2899, -0.2899, -0.2899, -0.2899, -0.2899, -0.2899, -0.2899, -0.2899,
        -0.2899, -0.2899], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[0.0123, 0.9877],
        [0.0123, 0.9877],
        [0.0123, 0.9877],
        [0.0123, 0.9877],
        [0.0123, 0.9877],
        [0.0123, 0.9877],
        [0.0123, 0.9877],
        [0.0123, 0.9877],
        [0.0123, 0.9877],
        [0.0123, 0.9877]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0134, 0.0134, 0.0200, 0.0200, 0.0200, 0.0200, 0.0134, 0.0134, 0.0134,
        0.0200])
DEBUG:src.train:Log Probabilities: tensor([-0.0123, -0.0123, -0.0123, -0.0123, -0.0123, -0.0123, -0.0123, -0.0123,
        -0.0123, -0.0123], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5709e-04, 9.9974e-01],
        [2.5717e-04, 9.9974e-01],
        [2.5709e-04, 9.9974e-01],
        [2.5709e-04, 9.9974e-01],
        [2.5709e-04, 9.9974e-01],
        [2.5717e-04, 9.9974e-01],
        [2.5717e-04, 9.9974e-01],
        [2.5717e-04, 9.9974e-01],
        [2.5709e-04, 9.9974e-01],
        [2.5709e-04, 9.9974e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0267, 0.0267, 0.0400, 0.0400, 0.0400, 0.0400, 0.0267, 0.0267, 0.0267,
        0.0400])
DEBUG:src.train:Log Probabilities: tensor([-0.0003, -0.0003, -0.0003, -0.0003, -0.0003, -0.0003, -0.0003, -0.0003,
        -0.0003, -0.0003], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1419e-04, 9.9989e-01],
        [1.1419e-04, 9.9989e-01],
        [1.1419e-04, 9.9989e-01],
        [1.1419e-04, 9.9989e-01],
        [1.1419e-04, 9.9989e-01],
        [1.1419e-04, 9.9989e-01],
        [1.1419e-04, 9.9989e-01],
        [1.1419e-04, 9.9989e-01],
        [1.1419e-04, 9.9989e-01],
        [1.1419e-04, 9.9989e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0401, 0.0401, 0.0600, 0.0600, 0.0600, 0.0600, 0.0401, 0.0401, 0.0401,
        0.0600])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0401e-04, 9.9990e-01],
        [1.0401e-04, 9.9990e-01],
        [1.0401e-04, 9.9990e-01],
        [1.0401e-04, 9.9990e-01],
        [1.0401e-04, 9.9990e-01],
        [1.0401e-04, 9.9990e-01],
        [1.0401e-04, 9.9990e-01],
        [1.0401e-04, 9.9990e-01],
        [1.0401e-04, 9.9990e-01],
        [1.0401e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0535, 0.0535, 0.0800, 0.0800, 0.0800, 0.0800, 0.0535, 0.0535, 0.0535,
        0.0800])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0264e-04, 9.9990e-01],
        [1.0264e-04, 9.9990e-01],
        [1.0264e-04, 9.9990e-01],
        [1.0264e-04, 9.9990e-01],
        [1.0264e-04, 9.9990e-01],
        [1.0264e-04, 9.9990e-01],
        [1.0264e-04, 9.9990e-01],
        [1.0264e-04, 9.9990e-01],
        [1.0264e-04, 9.9990e-01],
        [1.0264e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0669, 0.0669, 0.1000, 0.1000, 0.1000, 0.1000, 0.0669, 0.0669, 0.0669,
        0.1000])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0240e-04, 9.9990e-01],
        [1.0240e-04, 9.9990e-01],
        [1.0240e-04, 9.9990e-01],
        [1.0240e-04, 9.9990e-01],
        [1.0240e-04, 9.9990e-01],
        [1.0240e-04, 9.9990e-01],
        [1.0240e-04, 9.9990e-01],
        [1.0240e-04, 9.9990e-01],
        [1.0240e-04, 9.9990e-01],
        [1.0240e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0802, 0.0802, 0.1200, 0.1200, 0.1200, 0.1200, 0.0802, 0.0802, 0.0802,
        0.1200])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0234e-04, 9.9990e-01],
        [1.0234e-04, 9.9990e-01],
        [1.0234e-04, 9.9990e-01],
        [1.0234e-04, 9.9990e-01],
        [1.0234e-04, 9.9990e-01],
        [1.0234e-04, 9.9990e-01],
        [1.0234e-04, 9.9990e-01],
        [1.0234e-04, 9.9990e-01],
        [1.0234e-04, 9.9990e-01],
        [1.0234e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0936, 0.0936, 0.1400, 0.1400, 0.1400, 0.1400, 0.0936, 0.0936, 0.0936,
        0.1400])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0232e-04, 9.9990e-01],
        [1.0232e-04, 9.9990e-01],
        [1.0232e-04, 9.9990e-01],
        [1.0232e-04, 9.9990e-01],
        [1.0232e-04, 9.9990e-01],
        [1.0232e-04, 9.9990e-01],
        [1.0232e-04, 9.9990e-01],
        [1.0232e-04, 9.9990e-01],
        [1.0232e-04, 9.9990e-01],
        [1.0232e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1070, 0.1070, 0.1600, 0.1600, 0.1600, 0.1600, 0.1070, 0.1070, 0.1070,
        0.1600])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0231e-04, 9.9990e-01],
        [1.0231e-04, 9.9990e-01],
        [1.0231e-04, 9.9990e-01],
        [1.0231e-04, 9.9990e-01],
        [1.0231e-04, 9.9990e-01],
        [1.0231e-04, 9.9990e-01],
        [1.0231e-04, 9.9990e-01],
        [1.0231e-04, 9.9990e-01],
        [1.0231e-04, 9.9990e-01],
        [1.0231e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1203, 0.1203, 0.1800, 0.1800, 0.1800, 0.1800, 0.1203, 0.1203, 0.1203,
        0.1800])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0230e-04, 9.9990e-01],
        [1.0230e-04, 9.9990e-01],
        [1.0230e-04, 9.9990e-01],
        [1.0230e-04, 9.9990e-01],
        [1.0230e-04, 9.9990e-01],
        [1.0230e-04, 9.9990e-01],
        [1.0230e-04, 9.9990e-01],
        [1.0230e-04, 9.9990e-01],
        [1.0230e-04, 9.9990e-01],
        [1.0230e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1337, 0.1337, 0.2000, 0.2000, 0.2000, 0.2000, 0.1337, 0.1337, 0.1337,
        0.2000])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0230e-04, 9.9990e-01],
        [1.0230e-04, 9.9990e-01],
        [1.0230e-04, 9.9990e-01],
        [1.0230e-04, 9.9990e-01],
        [1.0230e-04, 9.9990e-01],
        [1.0230e-04, 9.9990e-01],
        [1.0230e-04, 9.9990e-01],
        [1.0230e-04, 9.9990e-01],
        [1.0230e-04, 9.9990e-01],
        [1.0230e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1471, 0.1471, 0.2200, 0.2200, 0.2200, 0.2200, 0.1471, 0.1471, 0.1471,
        0.2200])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1605, 0.1605, 0.2400, 0.2400, 0.2400, 0.2400, 0.1605, 0.1605, 0.1605,
        0.2400])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1738, 0.1738, 0.2600, 0.2600, 0.2600, 0.2600, 0.1738, 0.1738, 0.1738,
        0.2600])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1872, 0.1872, 0.2800, 0.2800, 0.2800, 0.2800, 0.1872, 0.1872, 0.1872,
        0.2800])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2006, 0.2006, 0.3000, 0.3000, 0.3000, 0.3000, 0.2006, 0.2006, 0.2006,
        0.3000])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2139, 0.2139, 0.3200, 0.3200, 0.3200, 0.3200, 0.2139, 0.2139, 0.2139,
        0.3200])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01],
        [1.0229e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'apple' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2273, 0.3400, 0.3400, 0.3400, 0.3400, 0.3400, 0.2273, 0.2273, 0.2273,
        0.3400])
DEBUG:src.train:Log Probabilities: tensor([-1.0229e-04, -9.1877e+00, -1.0229e-04, -1.0229e-04, -1.0229e-04,
        -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False  True  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 0 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 0, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2407, 0.2407, 0.3600, 0.3600, 0.3600, 0.3600, 0.2407, 0.2407, 0.2407,
        0.3600])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2541, 0.2541, 0.3800, 0.3800, 0.3800, 0.3800, 0.2541, 0.2541, 0.2541,
        0.3800])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2674, 0.2674, 0.4000, 0.4000, 0.4000, 0.4000, 0.2674, 0.2674, 0.2674,
        0.4000])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2808, 0.2808, 0.4200, 0.4200, 0.4200, 0.4200, 0.2808, 0.2808, 0.2808,
        0.4200])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2942, 0.2942, 0.4400, 0.4400, 0.4400, 0.4400, 0.2942, 0.2942, 0.2942,
        0.4400])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3075, 0.3075, 0.4600, 0.4600, 0.4600, 0.4600, 0.3075, 0.3075, 0.3075,
        0.4600])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3209, 0.3209, 0.4800, 0.4800, 0.4800, 0.4800, 0.3209, 0.3209, 0.3209,
        0.4800])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3343, 0.3343, 0.5000, 0.5000, 0.5000, 0.5000, 0.3343, 0.3343, 0.3343,
        0.5000])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3476, 0.3476, 0.5200, 0.5200, 0.5200, 0.5200, 0.3476, 0.3476, 0.3476,
        0.5200])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3610, 0.3610, 0.5400, 0.5400, 0.5400, 0.5400, 0.3610, 0.3610, 0.3610,
        0.5400])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3744, 0.3744, 0.5600, 0.5600, 0.5600, 0.5600, 0.3744, 0.3744, 0.3744,
        0.5600])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3878, 0.3878, 0.5800, 0.5800, 0.5800, 0.5800, 0.3878, 0.3878, 0.3878,
        0.5800])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4011, 0.4011, 0.6000, 0.6000, 0.6000, 0.6000, 0.4011, 0.4011, 0.4011,
        0.6000])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4145, 0.4145, 0.6200, 0.6200, 0.6200, 0.6200, 0.4145, 0.4145, 0.4145,
        0.6200])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4279, 0.4279, 0.6400, 0.6400, 0.6400, 0.6400, 0.4279, 0.4279, 0.4279,
        0.6400])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4412, 0.4412, 0.6600, 0.6600, 0.6600, 0.6600, 0.4412, 0.4412, 0.4412,
        0.6600])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4546, 0.4546, 0.6800, 0.6800, 0.6800, 0.6800, 0.4546, 0.4546, 0.4546,
        0.6800])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4680, 0.4680, 0.7000, 0.7000, 0.7000, 0.7000, 0.4680, 0.4680, 0.4680,
        0.7000])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4814, 0.4814, 0.7200, 0.7200, 0.7200, 0.7200, 0.4814, 0.4814, 0.4814,
        0.7200])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4947, 0.4947, 0.7400, 0.7400, 0.7400, 0.7400, 0.4947, 0.4947, 0.4947,
        0.7400])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5081, 0.5081, 0.7600, 0.7600, 0.7600, 0.7600, 0.5081, 0.5081, 0.5081,
        0.7600])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5215, 0.5215, 0.7800, 0.7800, 0.7800, 0.7800, 0.5215, 0.5215, 0.5215,
        0.7800])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5348, 0.5348, 0.8000, 0.8000, 0.8000, 0.8000, 0.5348, 0.5348, 0.5348,
        0.8000])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5482, 0.5482, 0.8200, 0.8200, 0.8200, 0.8200, 0.5482, 0.5482, 0.5482,
        0.8200])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5616, 0.5616, 0.8400, 0.8400, 0.8400, 0.8400, 0.5616, 0.5616, 0.5616,
        0.8400])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5750, 0.5750, 0.8600, 0.8600, 0.8600, 0.8600, 0.5750, 0.5750, 0.5750,
        0.8600])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5883, 0.5883, 0.8800, 0.8800, 0.8800, 0.8800, 0.5883, 0.5883, 0.5883,
        0.8800])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6017, 0.6017, 0.9000, 0.9000, 0.9000, 0.9000, 0.6017, 0.6017, 0.6017,
        0.9000])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6151, 0.6151, 0.9200, 0.9200, 0.9200, 0.9200, 0.6151, 0.6151, 0.6151,
        0.9200])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6284, 0.6284, 0.9400, 0.9400, 0.9400, 0.9400, 0.6284, 0.6284, 0.6284,
        0.9400])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6418, 0.6418, 0.9600, 0.9600, 0.9600, 0.9600, 0.6418, 0.6418, 0.6418,
        0.9600])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01],
        [1.0228e-04, 9.9990e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6552, 0.6552, 0.9800, 0.9800, 0.9800, 0.9800, 0.6552, 0.6552, 0.6552,
        0.9800])
DEBUG:src.train:Log Probabilities: tensor([-0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001, -0.0001,
        -0.0001, -0.0001], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 2: Guess correctness - [False False  True  True  True  True False False False  True]
DEBUG:src.train:Log Probs: tensor([[-2.8990e-01, -2.8990e-01, -2.8990e-01, -2.8990e-01, -2.8990e-01,
         -2.8990e-01, -2.8990e-01, -2.8990e-01, -2.8990e-01, -2.8990e-01],
        [-1.2343e-02, -1.2347e-02, -1.2343e-02, -1.2343e-02, -1.2343e-02,
         -1.2347e-02, -1.2347e-02, -1.2347e-02, -1.2343e-02, -1.2343e-02],
        [-2.5711e-04, -2.5723e-04, -2.5711e-04, -2.5711e-04, -2.5711e-04,
         -2.5723e-04, -2.5723e-04, -2.5723e-04, -2.5711e-04, -2.5711e-04],
        [-1.1421e-04, -1.1421e-04, -1.1421e-04, -1.1421e-04, -1.1421e-04,
         -1.1421e-04, -1.1421e-04, -1.1421e-04, -1.1421e-04, -1.1421e-04],
        [-1.0408e-04, -1.0408e-04, -1.0408e-04, -1.0408e-04, -1.0408e-04,
         -1.0408e-04, -1.0408e-04, -1.0408e-04, -1.0408e-04, -1.0408e-04],
        [-1.0264e-04, -1.0264e-04, -1.0264e-04, -1.0264e-04, -1.0264e-04,
         -1.0264e-04, -1.0264e-04, -1.0264e-04, -1.0264e-04, -1.0264e-04],
        [-1.0241e-04, -1.0241e-04, -1.0241e-04, -1.0241e-04, -1.0241e-04,
         -1.0241e-04, -1.0241e-04, -1.0241e-04, -1.0241e-04, -1.0241e-04],
        [-1.0241e-04, -1.0241e-04, -1.0241e-04, -1.0241e-04, -1.0241e-04,
         -1.0241e-04, -1.0241e-04, -1.0241e-04, -1.0241e-04, -1.0241e-04],
        [-1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
        [-1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
        [-1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
        [-1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
        [-1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
        [-1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
        [-1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
        [-1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
        [-1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
        [-1.0229e-04, -9.1877e+00, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
        [-1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
        [-1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
        [-1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
        [-1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
        [-1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
        [-1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
        [-1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
        [-1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
        [-1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
        [-1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
        [-1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
        [-1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
        [-1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
        [-1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
        [-1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
        [-1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
        [-1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
        [-1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
        [-1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
        [-1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
        [-1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
        [-1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
        [-1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
        [-1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
        [-1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
        [-1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
        [-1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
        [-1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
        [-1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
        [-1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
        [-1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04],
        [-1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04,
         -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04, -1.0229e-04]],
       grad_fn=<CatBackward0>)
INFO:src.train:Episode 2: Cumulative reward: 204.51044761389494
INFO:src.train:Episode 2: Reward Differences: 8.009055107831955
INFO:src.train:Episode 2: Average loss: -0.0
INFO:src.train:Episode 2: Last Step Accuracy: 0.5
DEBUG:src.train:Episode 3: Input words: ['apple', 'apple', 'apple', 'orange', 'orange', 'apple', 'apple', 'orange', 'apple', 'orange']
DEBUG:src.train:Episode 3: Target words: ['orange', 'orange', 'orange', 'orange', 'orange', 'apple', 'orange', 'apple', 'apple', 'orange']
DEBUG:src.train:Input Word Indices: [0 0 0 1 1 0 0 1 0 1]
DEBUG:src.train:Input Tensor: tensor([0, 0, 0, 1, 1, 0, 0, 1, 0, 1])
DEBUG:src.train:Action Probs: tensor([[0.0038, 0.9962],
        [0.0038, 0.9962],
        [0.0038, 0.9962],
        [0.0038, 0.9962],
        [0.0038, 0.9962],
        [0.0038, 0.9962],
        [0.0038, 0.9962],
        [0.0038, 0.9962],
        [0.0038, 0.9962],
        [0.0038, 0.9962]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
DEBUG:src.train:Log Probabilities: tensor([-0.0039, -0.0039, -0.0039, -0.0038, -0.0038, -0.0039, -0.0039, -0.0038,
        -0.0039, -0.0038], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.9782e-06, 9.9999e-01],
        [5.9782e-06, 9.9999e-01],
        [5.9782e-06, 9.9999e-01],
        [5.9686e-06, 9.9999e-01],
        [5.9686e-06, 9.9999e-01],
        [5.9782e-06, 9.9999e-01],
        [5.9782e-06, 9.9999e-01],
        [5.9686e-06, 9.9999e-01],
        [5.9782e-06, 9.9999e-01],
        [5.9686e-06, 9.9999e-01]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0200, 0.0200, 0.0200, 0.0200, 0.0200, 0.0134, 0.0200, 0.0134, 0.0134,
        0.0200])
DEBUG:src.train:Log Probabilities: tensor([-5.9605e-06, -5.9605e-06, -5.9605e-06, -5.9605e-06, -5.9605e-06,
        -5.9605e-06, -5.9605e-06, -5.9605e-06, -5.9605e-06, -5.9605e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6313e-06, 1.0000e+00],
        [2.6313e-06, 1.0000e+00],
        [2.6313e-06, 1.0000e+00],
        [2.6307e-06, 1.0000e+00],
        [2.6307e-06, 1.0000e+00],
        [2.6313e-06, 1.0000e+00],
        [2.6313e-06, 1.0000e+00],
        [2.6307e-06, 1.0000e+00],
        [2.6313e-06, 1.0000e+00],
        [2.6307e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0400, 0.0400, 0.0400, 0.0400, 0.0400, 0.0267, 0.0400, 0.0267, 0.0267,
        0.0400])
DEBUG:src.train:Log Probabilities: tensor([-2.6226e-06, -2.6226e-06, -2.6226e-06, -2.6226e-06, -2.6226e-06,
        -2.6226e-06, -2.6226e-06, -2.6226e-06, -2.6226e-06, -2.6226e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3516e-06, 1.0000e+00],
        [2.3516e-06, 1.0000e+00],
        [2.3516e-06, 1.0000e+00],
        [2.3515e-06, 1.0000e+00],
        [2.3515e-06, 1.0000e+00],
        [2.3516e-06, 1.0000e+00],
        [2.3516e-06, 1.0000e+00],
        [2.3515e-06, 1.0000e+00],
        [2.3516e-06, 1.0000e+00],
        [2.3515e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0600, 0.0600, 0.0600, 0.0600, 0.0600, 0.0401, 0.0600, 0.0401, 0.0401,
        0.0600])
DEBUG:src.train:Log Probabilities: tensor([-2.3842e-06, -2.3842e-06, -2.3842e-06, -2.3842e-06, -2.3842e-06,
        -2.3842e-06, -2.3842e-06, -2.3842e-06, -2.3842e-06, -2.3842e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3146e-06, 1.0000e+00],
        [2.3146e-06, 1.0000e+00],
        [2.3146e-06, 1.0000e+00],
        [2.3146e-06, 1.0000e+00],
        [2.3146e-06, 1.0000e+00],
        [2.3146e-06, 1.0000e+00],
        [2.3146e-06, 1.0000e+00],
        [2.3146e-06, 1.0000e+00],
        [2.3146e-06, 1.0000e+00],
        [2.3146e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0800, 0.0800, 0.0800, 0.0800, 0.0800, 0.0535, 0.0800, 0.0535, 0.0535,
        0.0800])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3091e-06, 1.0000e+00],
        [2.3091e-06, 1.0000e+00],
        [2.3091e-06, 1.0000e+00],
        [2.3091e-06, 1.0000e+00],
        [2.3091e-06, 1.0000e+00],
        [2.3091e-06, 1.0000e+00],
        [2.3091e-06, 1.0000e+00],
        [2.3091e-06, 1.0000e+00],
        [2.3091e-06, 1.0000e+00],
        [2.3091e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1000, 0.1000, 0.1000, 0.1000, 0.1000, 0.0669, 0.1000, 0.0669, 0.0669,
        0.1000])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3081e-06, 1.0000e+00],
        [2.3081e-06, 1.0000e+00],
        [2.3081e-06, 1.0000e+00],
        [2.3081e-06, 1.0000e+00],
        [2.3081e-06, 1.0000e+00],
        [2.3081e-06, 1.0000e+00],
        [2.3081e-06, 1.0000e+00],
        [2.3081e-06, 1.0000e+00],
        [2.3081e-06, 1.0000e+00],
        [2.3081e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1200, 0.1200, 0.1200, 0.1200, 0.1200, 0.0802, 0.1200, 0.0802, 0.0802,
        0.1200])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3078e-06, 1.0000e+00],
        [2.3078e-06, 1.0000e+00],
        [2.3078e-06, 1.0000e+00],
        [2.3078e-06, 1.0000e+00],
        [2.3078e-06, 1.0000e+00],
        [2.3078e-06, 1.0000e+00],
        [2.3078e-06, 1.0000e+00],
        [2.3078e-06, 1.0000e+00],
        [2.3078e-06, 1.0000e+00],
        [2.3078e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1400, 0.1400, 0.1400, 0.1400, 0.1400, 0.0936, 0.1400, 0.0936, 0.0936,
        0.1400])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3076e-06, 1.0000e+00],
        [2.3076e-06, 1.0000e+00],
        [2.3076e-06, 1.0000e+00],
        [2.3076e-06, 1.0000e+00],
        [2.3076e-06, 1.0000e+00],
        [2.3076e-06, 1.0000e+00],
        [2.3076e-06, 1.0000e+00],
        [2.3076e-06, 1.0000e+00],
        [2.3076e-06, 1.0000e+00],
        [2.3076e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1600, 0.1600, 0.1600, 0.1600, 0.1600, 0.1070, 0.1600, 0.1070, 0.1070,
        0.1600])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3075e-06, 1.0000e+00],
        [2.3075e-06, 1.0000e+00],
        [2.3075e-06, 1.0000e+00],
        [2.3075e-06, 1.0000e+00],
        [2.3075e-06, 1.0000e+00],
        [2.3075e-06, 1.0000e+00],
        [2.3075e-06, 1.0000e+00],
        [2.3075e-06, 1.0000e+00],
        [2.3075e-06, 1.0000e+00],
        [2.3075e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1800, 0.1800, 0.1800, 0.1800, 0.1800, 0.1203, 0.1800, 0.1203, 0.1203,
        0.1800])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3074e-06, 1.0000e+00],
        [2.3074e-06, 1.0000e+00],
        [2.3074e-06, 1.0000e+00],
        [2.3074e-06, 1.0000e+00],
        [2.3074e-06, 1.0000e+00],
        [2.3074e-06, 1.0000e+00],
        [2.3074e-06, 1.0000e+00],
        [2.3074e-06, 1.0000e+00],
        [2.3074e-06, 1.0000e+00],
        [2.3074e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2000, 0.2000, 0.2000, 0.2000, 0.2000, 0.1337, 0.2000, 0.1337, 0.1337,
        0.2000])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3074e-06, 1.0000e+00],
        [2.3074e-06, 1.0000e+00],
        [2.3074e-06, 1.0000e+00],
        [2.3074e-06, 1.0000e+00],
        [2.3074e-06, 1.0000e+00],
        [2.3074e-06, 1.0000e+00],
        [2.3074e-06, 1.0000e+00],
        [2.3074e-06, 1.0000e+00],
        [2.3074e-06, 1.0000e+00],
        [2.3074e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2200, 0.2200, 0.2200, 0.2200, 0.2200, 0.1471, 0.2200, 0.1471, 0.1471,
        0.2200])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3073e-06, 1.0000e+00],
        [2.3073e-06, 1.0000e+00],
        [2.3073e-06, 1.0000e+00],
        [2.3073e-06, 1.0000e+00],
        [2.3073e-06, 1.0000e+00],
        [2.3073e-06, 1.0000e+00],
        [2.3073e-06, 1.0000e+00],
        [2.3073e-06, 1.0000e+00],
        [2.3073e-06, 1.0000e+00],
        [2.3073e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2400, 0.2400, 0.2400, 0.2400, 0.2400, 0.1605, 0.2400, 0.1605, 0.1605,
        0.2400])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3073e-06, 1.0000e+00],
        [2.3073e-06, 1.0000e+00],
        [2.3073e-06, 1.0000e+00],
        [2.3073e-06, 1.0000e+00],
        [2.3073e-06, 1.0000e+00],
        [2.3073e-06, 1.0000e+00],
        [2.3073e-06, 1.0000e+00],
        [2.3073e-06, 1.0000e+00],
        [2.3073e-06, 1.0000e+00],
        [2.3073e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2600, 0.2600, 0.2600, 0.2600, 0.2600, 0.1738, 0.2600, 0.1738, 0.1738,
        0.2600])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3072e-06, 1.0000e+00],
        [2.3072e-06, 1.0000e+00],
        [2.3072e-06, 1.0000e+00],
        [2.3072e-06, 1.0000e+00],
        [2.3072e-06, 1.0000e+00],
        [2.3072e-06, 1.0000e+00],
        [2.3072e-06, 1.0000e+00],
        [2.3072e-06, 1.0000e+00],
        [2.3072e-06, 1.0000e+00],
        [2.3072e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2800, 0.2800, 0.2800, 0.2800, 0.2800, 0.1872, 0.2800, 0.1872, 0.1872,
        0.2800])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3072e-06, 1.0000e+00],
        [2.3072e-06, 1.0000e+00],
        [2.3072e-06, 1.0000e+00],
        [2.3072e-06, 1.0000e+00],
        [2.3072e-06, 1.0000e+00],
        [2.3072e-06, 1.0000e+00],
        [2.3072e-06, 1.0000e+00],
        [2.3072e-06, 1.0000e+00],
        [2.3072e-06, 1.0000e+00],
        [2.3072e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3000, 0.3000, 0.3000, 0.3000, 0.3000, 0.2006, 0.3000, 0.2006, 0.2006,
        0.3000])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3072e-06, 1.0000e+00],
        [2.3072e-06, 1.0000e+00],
        [2.3072e-06, 1.0000e+00],
        [2.3072e-06, 1.0000e+00],
        [2.3072e-06, 1.0000e+00],
        [2.3072e-06, 1.0000e+00],
        [2.3072e-06, 1.0000e+00],
        [2.3072e-06, 1.0000e+00],
        [2.3072e-06, 1.0000e+00],
        [2.3072e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3200, 0.3200, 0.3200, 0.3200, 0.3200, 0.2139, 0.3200, 0.2139, 0.2139,
        0.3200])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3400, 0.3400, 0.3400, 0.3400, 0.3400, 0.2273, 0.3400, 0.2273, 0.2273,
        0.3400])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3600, 0.3600, 0.3600, 0.3600, 0.3600, 0.2407, 0.3600, 0.2407, 0.2407,
        0.3600])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3800, 0.3800, 0.3800, 0.3800, 0.3800, 0.2541, 0.3800, 0.2541, 0.2541,
        0.3800])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4000, 0.4000, 0.4000, 0.4000, 0.4000, 0.2674, 0.4000, 0.2674, 0.2674,
        0.4000])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4200, 0.4200, 0.4200, 0.4200, 0.4200, 0.2808, 0.4200, 0.2808, 0.2808,
        0.4200])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00],
        [2.3071e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4400, 0.4400, 0.4400, 0.4400, 0.4400, 0.2942, 0.4400, 0.2942, 0.2942,
        0.4400])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4600, 0.4600, 0.4600, 0.4600, 0.4600, 0.3075, 0.4600, 0.3075, 0.3075,
        0.4600])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4800, 0.4800, 0.4800, 0.4800, 0.4800, 0.3209, 0.4800, 0.3209, 0.3209,
        0.4800])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5000, 0.5000, 0.5000, 0.5000, 0.5000, 0.3343, 0.5000, 0.3343, 0.3343,
        0.5000])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5200, 0.5200, 0.5200, 0.5200, 0.5200, 0.3476, 0.5200, 0.3476, 0.3476,
        0.5200])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5400, 0.5400, 0.5400, 0.5400, 0.5400, 0.3610, 0.5400, 0.3610, 0.3610,
        0.5400])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5600, 0.5600, 0.5600, 0.5600, 0.5600, 0.3744, 0.5600, 0.3744, 0.3744,
        0.5600])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5800, 0.5800, 0.5800, 0.5800, 0.5800, 0.3878, 0.5800, 0.3878, 0.3878,
        0.5800])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6000, 0.6000, 0.6000, 0.6000, 0.6000, 0.4011, 0.6000, 0.4011, 0.4011,
        0.6000])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6200, 0.6200, 0.6200, 0.6200, 0.6200, 0.4145, 0.6200, 0.4145, 0.4145,
        0.6200])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6400, 0.6400, 0.6400, 0.6400, 0.6400, 0.4279, 0.6400, 0.4279, 0.4279,
        0.6400])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6600, 0.6600, 0.6600, 0.6600, 0.6600, 0.4412, 0.6600, 0.4412, 0.4412,
        0.6600])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6800, 0.6800, 0.6800, 0.6800, 0.6800, 0.4546, 0.6800, 0.4546, 0.4546,
        0.6800])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7000, 0.7000, 0.7000, 0.7000, 0.7000, 0.4680, 0.7000, 0.4680, 0.4680,
        0.7000])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7200, 0.7200, 0.7200, 0.7200, 0.7200, 0.4814, 0.7200, 0.4814, 0.4814,
        0.7200])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7400, 0.7400, 0.7400, 0.7400, 0.7400, 0.4947, 0.7400, 0.4947, 0.4947,
        0.7400])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7600, 0.7600, 0.7600, 0.7600, 0.7600, 0.5081, 0.7600, 0.5081, 0.5081,
        0.7600])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7800, 0.7800, 0.7800, 0.7800, 0.7800, 0.5215, 0.7800, 0.5215, 0.5215,
        0.7800])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8000, 0.8000, 0.8000, 0.8000, 0.8000, 0.5348, 0.8000, 0.5348, 0.5348,
        0.8000])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8200, 0.8200, 0.8200, 0.8200, 0.8200, 0.5482, 0.8200, 0.5482, 0.5482,
        0.8200])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8400, 0.8400, 0.8400, 0.8400, 0.8400, 0.5616, 0.8400, 0.5616, 0.5616,
        0.8400])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8600, 0.8600, 0.8600, 0.8600, 0.8600, 0.5750, 0.8600, 0.5750, 0.5750,
        0.8600])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8800, 0.8800, 0.8800, 0.8800, 0.8800, 0.5883, 0.8800, 0.5883, 0.5883,
        0.8800])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9000, 0.9000, 0.9000, 0.9000, 0.9000, 0.6017, 0.9000, 0.6017, 0.6017,
        0.9000])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9200, 0.9200, 0.9200, 0.9200, 0.9200, 0.6151, 0.9200, 0.6151, 0.6151,
        0.9200])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9400, 0.9400, 0.9400, 0.9400, 0.9400, 0.6284, 0.9400, 0.6284, 0.6284,
        0.9400])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9600, 0.9600, 0.9600, 0.9600, 0.9600, 0.6418, 0.9600, 0.6418, 0.6418,
        0.9600])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00],
        [2.3070e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9800, 0.9800, 0.9800, 0.9800, 0.9800, 0.6552, 0.9800, 0.6552, 0.6552,
        0.9800])
DEBUG:src.train:Log Probabilities: tensor([-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
        -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 3: Guess correctness - [ True  True  True  True  True False  True False False  True]
DEBUG:src.train:Log Probs: tensor([[-3.8504e-03, -3.8504e-03, -3.8504e-03, -3.8175e-03, -3.8175e-03,
         -3.8504e-03, -3.8504e-03, -3.8175e-03, -3.8504e-03, -3.8175e-03],
        [-5.9605e-06, -5.9605e-06, -5.9605e-06, -5.9605e-06, -5.9605e-06,
         -5.9605e-06, -5.9605e-06, -5.9605e-06, -5.9605e-06, -5.9605e-06],
        [-2.6226e-06, -2.6226e-06, -2.6226e-06, -2.6226e-06, -2.6226e-06,
         -2.6226e-06, -2.6226e-06, -2.6226e-06, -2.6226e-06, -2.6226e-06],
        [-2.3842e-06, -2.3842e-06, -2.3842e-06, -2.3842e-06, -2.3842e-06,
         -2.3842e-06, -2.3842e-06, -2.3842e-06, -2.3842e-06, -2.3842e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06],
        [-2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06,
         -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06, -2.2650e-06]],
       grad_fn=<CatBackward0>)
INFO:src.train:Episode 3: Cumulative reward: 220.63865337520838
INFO:src.train:Episode 3: Reward Differences: 8.645433142781258
INFO:src.train:Episode 3: Average loss: 0.0003161924541927874
INFO:src.train:Episode 3: Last Step Accuracy: 0.699999988079071
DEBUG:src.train:Episode 4: Input words: ['apple', 'orange', 'orange', 'orange', 'orange', 'orange', 'orange', 'orange', 'apple', 'apple']
DEBUG:src.train:Episode 4: Target words: ['apple', 'orange', 'orange', 'orange', 'apple', 'orange', 'orange', 'orange', 'orange', 'apple']
DEBUG:src.train:Input Word Indices: [0 1 1 1 1 1 1 1 0 0]
DEBUG:src.train:Input Tensor: tensor([0, 1, 1, 1, 1, 1, 1, 1, 0, 0])
DEBUG:src.train:Action Probs: tensor([[4.3812e-06, 1.0000e+00],
        [4.3811e-06, 1.0000e+00],
        [4.3811e-06, 1.0000e+00],
        [4.3811e-06, 1.0000e+00],
        [4.3811e-06, 1.0000e+00],
        [4.3811e-06, 1.0000e+00],
        [4.3811e-06, 1.0000e+00],
        [4.3811e-06, 1.0000e+00],
        [4.3812e-06, 1.0000e+00],
        [4.3812e-06, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
DEBUG:src.train:Log Probabilities: tensor([-4.4108e-06, -4.4108e-06, -4.4108e-06, -4.4108e-06, -4.4108e-06,
        -4.4108e-06, -4.4108e-06, -4.4108e-06, -4.4108e-06, -4.4108e-06],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.4366e-07, 1.0000e+00],
        [1.4366e-07, 1.0000e+00],
        [1.4366e-07, 1.0000e+00],
        [1.4366e-07, 1.0000e+00],
        [1.4366e-07, 1.0000e+00],
        [1.4366e-07, 1.0000e+00],
        [1.4366e-07, 1.0000e+00],
        [1.4366e-07, 1.0000e+00],
        [1.4366e-07, 1.0000e+00],
        [1.4366e-07, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0134, 0.0200, 0.0200, 0.0200, 0.0134, 0.0200, 0.0200, 0.0200, 0.0200,
        0.0134])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[8.5330e-08, 1.0000e+00],
        [8.5330e-08, 1.0000e+00],
        [8.5330e-08, 1.0000e+00],
        [8.5330e-08, 1.0000e+00],
        [8.5330e-08, 1.0000e+00],
        [8.5330e-08, 1.0000e+00],
        [8.5330e-08, 1.0000e+00],
        [8.5330e-08, 1.0000e+00],
        [8.5330e-08, 1.0000e+00],
        [8.5330e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0267, 0.0400, 0.0400, 0.0400, 0.0267, 0.0400, 0.0400, 0.0400, 0.0400,
        0.0267])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.9315e-08, 1.0000e+00],
        [7.9315e-08, 1.0000e+00],
        [7.9315e-08, 1.0000e+00],
        [7.9315e-08, 1.0000e+00],
        [7.9315e-08, 1.0000e+00],
        [7.9315e-08, 1.0000e+00],
        [7.9315e-08, 1.0000e+00],
        [7.9315e-08, 1.0000e+00],
        [7.9315e-08, 1.0000e+00],
        [7.9315e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0401, 0.0600, 0.0600, 0.0600, 0.0401, 0.0600, 0.0600, 0.0600, 0.0600,
        0.0401])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8477e-08, 1.0000e+00],
        [7.8477e-08, 1.0000e+00],
        [7.8477e-08, 1.0000e+00],
        [7.8477e-08, 1.0000e+00],
        [7.8477e-08, 1.0000e+00],
        [7.8477e-08, 1.0000e+00],
        [7.8477e-08, 1.0000e+00],
        [7.8477e-08, 1.0000e+00],
        [7.8477e-08, 1.0000e+00],
        [7.8477e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0535, 0.0800, 0.0800, 0.0800, 0.0535, 0.0800, 0.0800, 0.0800, 0.0800,
        0.0535])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8334e-08, 1.0000e+00],
        [7.8334e-08, 1.0000e+00],
        [7.8334e-08, 1.0000e+00],
        [7.8334e-08, 1.0000e+00],
        [7.8334e-08, 1.0000e+00],
        [7.8334e-08, 1.0000e+00],
        [7.8334e-08, 1.0000e+00],
        [7.8334e-08, 1.0000e+00],
        [7.8334e-08, 1.0000e+00],
        [7.8334e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0669, 0.1000, 0.1000, 0.1000, 0.0669, 0.1000, 0.1000, 0.1000, 0.1000,
        0.0669])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8299e-08, 1.0000e+00],
        [7.8299e-08, 1.0000e+00],
        [7.8299e-08, 1.0000e+00],
        [7.8299e-08, 1.0000e+00],
        [7.8299e-08, 1.0000e+00],
        [7.8299e-08, 1.0000e+00],
        [7.8299e-08, 1.0000e+00],
        [7.8299e-08, 1.0000e+00],
        [7.8299e-08, 1.0000e+00],
        [7.8299e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0802, 0.1200, 0.1200, 0.1200, 0.0802, 0.1200, 0.1200, 0.1200, 0.1200,
        0.0802])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8285e-08, 1.0000e+00],
        [7.8285e-08, 1.0000e+00],
        [7.8285e-08, 1.0000e+00],
        [7.8285e-08, 1.0000e+00],
        [7.8285e-08, 1.0000e+00],
        [7.8285e-08, 1.0000e+00],
        [7.8285e-08, 1.0000e+00],
        [7.8285e-08, 1.0000e+00],
        [7.8285e-08, 1.0000e+00],
        [7.8285e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0936, 0.1400, 0.1400, 0.1400, 0.0936, 0.1400, 0.1400, 0.1400, 0.1400,
        0.0936])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8277e-08, 1.0000e+00],
        [7.8277e-08, 1.0000e+00],
        [7.8277e-08, 1.0000e+00],
        [7.8277e-08, 1.0000e+00],
        [7.8277e-08, 1.0000e+00],
        [7.8277e-08, 1.0000e+00],
        [7.8277e-08, 1.0000e+00],
        [7.8277e-08, 1.0000e+00],
        [7.8277e-08, 1.0000e+00],
        [7.8277e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1070, 0.1600, 0.1600, 0.1600, 0.1070, 0.1600, 0.1600, 0.1600, 0.1600,
        0.1070])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8273e-08, 1.0000e+00],
        [7.8273e-08, 1.0000e+00],
        [7.8273e-08, 1.0000e+00],
        [7.8273e-08, 1.0000e+00],
        [7.8273e-08, 1.0000e+00],
        [7.8273e-08, 1.0000e+00],
        [7.8273e-08, 1.0000e+00],
        [7.8273e-08, 1.0000e+00],
        [7.8273e-08, 1.0000e+00],
        [7.8273e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1203, 0.1800, 0.1800, 0.1800, 0.1203, 0.1800, 0.1800, 0.1800, 0.1800,
        0.1203])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8270e-08, 1.0000e+00],
        [7.8270e-08, 1.0000e+00],
        [7.8270e-08, 1.0000e+00],
        [7.8270e-08, 1.0000e+00],
        [7.8270e-08, 1.0000e+00],
        [7.8270e-08, 1.0000e+00],
        [7.8270e-08, 1.0000e+00],
        [7.8270e-08, 1.0000e+00],
        [7.8270e-08, 1.0000e+00],
        [7.8270e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1337, 0.2000, 0.2000, 0.2000, 0.1337, 0.2000, 0.2000, 0.2000, 0.2000,
        0.1337])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8269e-08, 1.0000e+00],
        [7.8269e-08, 1.0000e+00],
        [7.8269e-08, 1.0000e+00],
        [7.8269e-08, 1.0000e+00],
        [7.8269e-08, 1.0000e+00],
        [7.8269e-08, 1.0000e+00],
        [7.8269e-08, 1.0000e+00],
        [7.8269e-08, 1.0000e+00],
        [7.8269e-08, 1.0000e+00],
        [7.8269e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1471, 0.2200, 0.2200, 0.2200, 0.1471, 0.2200, 0.2200, 0.2200, 0.2200,
        0.1471])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8268e-08, 1.0000e+00],
        [7.8268e-08, 1.0000e+00],
        [7.8268e-08, 1.0000e+00],
        [7.8268e-08, 1.0000e+00],
        [7.8268e-08, 1.0000e+00],
        [7.8268e-08, 1.0000e+00],
        [7.8268e-08, 1.0000e+00],
        [7.8268e-08, 1.0000e+00],
        [7.8268e-08, 1.0000e+00],
        [7.8268e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1605, 0.2400, 0.2400, 0.2400, 0.1605, 0.2400, 0.2400, 0.2400, 0.2400,
        0.1605])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8267e-08, 1.0000e+00],
        [7.8267e-08, 1.0000e+00],
        [7.8267e-08, 1.0000e+00],
        [7.8267e-08, 1.0000e+00],
        [7.8267e-08, 1.0000e+00],
        [7.8267e-08, 1.0000e+00],
        [7.8267e-08, 1.0000e+00],
        [7.8267e-08, 1.0000e+00],
        [7.8267e-08, 1.0000e+00],
        [7.8267e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1738, 0.2600, 0.2600, 0.2600, 0.1738, 0.2600, 0.2600, 0.2600, 0.2600,
        0.1738])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8267e-08, 1.0000e+00],
        [7.8267e-08, 1.0000e+00],
        [7.8267e-08, 1.0000e+00],
        [7.8267e-08, 1.0000e+00],
        [7.8267e-08, 1.0000e+00],
        [7.8267e-08, 1.0000e+00],
        [7.8267e-08, 1.0000e+00],
        [7.8267e-08, 1.0000e+00],
        [7.8267e-08, 1.0000e+00],
        [7.8267e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1872, 0.2800, 0.2800, 0.2800, 0.1872, 0.2800, 0.2800, 0.2800, 0.2800,
        0.1872])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8267e-08, 1.0000e+00],
        [7.8267e-08, 1.0000e+00],
        [7.8267e-08, 1.0000e+00],
        [7.8267e-08, 1.0000e+00],
        [7.8267e-08, 1.0000e+00],
        [7.8267e-08, 1.0000e+00],
        [7.8267e-08, 1.0000e+00],
        [7.8267e-08, 1.0000e+00],
        [7.8267e-08, 1.0000e+00],
        [7.8267e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2006, 0.3000, 0.3000, 0.3000, 0.2006, 0.3000, 0.3000, 0.3000, 0.3000,
        0.2006])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2139, 0.3200, 0.3200, 0.3200, 0.2139, 0.3200, 0.3200, 0.3200, 0.3200,
        0.2139])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2273, 0.3400, 0.3400, 0.3400, 0.2273, 0.3400, 0.3400, 0.3400, 0.3400,
        0.2273])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2407, 0.3600, 0.3600, 0.3600, 0.2407, 0.3600, 0.3600, 0.3600, 0.3600,
        0.2407])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2541, 0.3800, 0.3800, 0.3800, 0.2541, 0.3800, 0.3800, 0.3800, 0.3800,
        0.2541])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2674, 0.4000, 0.4000, 0.4000, 0.2674, 0.4000, 0.4000, 0.4000, 0.4000,
        0.2674])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2808, 0.4200, 0.4200, 0.4200, 0.2808, 0.4200, 0.4200, 0.4200, 0.4200,
        0.2808])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2942, 0.4400, 0.4400, 0.4400, 0.2942, 0.4400, 0.4400, 0.4400, 0.4400,
        0.2942])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3075, 0.4600, 0.4600, 0.4600, 0.3075, 0.4600, 0.4600, 0.4600, 0.4600,
        0.3075])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3209, 0.4800, 0.4800, 0.4800, 0.3209, 0.4800, 0.4800, 0.4800, 0.4800,
        0.3209])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3343, 0.5000, 0.5000, 0.5000, 0.3343, 0.5000, 0.5000, 0.5000, 0.5000,
        0.3343])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3476, 0.5200, 0.5200, 0.5200, 0.3476, 0.5200, 0.5200, 0.5200, 0.5200,
        0.3476])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3610, 0.5400, 0.5400, 0.5400, 0.3610, 0.5400, 0.5400, 0.5400, 0.5400,
        0.3610])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3744, 0.5600, 0.5600, 0.5600, 0.3744, 0.5600, 0.5600, 0.5600, 0.5600,
        0.3744])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3878, 0.5800, 0.5800, 0.5800, 0.3878, 0.5800, 0.5800, 0.5800, 0.5800,
        0.3878])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4011, 0.6000, 0.6000, 0.6000, 0.4011, 0.6000, 0.6000, 0.6000, 0.6000,
        0.4011])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4145, 0.6200, 0.6200, 0.6200, 0.4145, 0.6200, 0.6200, 0.6200, 0.6200,
        0.4145])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4279, 0.6400, 0.6400, 0.6400, 0.4279, 0.6400, 0.6400, 0.6400, 0.6400,
        0.4279])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4412, 0.6600, 0.6600, 0.6600, 0.4412, 0.6600, 0.6600, 0.6600, 0.6600,
        0.4412])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4546, 0.6800, 0.6800, 0.6800, 0.4546, 0.6800, 0.6800, 0.6800, 0.6800,
        0.4546])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4680, 0.7000, 0.7000, 0.7000, 0.4680, 0.7000, 0.7000, 0.7000, 0.7000,
        0.4680])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4814, 0.7200, 0.7200, 0.7200, 0.4814, 0.7200, 0.7200, 0.7200, 0.7200,
        0.4814])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4947, 0.7400, 0.7400, 0.7400, 0.4947, 0.7400, 0.7400, 0.7400, 0.7400,
        0.4947])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5081, 0.7600, 0.7600, 0.7600, 0.5081, 0.7600, 0.7600, 0.7600, 0.7600,
        0.5081])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5215, 0.7800, 0.7800, 0.7800, 0.5215, 0.7800, 0.7800, 0.7800, 0.7800,
        0.5215])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5348, 0.8000, 0.8000, 0.8000, 0.5348, 0.8000, 0.8000, 0.8000, 0.8000,
        0.5348])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5482, 0.8200, 0.8200, 0.8200, 0.5482, 0.8200, 0.8200, 0.8200, 0.8200,
        0.5482])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5616, 0.8400, 0.8400, 0.8400, 0.5616, 0.8400, 0.8400, 0.8400, 0.8400,
        0.5616])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5750, 0.8600, 0.8600, 0.8600, 0.5750, 0.8600, 0.8600, 0.8600, 0.8600,
        0.5750])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5883, 0.8800, 0.8800, 0.8800, 0.5883, 0.8800, 0.8800, 0.8800, 0.8800,
        0.5883])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6017, 0.9000, 0.9000, 0.9000, 0.6017, 0.9000, 0.9000, 0.9000, 0.9000,
        0.6017])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6151, 0.9200, 0.9200, 0.9200, 0.6151, 0.9200, 0.9200, 0.9200, 0.9200,
        0.6151])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6284, 0.9400, 0.9400, 0.9400, 0.6284, 0.9400, 0.9400, 0.9400, 0.9400,
        0.6284])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6418, 0.9600, 0.9600, 0.9600, 0.6418, 0.9600, 0.9600, 0.9600, 0.9600,
        0.6418])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00],
        [7.8266e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6552, 0.9800, 0.9800, 0.9800, 0.6552, 0.9800, 0.9800, 0.9800, 0.9800,
        0.6552])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 4: Guess correctness - [False  True  True  True False  True  True  True  True False]
DEBUG:src.train:Log Probs: tensor([[-4.4108e-06, -4.4108e-06, -4.4108e-06, -4.4108e-06, -4.4108e-06,
         -4.4108e-06, -4.4108e-06, -4.4108e-06, -4.4108e-06, -4.4108e-06],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07]],
       grad_fn=<CatBackward0>)
INFO:src.train:Episode 4: Cumulative reward: 220.63865337520838
INFO:src.train:Episode 4: Reward Differences: 8.645433142781258
INFO:src.train:Episode 4: Average loss: 8.201606647162407e-07
INFO:src.train:Episode 4: Last Step Accuracy: 0.699999988079071
DEBUG:src.train:Episode 5: Input words: ['apple', 'apple', 'apple', 'orange', 'apple', 'orange', 'orange', 'apple', 'apple', 'orange']
DEBUG:src.train:Episode 5: Target words: ['orange', 'apple', 'apple', 'apple', 'orange', 'apple', 'orange', 'apple', 'orange', 'apple']
DEBUG:src.train:Input Word Indices: [0 0 0 1 0 1 1 0 0 1]
DEBUG:src.train:Input Tensor: tensor([0, 0, 0, 1, 0, 1, 1, 0, 0, 1])
DEBUG:src.train:Action Probs: tensor([[4.6926e-07, 1.0000e+00],
        [4.6926e-07, 1.0000e+00],
        [4.6926e-07, 1.0000e+00],
        [4.6926e-07, 1.0000e+00],
        [4.6926e-07, 1.0000e+00],
        [4.6926e-07, 1.0000e+00],
        [4.6926e-07, 1.0000e+00],
        [4.6926e-07, 1.0000e+00],
        [4.6926e-07, 1.0000e+00],
        [4.6926e-07, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
DEBUG:src.train:Log Probabilities: tensor([-4.7684e-07, -4.7684e-07, -4.7684e-07, -4.7684e-07, -4.7684e-07,
        -4.7684e-07, -4.7684e-07, -4.7684e-07, -4.7684e-07, -4.7684e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[9.8910e-09, 1.0000e+00],
        [9.8910e-09, 1.0000e+00],
        [9.8910e-09, 1.0000e+00],
        [9.8910e-09, 1.0000e+00],
        [9.8910e-09, 1.0000e+00],
        [9.8910e-09, 1.0000e+00],
        [9.8910e-09, 1.0000e+00],
        [9.8910e-09, 1.0000e+00],
        [9.8910e-09, 1.0000e+00],
        [9.8910e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0200, 0.0134, 0.0134, 0.0134, 0.0200, 0.0134, 0.0200, 0.0134, 0.0200,
        0.0134])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.5555e-09, 1.0000e+00],
        [5.5555e-09, 1.0000e+00],
        [5.5555e-09, 1.0000e+00],
        [5.5555e-09, 1.0000e+00],
        [5.5555e-09, 1.0000e+00],
        [5.5555e-09, 1.0000e+00],
        [5.5555e-09, 1.0000e+00],
        [5.5555e-09, 1.0000e+00],
        [5.5555e-09, 1.0000e+00],
        [5.5555e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0400, 0.0267, 0.0267, 0.0267, 0.0400, 0.0267, 0.0400, 0.0267, 0.0400,
        0.0267])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1272e-09, 1.0000e+00],
        [5.1272e-09, 1.0000e+00],
        [5.1272e-09, 1.0000e+00],
        [5.1272e-09, 1.0000e+00],
        [5.1272e-09, 1.0000e+00],
        [5.1272e-09, 1.0000e+00],
        [5.1272e-09, 1.0000e+00],
        [5.1272e-09, 1.0000e+00],
        [5.1272e-09, 1.0000e+00],
        [5.1272e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0600, 0.0401, 0.0401, 0.0401, 0.0600, 0.0401, 0.0600, 0.0401, 0.0600,
        0.0401])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0707e-09, 1.0000e+00],
        [5.0707e-09, 1.0000e+00],
        [5.0707e-09, 1.0000e+00],
        [5.0707e-09, 1.0000e+00],
        [5.0707e-09, 1.0000e+00],
        [5.0707e-09, 1.0000e+00],
        [5.0707e-09, 1.0000e+00],
        [5.0707e-09, 1.0000e+00],
        [5.0707e-09, 1.0000e+00],
        [5.0707e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0800, 0.0535, 0.0535, 0.0535, 0.0800, 0.0535, 0.0800, 0.0535, 0.0800,
        0.0535])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0628e-09, 1.0000e+00],
        [5.0628e-09, 1.0000e+00],
        [5.0628e-09, 1.0000e+00],
        [5.0628e-09, 1.0000e+00],
        [5.0628e-09, 1.0000e+00],
        [5.0628e-09, 1.0000e+00],
        [5.0628e-09, 1.0000e+00],
        [5.0628e-09, 1.0000e+00],
        [5.0628e-09, 1.0000e+00],
        [5.0628e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1000, 0.0669, 0.0669, 0.0669, 0.1000, 0.0669, 0.1000, 0.0669, 0.1000,
        0.0669])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0617e-09, 1.0000e+00],
        [5.0617e-09, 1.0000e+00],
        [5.0617e-09, 1.0000e+00],
        [5.0617e-09, 1.0000e+00],
        [5.0617e-09, 1.0000e+00],
        [5.0617e-09, 1.0000e+00],
        [5.0617e-09, 1.0000e+00],
        [5.0617e-09, 1.0000e+00],
        [5.0617e-09, 1.0000e+00],
        [5.0617e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1200, 0.0802, 0.0802, 0.0802, 0.1200, 0.0802, 0.1200, 0.0802, 0.1200,
        0.0802])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0616e-09, 1.0000e+00],
        [5.0616e-09, 1.0000e+00],
        [5.0616e-09, 1.0000e+00],
        [5.0616e-09, 1.0000e+00],
        [5.0616e-09, 1.0000e+00],
        [5.0616e-09, 1.0000e+00],
        [5.0616e-09, 1.0000e+00],
        [5.0616e-09, 1.0000e+00],
        [5.0616e-09, 1.0000e+00],
        [5.0616e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1400, 0.0936, 0.0936, 0.0936, 0.1400, 0.0936, 0.1400, 0.0936, 0.1400,
        0.0936])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1600, 0.1070, 0.1070, 0.1070, 0.1600, 0.1070, 0.1600, 0.1070, 0.1600,
        0.1070])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1800, 0.1203, 0.1203, 0.1203, 0.1800, 0.1203, 0.1800, 0.1203, 0.1800,
        0.1203])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2000, 0.1337, 0.1337, 0.1337, 0.2000, 0.1337, 0.2000, 0.1337, 0.2000,
        0.1337])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2200, 0.1471, 0.1471, 0.1471, 0.2200, 0.1471, 0.2200, 0.1471, 0.2200,
        0.1471])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2400, 0.1605, 0.1605, 0.1605, 0.2400, 0.1605, 0.2400, 0.1605, 0.2400,
        0.1605])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2600, 0.1738, 0.1738, 0.1738, 0.2600, 0.1738, 0.2600, 0.1738, 0.2600,
        0.1738])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2800, 0.1872, 0.1872, 0.1872, 0.2800, 0.1872, 0.2800, 0.1872, 0.2800,
        0.1872])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3000, 0.2006, 0.2006, 0.2006, 0.3000, 0.2006, 0.3000, 0.2006, 0.3000,
        0.2006])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3200, 0.2139, 0.2139, 0.2139, 0.3200, 0.2139, 0.3200, 0.2139, 0.3200,
        0.2139])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3400, 0.2273, 0.2273, 0.2273, 0.3400, 0.2273, 0.3400, 0.2273, 0.3400,
        0.2273])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3600, 0.2407, 0.2407, 0.2407, 0.3600, 0.2407, 0.3600, 0.2407, 0.3600,
        0.2407])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3800, 0.2541, 0.2541, 0.2541, 0.3800, 0.2541, 0.3800, 0.2541, 0.3800,
        0.2541])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4000, 0.2674, 0.2674, 0.2674, 0.4000, 0.2674, 0.4000, 0.2674, 0.4000,
        0.2674])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4200, 0.2808, 0.2808, 0.2808, 0.4200, 0.2808, 0.4200, 0.2808, 0.4200,
        0.2808])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4400, 0.2942, 0.2942, 0.2942, 0.4400, 0.2942, 0.4400, 0.2942, 0.4400,
        0.2942])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4600, 0.3075, 0.3075, 0.3075, 0.4600, 0.3075, 0.4600, 0.3075, 0.4600,
        0.3075])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4800, 0.3209, 0.3209, 0.3209, 0.4800, 0.3209, 0.4800, 0.3209, 0.4800,
        0.3209])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5000, 0.3343, 0.3343, 0.3343, 0.5000, 0.3343, 0.5000, 0.3343, 0.5000,
        0.3343])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5200, 0.3476, 0.3476, 0.3476, 0.5200, 0.3476, 0.5200, 0.3476, 0.5200,
        0.3476])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5400, 0.3610, 0.3610, 0.3610, 0.5400, 0.3610, 0.5400, 0.3610, 0.5400,
        0.3610])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5600, 0.3744, 0.3744, 0.3744, 0.5600, 0.3744, 0.5600, 0.3744, 0.5600,
        0.3744])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5800, 0.3878, 0.3878, 0.3878, 0.5800, 0.3878, 0.5800, 0.3878, 0.5800,
        0.3878])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6000, 0.4011, 0.4011, 0.4011, 0.6000, 0.4011, 0.6000, 0.4011, 0.6000,
        0.4011])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6200, 0.4145, 0.4145, 0.4145, 0.6200, 0.4145, 0.6200, 0.4145, 0.6200,
        0.4145])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6400, 0.4279, 0.4279, 0.4279, 0.6400, 0.4279, 0.6400, 0.4279, 0.6400,
        0.4279])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6600, 0.4412, 0.4412, 0.4412, 0.6600, 0.4412, 0.6600, 0.4412, 0.6600,
        0.4412])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6800, 0.4546, 0.4546, 0.4546, 0.6800, 0.4546, 0.6800, 0.4546, 0.6800,
        0.4546])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7000, 0.4680, 0.4680, 0.4680, 0.7000, 0.4680, 0.7000, 0.4680, 0.7000,
        0.4680])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7200, 0.4814, 0.4814, 0.4814, 0.7200, 0.4814, 0.7200, 0.4814, 0.7200,
        0.4814])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7400, 0.4947, 0.4947, 0.4947, 0.7400, 0.4947, 0.7400, 0.4947, 0.7400,
        0.4947])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7600, 0.5081, 0.5081, 0.5081, 0.7600, 0.5081, 0.7600, 0.5081, 0.7600,
        0.5081])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7800, 0.5215, 0.5215, 0.5215, 0.7800, 0.5215, 0.7800, 0.5215, 0.7800,
        0.5215])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8000, 0.5348, 0.5348, 0.5348, 0.8000, 0.5348, 0.8000, 0.5348, 0.8000,
        0.5348])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8200, 0.5482, 0.5482, 0.5482, 0.8200, 0.5482, 0.8200, 0.5482, 0.8200,
        0.5482])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8400, 0.5616, 0.5616, 0.5616, 0.8400, 0.5616, 0.8400, 0.5616, 0.8400,
        0.5616])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8600, 0.5750, 0.5750, 0.5750, 0.8600, 0.5750, 0.8600, 0.5750, 0.8600,
        0.5750])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8800, 0.5883, 0.5883, 0.5883, 0.8800, 0.5883, 0.8800, 0.5883, 0.8800,
        0.5883])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9000, 0.6017, 0.6017, 0.6017, 0.9000, 0.6017, 0.9000, 0.6017, 0.9000,
        0.6017])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9200, 0.6151, 0.6151, 0.6151, 0.9200, 0.6151, 0.9200, 0.6151, 0.9200,
        0.6151])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9400, 0.6284, 0.6284, 0.6284, 0.9400, 0.6284, 0.9400, 0.6284, 0.9400,
        0.6284])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9600, 0.6418, 0.6418, 0.6418, 0.9600, 0.6418, 0.9600, 0.6418, 0.9600,
        0.6418])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00],
        [5.0615e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9800, 0.6552, 0.6552, 0.6552, 0.9800, 0.6552, 0.9800, 0.6552, 0.9800,
        0.6552])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 5: Guess correctness - [ True False False False  True False  True False  True False]
DEBUG:src.train:Log Probs: tensor([[-4.7684e-07, -4.7684e-07, -4.7684e-07, -4.7684e-07, -4.7684e-07,
         -4.7684e-07, -4.7684e-07, -4.7684e-07, -4.7684e-07, -4.7684e-07],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00]],
       grad_fn=<CatBackward0>)
INFO:src.train:Episode 5: Cumulative reward: 196.27730682492256
INFO:src.train:Episode 5: Reward Differences: 7.690866090357304
INFO:src.train:Episode 5: Average loss: -1.9073487678156198e-08
INFO:src.train:Episode 5: Last Step Accuracy: 0.4000000059604645
DEBUG:src.train:Episode 6: Input words: ['apple', 'orange', 'orange', 'orange', 'orange', 'apple', 'orange', 'orange', 'orange', 'orange']
DEBUG:src.train:Episode 6: Target words: ['apple', 'orange', 'apple', 'orange', 'orange', 'orange', 'apple', 'apple', 'orange', 'orange']
DEBUG:src.train:Input Word Indices: [0 1 1 1 1 0 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([0, 1, 1, 1, 1, 0, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.4650e-08, 1.0000e+00],
        [7.4650e-08, 1.0000e+00],
        [7.4650e-08, 1.0000e+00],
        [7.4650e-08, 1.0000e+00],
        [7.4650e-08, 1.0000e+00],
        [7.4650e-08, 1.0000e+00],
        [7.4650e-08, 1.0000e+00],
        [7.4650e-08, 1.0000e+00],
        [7.4650e-08, 1.0000e+00],
        [7.4650e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
DEBUG:src.train:Log Probabilities: tensor([-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
        -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
       grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.0290e-09, 1.0000e+00],
        [1.0290e-09, 1.0000e+00],
        [1.0290e-09, 1.0000e+00],
        [1.0290e-09, 1.0000e+00],
        [1.0290e-09, 1.0000e+00],
        [1.0290e-09, 1.0000e+00],
        [1.0290e-09, 1.0000e+00],
        [1.0290e-09, 1.0000e+00],
        [1.0290e-09, 1.0000e+00],
        [1.0290e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0134, 0.0200, 0.0134, 0.0200, 0.0200, 0.0200, 0.0134, 0.0134, 0.0200,
        0.0200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.4534e-10, 1.0000e+00],
        [5.4534e-10, 1.0000e+00],
        [5.4534e-10, 1.0000e+00],
        [5.4534e-10, 1.0000e+00],
        [5.4534e-10, 1.0000e+00],
        [5.4534e-10, 1.0000e+00],
        [5.4534e-10, 1.0000e+00],
        [5.4534e-10, 1.0000e+00],
        [5.4534e-10, 1.0000e+00],
        [5.4534e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0267, 0.0400, 0.0267, 0.0400, 0.0400, 0.0400, 0.0267, 0.0267, 0.0400,
        0.0400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9958e-10, 1.0000e+00],
        [4.9958e-10, 1.0000e+00],
        [4.9958e-10, 1.0000e+00],
        [4.9958e-10, 1.0000e+00],
        [4.9958e-10, 1.0000e+00],
        [4.9958e-10, 1.0000e+00],
        [4.9958e-10, 1.0000e+00],
        [4.9958e-10, 1.0000e+00],
        [4.9958e-10, 1.0000e+00],
        [4.9958e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0401, 0.0600, 0.0401, 0.0600, 0.0600, 0.0600, 0.0401, 0.0401, 0.0600,
        0.0600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9365e-10, 1.0000e+00],
        [4.9364e-10, 1.0000e+00],
        [4.9365e-10, 1.0000e+00],
        [4.9364e-10, 1.0000e+00],
        [4.9365e-10, 1.0000e+00],
        [4.9364e-10, 1.0000e+00],
        [4.9365e-10, 1.0000e+00],
        [4.9364e-10, 1.0000e+00],
        [4.9365e-10, 1.0000e+00],
        [4.9364e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0535, 0.0800, 0.0535, 0.0800, 0.0800, 0.0800, 0.0535, 0.0535, 0.0800,
        0.0800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9284e-10, 1.0000e+00],
        [4.9284e-10, 1.0000e+00],
        [4.9284e-10, 1.0000e+00],
        [4.9284e-10, 1.0000e+00],
        [4.9284e-10, 1.0000e+00],
        [4.9284e-10, 1.0000e+00],
        [4.9284e-10, 1.0000e+00],
        [4.9284e-10, 1.0000e+00],
        [4.9284e-10, 1.0000e+00],
        [4.9284e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0669, 0.1000, 0.0669, 0.1000, 0.1000, 0.1000, 0.0669, 0.0669, 0.1000,
        0.1000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9273e-10, 1.0000e+00],
        [4.9273e-10, 1.0000e+00],
        [4.9273e-10, 1.0000e+00],
        [4.9273e-10, 1.0000e+00],
        [4.9273e-10, 1.0000e+00],
        [4.9273e-10, 1.0000e+00],
        [4.9273e-10, 1.0000e+00],
        [4.9273e-10, 1.0000e+00],
        [4.9273e-10, 1.0000e+00],
        [4.9273e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0802, 0.1200, 0.0802, 0.1200, 0.1200, 0.1200, 0.0802, 0.0802, 0.1200,
        0.1200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9272e-10, 1.0000e+00],
        [4.9272e-10, 1.0000e+00],
        [4.9272e-10, 1.0000e+00],
        [4.9272e-10, 1.0000e+00],
        [4.9272e-10, 1.0000e+00],
        [4.9272e-10, 1.0000e+00],
        [4.9272e-10, 1.0000e+00],
        [4.9272e-10, 1.0000e+00],
        [4.9272e-10, 1.0000e+00],
        [4.9272e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0936, 0.1400, 0.0936, 0.1400, 0.1400, 0.1400, 0.0936, 0.0936, 0.1400,
        0.1400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9272e-10, 1.0000e+00],
        [4.9272e-10, 1.0000e+00],
        [4.9272e-10, 1.0000e+00],
        [4.9272e-10, 1.0000e+00],
        [4.9272e-10, 1.0000e+00],
        [4.9272e-10, 1.0000e+00],
        [4.9272e-10, 1.0000e+00],
        [4.9272e-10, 1.0000e+00],
        [4.9272e-10, 1.0000e+00],
        [4.9272e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1070, 0.1600, 0.1070, 0.1600, 0.1600, 0.1600, 0.1070, 0.1070, 0.1600,
        0.1600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1203, 0.1800, 0.1203, 0.1800, 0.1800, 0.1800, 0.1203, 0.1203, 0.1800,
        0.1800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1337, 0.2000, 0.1337, 0.2000, 0.2000, 0.2000, 0.1337, 0.1337, 0.2000,
        0.2000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1471, 0.2200, 0.1471, 0.2200, 0.2200, 0.2200, 0.1471, 0.1471, 0.2200,
        0.2200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1605, 0.2400, 0.1605, 0.2400, 0.2400, 0.2400, 0.1605, 0.1605, 0.2400,
        0.2400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1738, 0.2600, 0.1738, 0.2600, 0.2600, 0.2600, 0.1738, 0.1738, 0.2600,
        0.2600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1872, 0.2800, 0.1872, 0.2800, 0.2800, 0.2800, 0.1872, 0.1872, 0.2800,
        0.2800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2006, 0.3000, 0.2006, 0.3000, 0.3000, 0.3000, 0.2006, 0.2006, 0.3000,
        0.3000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2139, 0.3200, 0.2139, 0.3200, 0.3200, 0.3200, 0.2139, 0.2139, 0.3200,
        0.3200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2273, 0.3400, 0.2273, 0.3400, 0.3400, 0.3400, 0.2273, 0.2273, 0.3400,
        0.3400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2407, 0.3600, 0.2407, 0.3600, 0.3600, 0.3600, 0.2407, 0.2407, 0.3600,
        0.3600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2541, 0.3800, 0.2541, 0.3800, 0.3800, 0.3800, 0.2541, 0.2541, 0.3800,
        0.3800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2674, 0.4000, 0.2674, 0.4000, 0.4000, 0.4000, 0.2674, 0.2674, 0.4000,
        0.4000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2808, 0.4200, 0.2808, 0.4200, 0.4200, 0.4200, 0.2808, 0.2808, 0.4200,
        0.4200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2942, 0.4400, 0.2942, 0.4400, 0.4400, 0.4400, 0.2942, 0.2942, 0.4400,
        0.4400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3075, 0.4600, 0.3075, 0.4600, 0.4600, 0.4600, 0.3075, 0.3075, 0.4600,
        0.4600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3209, 0.4800, 0.3209, 0.4800, 0.4800, 0.4800, 0.3209, 0.3209, 0.4800,
        0.4800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3343, 0.5000, 0.3343, 0.5000, 0.5000, 0.5000, 0.3343, 0.3343, 0.5000,
        0.5000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3476, 0.5200, 0.3476, 0.5200, 0.5200, 0.5200, 0.3476, 0.3476, 0.5200,
        0.5200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3610, 0.5400, 0.3610, 0.5400, 0.5400, 0.5400, 0.3610, 0.3610, 0.5400,
        0.5400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3744, 0.5600, 0.3744, 0.5600, 0.5600, 0.5600, 0.3744, 0.3744, 0.5600,
        0.5600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3878, 0.5800, 0.3878, 0.5800, 0.5800, 0.5800, 0.3878, 0.3878, 0.5800,
        0.5800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4011, 0.6000, 0.4011, 0.6000, 0.6000, 0.6000, 0.4011, 0.4011, 0.6000,
        0.6000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4145, 0.6200, 0.4145, 0.6200, 0.6200, 0.6200, 0.4145, 0.4145, 0.6200,
        0.6200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4279, 0.6400, 0.4279, 0.6400, 0.6400, 0.6400, 0.4279, 0.4279, 0.6400,
        0.6400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4412, 0.6600, 0.4412, 0.6600, 0.6600, 0.6600, 0.4412, 0.4412, 0.6600,
        0.6600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4546, 0.6800, 0.4546, 0.6800, 0.6800, 0.6800, 0.4546, 0.4546, 0.6800,
        0.6800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4680, 0.7000, 0.4680, 0.7000, 0.7000, 0.7000, 0.4680, 0.4680, 0.7000,
        0.7000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4814, 0.7200, 0.4814, 0.7200, 0.7200, 0.7200, 0.4814, 0.4814, 0.7200,
        0.7200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4947, 0.7400, 0.4947, 0.7400, 0.7400, 0.7400, 0.4947, 0.4947, 0.7400,
        0.7400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5081, 0.7600, 0.5081, 0.7600, 0.7600, 0.7600, 0.5081, 0.5081, 0.7600,
        0.7600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5215, 0.7800, 0.5215, 0.7800, 0.7800, 0.7800, 0.5215, 0.5215, 0.7800,
        0.7800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5348, 0.8000, 0.5348, 0.8000, 0.8000, 0.8000, 0.5348, 0.5348, 0.8000,
        0.8000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5482, 0.8200, 0.5482, 0.8200, 0.8200, 0.8200, 0.5482, 0.5482, 0.8200,
        0.8200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5616, 0.8400, 0.5616, 0.8400, 0.8400, 0.8400, 0.5616, 0.5616, 0.8400,
        0.8400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5750, 0.8600, 0.5750, 0.8600, 0.8600, 0.8600, 0.5750, 0.5750, 0.8600,
        0.8600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5883, 0.8800, 0.5883, 0.8800, 0.8800, 0.8800, 0.5883, 0.5883, 0.8800,
        0.8800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6017, 0.9000, 0.6017, 0.9000, 0.9000, 0.9000, 0.6017, 0.6017, 0.9000,
        0.9000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6151, 0.9200, 0.6151, 0.9200, 0.9200, 0.9200, 0.6151, 0.6151, 0.9200,
        0.9200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6284, 0.9400, 0.6284, 0.9400, 0.9400, 0.9400, 0.6284, 0.6284, 0.9400,
        0.9400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6418, 0.9600, 0.6418, 0.9600, 0.9600, 0.9600, 0.6418, 0.6418, 0.9600,
        0.9600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00],
        [4.9271e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6552, 0.9800, 0.6552, 0.9800, 0.9800, 0.9800, 0.6552, 0.6552, 0.9800,
        0.9800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 6: Guess correctness - [False  True False  True  True  True False False  True  True]
DEBUG:src.train:Log Probs: tensor([[-1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07,
         -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07, -1.1921e-07],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00]],
       grad_fn=<CatBackward0>)
INFO:src.train:Episode 6: Cumulative reward: 212.5182045251131
INFO:src.train:Episode 6: Reward Differences: 8.327244125306606
INFO:src.train:Episode 6: Average loss: 4.7683719195390495e-09
INFO:src.train:Episode 6: Last Step Accuracy: 0.6000000238418579
DEBUG:src.train:Episode 7: Input words: ['orange', 'orange', 'orange', 'orange', 'orange', 'orange', 'orange', 'apple', 'orange', 'orange']
DEBUG:src.train:Episode 7: Target words: ['apple', 'orange', 'orange', 'apple', 'orange', 'orange', 'apple', 'orange', 'apple', 'orange']
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 0 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 0, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.5893e-08, 1.0000e+00],
        [1.5893e-08, 1.0000e+00],
        [1.5893e-08, 1.0000e+00],
        [1.5893e-08, 1.0000e+00],
        [1.5893e-08, 1.0000e+00],
        [1.5893e-08, 1.0000e+00],
        [1.5893e-08, 1.0000e+00],
        [1.5893e-08, 1.0000e+00],
        [1.5893e-08, 1.0000e+00],
        [1.5893e-08, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.4670e-10, 1.0000e+00],
        [1.4670e-10, 1.0000e+00],
        [1.4670e-10, 1.0000e+00],
        [1.4670e-10, 1.0000e+00],
        [1.4670e-10, 1.0000e+00],
        [1.4670e-10, 1.0000e+00],
        [1.4670e-10, 1.0000e+00],
        [1.4670e-10, 1.0000e+00],
        [1.4670e-10, 1.0000e+00],
        [1.4670e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0134, 0.0200, 0.0200, 0.0134, 0.0200, 0.0200, 0.0134, 0.0200, 0.0134,
        0.0200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.2745e-11, 1.0000e+00],
        [7.2745e-11, 1.0000e+00],
        [7.2745e-11, 1.0000e+00],
        [7.2745e-11, 1.0000e+00],
        [7.2745e-11, 1.0000e+00],
        [7.2745e-11, 1.0000e+00],
        [7.2745e-11, 1.0000e+00],
        [7.2745e-11, 1.0000e+00],
        [7.2745e-11, 1.0000e+00],
        [7.2745e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0267, 0.0400, 0.0400, 0.0267, 0.0400, 0.0400, 0.0267, 0.0400, 0.0267,
        0.0400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.6063e-11, 1.0000e+00],
        [6.6063e-11, 1.0000e+00],
        [6.6063e-11, 1.0000e+00],
        [6.6063e-11, 1.0000e+00],
        [6.6063e-11, 1.0000e+00],
        [6.6063e-11, 1.0000e+00],
        [6.6063e-11, 1.0000e+00],
        [6.6063e-11, 1.0000e+00],
        [6.6063e-11, 1.0000e+00],
        [6.6063e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0401, 0.0600, 0.0600, 0.0401, 0.0600, 0.0600, 0.0401, 0.0600, 0.0401,
        0.0600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5204e-11, 1.0000e+00],
        [6.5203e-11, 1.0000e+00],
        [6.5204e-11, 1.0000e+00],
        [6.5203e-11, 1.0000e+00],
        [6.5204e-11, 1.0000e+00],
        [6.5203e-11, 1.0000e+00],
        [6.5204e-11, 1.0000e+00],
        [6.5203e-11, 1.0000e+00],
        [6.5204e-11, 1.0000e+00],
        [6.5203e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0535, 0.0800, 0.0800, 0.0535, 0.0800, 0.0800, 0.0535, 0.0800, 0.0535,
        0.0800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5088e-11, 1.0000e+00],
        [6.5088e-11, 1.0000e+00],
        [6.5088e-11, 1.0000e+00],
        [6.5088e-11, 1.0000e+00],
        [6.5088e-11, 1.0000e+00],
        [6.5088e-11, 1.0000e+00],
        [6.5088e-11, 1.0000e+00],
        [6.5088e-11, 1.0000e+00],
        [6.5088e-11, 1.0000e+00],
        [6.5088e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0669, 0.1000, 0.1000, 0.0669, 0.1000, 0.1000, 0.0669, 0.1000, 0.0669,
        0.1000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5072e-11, 1.0000e+00],
        [6.5072e-11, 1.0000e+00],
        [6.5072e-11, 1.0000e+00],
        [6.5072e-11, 1.0000e+00],
        [6.5072e-11, 1.0000e+00],
        [6.5072e-11, 1.0000e+00],
        [6.5072e-11, 1.0000e+00],
        [6.5072e-11, 1.0000e+00],
        [6.5072e-11, 1.0000e+00],
        [6.5072e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0802, 0.1200, 0.1200, 0.0802, 0.1200, 0.1200, 0.0802, 0.1200, 0.0802,
        0.1200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5070e-11, 1.0000e+00],
        [6.5070e-11, 1.0000e+00],
        [6.5070e-11, 1.0000e+00],
        [6.5070e-11, 1.0000e+00],
        [6.5070e-11, 1.0000e+00],
        [6.5070e-11, 1.0000e+00],
        [6.5070e-11, 1.0000e+00],
        [6.5070e-11, 1.0000e+00],
        [6.5070e-11, 1.0000e+00],
        [6.5070e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0936, 0.1400, 0.1400, 0.0936, 0.1400, 0.1400, 0.0936, 0.1400, 0.0936,
        0.1400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5070e-11, 1.0000e+00],
        [6.5070e-11, 1.0000e+00],
        [6.5070e-11, 1.0000e+00],
        [6.5070e-11, 1.0000e+00],
        [6.5070e-11, 1.0000e+00],
        [6.5070e-11, 1.0000e+00],
        [6.5070e-11, 1.0000e+00],
        [6.5070e-11, 1.0000e+00],
        [6.5070e-11, 1.0000e+00],
        [6.5070e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1070, 0.1600, 0.1600, 0.1070, 0.1600, 0.1600, 0.1070, 0.1600, 0.1070,
        0.1600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1203, 0.1800, 0.1800, 0.1203, 0.1800, 0.1800, 0.1203, 0.1800, 0.1203,
        0.1800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1337, 0.2000, 0.2000, 0.1337, 0.2000, 0.2000, 0.1337, 0.2000, 0.1337,
        0.2000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1471, 0.2200, 0.2200, 0.1471, 0.2200, 0.2200, 0.1471, 0.2200, 0.1471,
        0.2200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1605, 0.2400, 0.2400, 0.1605, 0.2400, 0.2400, 0.1605, 0.2400, 0.1605,
        0.2400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1738, 0.2600, 0.2600, 0.1738, 0.2600, 0.2600, 0.1738, 0.2600, 0.1738,
        0.2600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1872, 0.2800, 0.2800, 0.1872, 0.2800, 0.2800, 0.1872, 0.2800, 0.1872,
        0.2800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2006, 0.3000, 0.3000, 0.2006, 0.3000, 0.3000, 0.2006, 0.3000, 0.2006,
        0.3000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2139, 0.3200, 0.3200, 0.2139, 0.3200, 0.3200, 0.2139, 0.3200, 0.2139,
        0.3200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2273, 0.3400, 0.3400, 0.2273, 0.3400, 0.3400, 0.2273, 0.3400, 0.2273,
        0.3400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2407, 0.3600, 0.3600, 0.2407, 0.3600, 0.3600, 0.2407, 0.3600, 0.2407,
        0.3600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2541, 0.3800, 0.3800, 0.2541, 0.3800, 0.3800, 0.2541, 0.3800, 0.2541,
        0.3800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2674, 0.4000, 0.4000, 0.2674, 0.4000, 0.4000, 0.2674, 0.4000, 0.2674,
        0.4000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2808, 0.4200, 0.4200, 0.2808, 0.4200, 0.4200, 0.2808, 0.4200, 0.2808,
        0.4200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2942, 0.4400, 0.4400, 0.2942, 0.4400, 0.4400, 0.2942, 0.4400, 0.2942,
        0.4400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3075, 0.4600, 0.4600, 0.3075, 0.4600, 0.4600, 0.3075, 0.4600, 0.3075,
        0.4600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3209, 0.4800, 0.4800, 0.3209, 0.4800, 0.4800, 0.3209, 0.4800, 0.3209,
        0.4800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3343, 0.5000, 0.5000, 0.3343, 0.5000, 0.5000, 0.3343, 0.5000, 0.3343,
        0.5000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3476, 0.5200, 0.5200, 0.3476, 0.5200, 0.5200, 0.3476, 0.5200, 0.3476,
        0.5200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3610, 0.5400, 0.5400, 0.3610, 0.5400, 0.5400, 0.3610, 0.5400, 0.3610,
        0.5400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3744, 0.5600, 0.5600, 0.3744, 0.5600, 0.5600, 0.3744, 0.5600, 0.3744,
        0.5600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3878, 0.5800, 0.5800, 0.3878, 0.5800, 0.5800, 0.3878, 0.5800, 0.3878,
        0.5800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4011, 0.6000, 0.6000, 0.4011, 0.6000, 0.6000, 0.4011, 0.6000, 0.4011,
        0.6000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4145, 0.6200, 0.6200, 0.4145, 0.6200, 0.6200, 0.4145, 0.6200, 0.4145,
        0.6200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4279, 0.6400, 0.6400, 0.4279, 0.6400, 0.6400, 0.4279, 0.6400, 0.4279,
        0.6400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4412, 0.6600, 0.6600, 0.4412, 0.6600, 0.6600, 0.4412, 0.6600, 0.4412,
        0.6600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4546, 0.6800, 0.6800, 0.4546, 0.6800, 0.6800, 0.4546, 0.6800, 0.4546,
        0.6800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4680, 0.7000, 0.7000, 0.4680, 0.7000, 0.7000, 0.4680, 0.7000, 0.4680,
        0.7000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4814, 0.7200, 0.7200, 0.4814, 0.7200, 0.7200, 0.4814, 0.7200, 0.4814,
        0.7200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4947, 0.7400, 0.7400, 0.4947, 0.7400, 0.7400, 0.4947, 0.7400, 0.4947,
        0.7400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5081, 0.7600, 0.7600, 0.5081, 0.7600, 0.7600, 0.5081, 0.7600, 0.5081,
        0.7600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5215, 0.7800, 0.7800, 0.5215, 0.7800, 0.7800, 0.5215, 0.7800, 0.5215,
        0.7800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5348, 0.8000, 0.8000, 0.5348, 0.8000, 0.8000, 0.5348, 0.8000, 0.5348,
        0.8000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5482, 0.8200, 0.8200, 0.5482, 0.8200, 0.8200, 0.5482, 0.8200, 0.5482,
        0.8200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5616, 0.8400, 0.8400, 0.5616, 0.8400, 0.8400, 0.5616, 0.8400, 0.5616,
        0.8400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5750, 0.8600, 0.8600, 0.5750, 0.8600, 0.8600, 0.5750, 0.8600, 0.5750,
        0.8600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5883, 0.8800, 0.8800, 0.5883, 0.8800, 0.8800, 0.5883, 0.8800, 0.5883,
        0.8800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6017, 0.9000, 0.9000, 0.6017, 0.9000, 0.9000, 0.6017, 0.9000, 0.6017,
        0.9000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6151, 0.9200, 0.9200, 0.6151, 0.9200, 0.9200, 0.6151, 0.9200, 0.6151,
        0.9200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6284, 0.9400, 0.9400, 0.6284, 0.9400, 0.9400, 0.6284, 0.9400, 0.6284,
        0.9400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6418, 0.9600, 0.9600, 0.6418, 0.9600, 0.9600, 0.6418, 0.9600, 0.6418,
        0.9600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00],
        [6.5069e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6552, 0.9800, 0.9800, 0.6552, 0.9800, 0.9800, 0.6552, 0.9800, 0.6552,
        0.9800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 7: Guess correctness - [False  True  True False  True  True False  True False  True]
DEBUG:src.train:Log Probs: tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]], grad_fn=<CatBackward0>)
INFO:src.train:Episode 7: Cumulative reward: 212.5182045251131
INFO:src.train:Episode 7: Reward Differences: 8.327244125306606
INFO:src.train:Episode 7: Average loss: -0.0
INFO:src.train:Episode 7: Last Step Accuracy: 0.6000000238418579
DEBUG:src.train:Episode 8: Input words: ['apple', 'orange', 'apple', 'orange', 'orange', 'orange', 'orange', 'orange', 'orange', 'orange']
DEBUG:src.train:Episode 8: Target words: ['apple', 'apple', 'orange', 'apple', 'apple', 'orange', 'orange', 'apple', 'orange', 'apple']
DEBUG:src.train:Input Word Indices: [0 1 0 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([0, 1, 0, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.2076e-09, 1.0000e+00],
        [4.2076e-09, 1.0000e+00],
        [4.2076e-09, 1.0000e+00],
        [4.2076e-09, 1.0000e+00],
        [4.2076e-09, 1.0000e+00],
        [4.2076e-09, 1.0000e+00],
        [4.2076e-09, 1.0000e+00],
        [4.2076e-09, 1.0000e+00],
        [4.2076e-09, 1.0000e+00],
        [4.2076e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.7342e-11, 1.0000e+00],
        [2.7342e-11, 1.0000e+00],
        [2.7342e-11, 1.0000e+00],
        [2.7342e-11, 1.0000e+00],
        [2.7342e-11, 1.0000e+00],
        [2.7342e-11, 1.0000e+00],
        [2.7342e-11, 1.0000e+00],
        [2.7342e-11, 1.0000e+00],
        [2.7342e-11, 1.0000e+00],
        [2.7342e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0134, 0.0134, 0.0200, 0.0134, 0.0134, 0.0200, 0.0200, 0.0134, 0.0200,
        0.0134])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.2752e-11, 1.0000e+00],
        [1.2752e-11, 1.0000e+00],
        [1.2752e-11, 1.0000e+00],
        [1.2752e-11, 1.0000e+00],
        [1.2752e-11, 1.0000e+00],
        [1.2752e-11, 1.0000e+00],
        [1.2752e-11, 1.0000e+00],
        [1.2752e-11, 1.0000e+00],
        [1.2752e-11, 1.0000e+00],
        [1.2752e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0267, 0.0267, 0.0400, 0.0267, 0.0267, 0.0400, 0.0400, 0.0267, 0.0400,
        0.0267])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1483e-11, 1.0000e+00],
        [1.1483e-11, 1.0000e+00],
        [1.1483e-11, 1.0000e+00],
        [1.1483e-11, 1.0000e+00],
        [1.1483e-11, 1.0000e+00],
        [1.1483e-11, 1.0000e+00],
        [1.1483e-11, 1.0000e+00],
        [1.1483e-11, 1.0000e+00],
        [1.1483e-11, 1.0000e+00],
        [1.1483e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0401, 0.0401, 0.0600, 0.0401, 0.0401, 0.0600, 0.0600, 0.0401, 0.0600,
        0.0401])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1321e-11, 1.0000e+00],
        [1.1321e-11, 1.0000e+00],
        [1.1321e-11, 1.0000e+00],
        [1.1321e-11, 1.0000e+00],
        [1.1321e-11, 1.0000e+00],
        [1.1321e-11, 1.0000e+00],
        [1.1321e-11, 1.0000e+00],
        [1.1321e-11, 1.0000e+00],
        [1.1321e-11, 1.0000e+00],
        [1.1321e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0535, 0.0535, 0.0800, 0.0535, 0.0535, 0.0800, 0.0800, 0.0535, 0.0800,
        0.0535])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1299e-11, 1.0000e+00],
        [1.1299e-11, 1.0000e+00],
        [1.1299e-11, 1.0000e+00],
        [1.1299e-11, 1.0000e+00],
        [1.1299e-11, 1.0000e+00],
        [1.1299e-11, 1.0000e+00],
        [1.1299e-11, 1.0000e+00],
        [1.1299e-11, 1.0000e+00],
        [1.1299e-11, 1.0000e+00],
        [1.1299e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0669, 0.0669, 0.1000, 0.0669, 0.0669, 0.1000, 0.1000, 0.0669, 0.1000,
        0.0669])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0802, 0.0802, 0.1200, 0.0802, 0.0802, 0.1200, 0.1200, 0.0802, 0.1200,
        0.0802])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0936, 0.0936, 0.1400, 0.0936, 0.0936, 0.1400, 0.1400, 0.0936, 0.1400,
        0.0936])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1070, 0.1070, 0.1600, 0.1070, 0.1070, 0.1600, 0.1600, 0.1070, 0.1600,
        0.1070])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1203, 0.1203, 0.1800, 0.1203, 0.1203, 0.1800, 0.1800, 0.1203, 0.1800,
        0.1203])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1337, 0.1337, 0.2000, 0.1337, 0.1337, 0.2000, 0.2000, 0.1337, 0.2000,
        0.1337])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1471, 0.1471, 0.2200, 0.1471, 0.1471, 0.2200, 0.2200, 0.1471, 0.2200,
        0.1471])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1605, 0.1605, 0.2400, 0.1605, 0.1605, 0.2400, 0.2400, 0.1605, 0.2400,
        0.1605])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1738, 0.1738, 0.2600, 0.1738, 0.1738, 0.2600, 0.2600, 0.1738, 0.2600,
        0.1738])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1872, 0.1872, 0.2800, 0.1872, 0.1872, 0.2800, 0.2800, 0.1872, 0.2800,
        0.1872])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2006, 0.2006, 0.3000, 0.2006, 0.2006, 0.3000, 0.3000, 0.2006, 0.3000,
        0.2006])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2139, 0.2139, 0.3200, 0.2139, 0.2139, 0.3200, 0.3200, 0.2139, 0.3200,
        0.2139])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2273, 0.2273, 0.3400, 0.2273, 0.2273, 0.3400, 0.3400, 0.2273, 0.3400,
        0.2273])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2407, 0.2407, 0.3600, 0.2407, 0.2407, 0.3600, 0.3600, 0.2407, 0.3600,
        0.2407])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2541, 0.2541, 0.3800, 0.2541, 0.2541, 0.3800, 0.3800, 0.2541, 0.3800,
        0.2541])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2674, 0.2674, 0.4000, 0.2674, 0.2674, 0.4000, 0.4000, 0.2674, 0.4000,
        0.2674])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2808, 0.2808, 0.4200, 0.2808, 0.2808, 0.4200, 0.4200, 0.2808, 0.4200,
        0.2808])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2942, 0.2942, 0.4400, 0.2942, 0.2942, 0.4400, 0.4400, 0.2942, 0.4400,
        0.2942])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3075, 0.3075, 0.4600, 0.3075, 0.3075, 0.4600, 0.4600, 0.3075, 0.4600,
        0.3075])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3209, 0.3209, 0.4800, 0.3209, 0.3209, 0.4800, 0.4800, 0.3209, 0.4800,
        0.3209])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3343, 0.3343, 0.5000, 0.3343, 0.3343, 0.5000, 0.5000, 0.3343, 0.5000,
        0.3343])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3476, 0.3476, 0.5200, 0.3476, 0.3476, 0.5200, 0.5200, 0.3476, 0.5200,
        0.3476])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3610, 0.3610, 0.5400, 0.3610, 0.3610, 0.5400, 0.5400, 0.3610, 0.5400,
        0.3610])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3744, 0.3744, 0.5600, 0.3744, 0.3744, 0.5600, 0.5600, 0.3744, 0.5600,
        0.3744])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3878, 0.3878, 0.5800, 0.3878, 0.3878, 0.5800, 0.5800, 0.3878, 0.5800,
        0.3878])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4011, 0.4011, 0.6000, 0.4011, 0.4011, 0.6000, 0.6000, 0.4011, 0.6000,
        0.4011])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4145, 0.4145, 0.6200, 0.4145, 0.4145, 0.6200, 0.6200, 0.4145, 0.6200,
        0.4145])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4279, 0.4279, 0.6400, 0.4279, 0.4279, 0.6400, 0.6400, 0.4279, 0.6400,
        0.4279])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4412, 0.4412, 0.6600, 0.4412, 0.4412, 0.6600, 0.6600, 0.4412, 0.6600,
        0.4412])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4546, 0.4546, 0.6800, 0.4546, 0.4546, 0.6800, 0.6800, 0.4546, 0.6800,
        0.4546])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4680, 0.4680, 0.7000, 0.4680, 0.4680, 0.7000, 0.7000, 0.4680, 0.7000,
        0.4680])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4814, 0.4814, 0.7200, 0.4814, 0.4814, 0.7200, 0.7200, 0.4814, 0.7200,
        0.4814])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4947, 0.4947, 0.7400, 0.4947, 0.4947, 0.7400, 0.7400, 0.4947, 0.7400,
        0.4947])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5081, 0.5081, 0.7600, 0.5081, 0.5081, 0.7600, 0.7600, 0.5081, 0.7600,
        0.5081])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5215, 0.5215, 0.7800, 0.5215, 0.5215, 0.7800, 0.7800, 0.5215, 0.7800,
        0.5215])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5348, 0.5348, 0.8000, 0.5348, 0.5348, 0.8000, 0.8000, 0.5348, 0.8000,
        0.5348])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5482, 0.5482, 0.8200, 0.5482, 0.5482, 0.8200, 0.8200, 0.5482, 0.8200,
        0.5482])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5616, 0.5616, 0.8400, 0.5616, 0.5616, 0.8400, 0.8400, 0.5616, 0.8400,
        0.5616])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5750, 0.5750, 0.8600, 0.5750, 0.5750, 0.8600, 0.8600, 0.5750, 0.8600,
        0.5750])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5883, 0.5883, 0.8800, 0.5883, 0.5883, 0.8800, 0.8800, 0.5883, 0.8800,
        0.5883])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6017, 0.6017, 0.9000, 0.6017, 0.6017, 0.9000, 0.9000, 0.6017, 0.9000,
        0.6017])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6151, 0.6151, 0.9200, 0.6151, 0.6151, 0.9200, 0.9200, 0.6151, 0.9200,
        0.6151])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6284, 0.6284, 0.9400, 0.6284, 0.6284, 0.9400, 0.9400, 0.6284, 0.9400,
        0.6284])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6418, 0.6418, 0.9600, 0.6418, 0.6418, 0.9600, 0.9600, 0.6418, 0.9600,
        0.6418])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00],
        [1.1296e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6552, 0.6552, 0.9800, 0.6552, 0.6552, 0.9800, 0.9800, 0.6552, 0.9800,
        0.6552])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 8: Guess correctness - [False False  True False False  True  True False  True False]
DEBUG:src.train:Log Probs: tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]], grad_fn=<CatBackward0>)
INFO:src.train:Episode 8: Cumulative reward: 196.27730682492256
INFO:src.train:Episode 8: Reward Differences: 7.690866090357304
INFO:src.train:Episode 8: Average loss: -0.0
INFO:src.train:Episode 8: Last Step Accuracy: 0.4000000059604645
DEBUG:src.train:Episode 9: Input words: ['apple', 'orange', 'apple', 'apple', 'orange', 'apple', 'apple', 'apple', 'orange', 'apple']
DEBUG:src.train:Episode 9: Target words: ['orange', 'orange', 'apple', 'apple', 'apple', 'apple', 'orange', 'orange', 'apple', 'apple']
DEBUG:src.train:Input Word Indices: [0 1 0 0 1 0 0 0 1 0]
DEBUG:src.train:Input Tensor: tensor([0, 1, 0, 0, 1, 0, 0, 0, 1, 0])
DEBUG:src.train:Action Probs: tensor([[1.3189e-09, 1.0000e+00],
        [1.3189e-09, 1.0000e+00],
        [1.3189e-09, 1.0000e+00],
        [1.3189e-09, 1.0000e+00],
        [1.3189e-09, 1.0000e+00],
        [1.3189e-09, 1.0000e+00],
        [1.3189e-09, 1.0000e+00],
        [1.3189e-09, 1.0000e+00],
        [1.3189e-09, 1.0000e+00],
        [1.3189e-09, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.3218e-12, 1.0000e+00],
        [6.3218e-12, 1.0000e+00],
        [6.3218e-12, 1.0000e+00],
        [6.3218e-12, 1.0000e+00],
        [6.3218e-12, 1.0000e+00],
        [6.3218e-12, 1.0000e+00],
        [6.3218e-12, 1.0000e+00],
        [6.3218e-12, 1.0000e+00],
        [6.3218e-12, 1.0000e+00],
        [6.3218e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0200, 0.0200, 0.0134, 0.0134, 0.0134, 0.0134, 0.0200, 0.0200, 0.0134,
        0.0134])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.8010e-12, 1.0000e+00],
        [2.8010e-12, 1.0000e+00],
        [2.8010e-12, 1.0000e+00],
        [2.8010e-12, 1.0000e+00],
        [2.8010e-12, 1.0000e+00],
        [2.8010e-12, 1.0000e+00],
        [2.8010e-12, 1.0000e+00],
        [2.8010e-12, 1.0000e+00],
        [2.8010e-12, 1.0000e+00],
        [2.8010e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0400, 0.0400, 0.0267, 0.0267, 0.0267, 0.0267, 0.0400, 0.0400, 0.0267,
        0.0267])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5043e-12, 1.0000e+00],
        [2.5043e-12, 1.0000e+00],
        [2.5043e-12, 1.0000e+00],
        [2.5043e-12, 1.0000e+00],
        [2.5043e-12, 1.0000e+00],
        [2.5043e-12, 1.0000e+00],
        [2.5043e-12, 1.0000e+00],
        [2.5043e-12, 1.0000e+00],
        [2.5043e-12, 1.0000e+00],
        [2.5043e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0600, 0.0600, 0.0401, 0.0401, 0.0401, 0.0401, 0.0600, 0.0600, 0.0401,
        0.0401])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4665e-12, 1.0000e+00],
        [2.4665e-12, 1.0000e+00],
        [2.4665e-12, 1.0000e+00],
        [2.4665e-12, 1.0000e+00],
        [2.4665e-12, 1.0000e+00],
        [2.4665e-12, 1.0000e+00],
        [2.4665e-12, 1.0000e+00],
        [2.4665e-12, 1.0000e+00],
        [2.4665e-12, 1.0000e+00],
        [2.4665e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0800, 0.0800, 0.0535, 0.0535, 0.0535, 0.0535, 0.0800, 0.0800, 0.0535,
        0.0535])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4615e-12, 1.0000e+00],
        [2.4615e-12, 1.0000e+00],
        [2.4615e-12, 1.0000e+00],
        [2.4615e-12, 1.0000e+00],
        [2.4615e-12, 1.0000e+00],
        [2.4615e-12, 1.0000e+00],
        [2.4615e-12, 1.0000e+00],
        [2.4615e-12, 1.0000e+00],
        [2.4615e-12, 1.0000e+00],
        [2.4615e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1000, 0.1000, 0.0669, 0.0669, 0.0669, 0.0669, 0.1000, 0.1000, 0.0669,
        0.0669])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4608e-12, 1.0000e+00],
        [2.4608e-12, 1.0000e+00],
        [2.4608e-12, 1.0000e+00],
        [2.4608e-12, 1.0000e+00],
        [2.4608e-12, 1.0000e+00],
        [2.4608e-12, 1.0000e+00],
        [2.4608e-12, 1.0000e+00],
        [2.4608e-12, 1.0000e+00],
        [2.4608e-12, 1.0000e+00],
        [2.4608e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1200, 0.1200, 0.0802, 0.0802, 0.0802, 0.0802, 0.1200, 0.1200, 0.0802,
        0.0802])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1400, 0.1400, 0.0936, 0.0936, 0.0936, 0.0936, 0.1400, 0.1400, 0.0936,
        0.0936])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1600, 0.1600, 0.1070, 0.1070, 0.1070, 0.1070, 0.1600, 0.1600, 0.1070,
        0.1070])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1800, 0.1800, 0.1203, 0.1203, 0.1203, 0.1203, 0.1800, 0.1800, 0.1203,
        0.1203])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2000, 0.2000, 0.1337, 0.1337, 0.1337, 0.1337, 0.2000, 0.2000, 0.1337,
        0.1337])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2200, 0.2200, 0.1471, 0.1471, 0.1471, 0.1471, 0.2200, 0.2200, 0.1471,
        0.1471])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2400, 0.2400, 0.1605, 0.1605, 0.1605, 0.1605, 0.2400, 0.2400, 0.1605,
        0.1605])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2600, 0.2600, 0.1738, 0.1738, 0.1738, 0.1738, 0.2600, 0.2600, 0.1738,
        0.1738])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2800, 0.2800, 0.1872, 0.1872, 0.1872, 0.1872, 0.2800, 0.2800, 0.1872,
        0.1872])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3000, 0.3000, 0.2006, 0.2006, 0.2006, 0.2006, 0.3000, 0.3000, 0.2006,
        0.2006])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3200, 0.3200, 0.2139, 0.2139, 0.2139, 0.2139, 0.3200, 0.3200, 0.2139,
        0.2139])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3400, 0.3400, 0.2273, 0.2273, 0.2273, 0.2273, 0.3400, 0.3400, 0.2273,
        0.2273])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3600, 0.3600, 0.2407, 0.2407, 0.2407, 0.2407, 0.3600, 0.3600, 0.2407,
        0.2407])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3800, 0.3800, 0.2541, 0.2541, 0.2541, 0.2541, 0.3800, 0.3800, 0.2541,
        0.2541])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4000, 0.4000, 0.2674, 0.2674, 0.2674, 0.2674, 0.4000, 0.4000, 0.2674,
        0.2674])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4200, 0.4200, 0.2808, 0.2808, 0.2808, 0.2808, 0.4200, 0.4200, 0.2808,
        0.2808])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4400, 0.4400, 0.2942, 0.2942, 0.2942, 0.2942, 0.4400, 0.4400, 0.2942,
        0.2942])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4600, 0.4600, 0.3075, 0.3075, 0.3075, 0.3075, 0.4600, 0.4600, 0.3075,
        0.3075])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4800, 0.4800, 0.3209, 0.3209, 0.3209, 0.3209, 0.4800, 0.4800, 0.3209,
        0.3209])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5000, 0.5000, 0.3343, 0.3343, 0.3343, 0.3343, 0.5000, 0.5000, 0.3343,
        0.3343])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5200, 0.5200, 0.3476, 0.3476, 0.3476, 0.3476, 0.5200, 0.5200, 0.3476,
        0.3476])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5400, 0.5400, 0.3610, 0.3610, 0.3610, 0.3610, 0.5400, 0.5400, 0.3610,
        0.3610])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5600, 0.5600, 0.3744, 0.3744, 0.3744, 0.3744, 0.5600, 0.5600, 0.3744,
        0.3744])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5800, 0.5800, 0.3878, 0.3878, 0.3878, 0.3878, 0.5800, 0.5800, 0.3878,
        0.3878])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6000, 0.6000, 0.4011, 0.4011, 0.4011, 0.4011, 0.6000, 0.6000, 0.4011,
        0.4011])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6200, 0.6200, 0.4145, 0.4145, 0.4145, 0.4145, 0.6200, 0.6200, 0.4145,
        0.4145])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6400, 0.6400, 0.4279, 0.4279, 0.4279, 0.4279, 0.6400, 0.6400, 0.4279,
        0.4279])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6600, 0.6600, 0.4412, 0.4412, 0.4412, 0.4412, 0.6600, 0.6600, 0.4412,
        0.4412])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6800, 0.6800, 0.4546, 0.4546, 0.4546, 0.4546, 0.6800, 0.6800, 0.4546,
        0.4546])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7000, 0.7000, 0.4680, 0.4680, 0.4680, 0.4680, 0.7000, 0.7000, 0.4680,
        0.4680])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7200, 0.7200, 0.4814, 0.4814, 0.4814, 0.4814, 0.7200, 0.7200, 0.4814,
        0.4814])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7400, 0.7400, 0.4947, 0.4947, 0.4947, 0.4947, 0.7400, 0.7400, 0.4947,
        0.4947])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7600, 0.7600, 0.5081, 0.5081, 0.5081, 0.5081, 0.7600, 0.7600, 0.5081,
        0.5081])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7800, 0.7800, 0.5215, 0.5215, 0.5215, 0.5215, 0.7800, 0.7800, 0.5215,
        0.5215])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8000, 0.8000, 0.5348, 0.5348, 0.5348, 0.5348, 0.8000, 0.8000, 0.5348,
        0.5348])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8200, 0.8200, 0.5482, 0.5482, 0.5482, 0.5482, 0.8200, 0.8200, 0.5482,
        0.5482])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8400, 0.8400, 0.5616, 0.5616, 0.5616, 0.5616, 0.8400, 0.8400, 0.5616,
        0.5616])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8600, 0.8600, 0.5750, 0.5750, 0.5750, 0.5750, 0.8600, 0.8600, 0.5750,
        0.5750])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8800, 0.8800, 0.5883, 0.5883, 0.5883, 0.5883, 0.8800, 0.8800, 0.5883,
        0.5883])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9000, 0.9000, 0.6017, 0.6017, 0.6017, 0.6017, 0.9000, 0.9000, 0.6017,
        0.6017])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9200, 0.9200, 0.6151, 0.6151, 0.6151, 0.6151, 0.9200, 0.9200, 0.6151,
        0.6151])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9400, 0.9400, 0.6284, 0.6284, 0.6284, 0.6284, 0.9400, 0.9400, 0.6284,
        0.6284])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9600, 0.9600, 0.6418, 0.6418, 0.6418, 0.6418, 0.9600, 0.9600, 0.6418,
        0.6418])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00],
        [2.4607e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9800, 0.9800, 0.6552, 0.6552, 0.6552, 0.6552, 0.9800, 0.9800, 0.6552,
        0.6552])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 9: Guess correctness - [ True  True False False False False  True  True False False]
DEBUG:src.train:Log Probs: tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]], grad_fn=<CatBackward0>)
INFO:src.train:Episode 9: Cumulative reward: 196.27730682492256
INFO:src.train:Episode 9: Reward Differences: 7.690866090357304
INFO:src.train:Episode 9: Average loss: -0.0
INFO:src.train:Episode 9: Last Step Accuracy: 0.4000000059604645
DEBUG:src.train:Episode 10: Input words: ['apple', 'orange', 'orange', 'orange', 'apple', 'apple', 'orange', 'orange', 'apple', 'apple']
DEBUG:src.train:Episode 10: Target words: ['apple', 'apple', 'orange', 'orange', 'apple', 'orange', 'apple', 'apple', 'apple', 'apple']
DEBUG:src.train:Input Word Indices: [0 1 1 1 0 0 1 1 0 0]
DEBUG:src.train:Input Tensor: tensor([0, 1, 1, 1, 0, 0, 1, 1, 0, 0])
DEBUG:src.train:Action Probs: tensor([[4.7386e-10, 1.0000e+00],
        [4.7386e-10, 1.0000e+00],
        [4.7386e-10, 1.0000e+00],
        [4.7386e-10, 1.0000e+00],
        [4.7386e-10, 1.0000e+00],
        [4.7386e-10, 1.0000e+00],
        [4.7386e-10, 1.0000e+00],
        [4.7386e-10, 1.0000e+00],
        [4.7386e-10, 1.0000e+00],
        [4.7386e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.7393e-12, 1.0000e+00],
        [1.7393e-12, 1.0000e+00],
        [1.7393e-12, 1.0000e+00],
        [1.7393e-12, 1.0000e+00],
        [1.7393e-12, 1.0000e+00],
        [1.7393e-12, 1.0000e+00],
        [1.7393e-12, 1.0000e+00],
        [1.7393e-12, 1.0000e+00],
        [1.7393e-12, 1.0000e+00],
        [1.7393e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0134, 0.0134, 0.0200, 0.0200, 0.0134, 0.0200, 0.0134, 0.0134, 0.0134,
        0.0134])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.3800e-13, 1.0000e+00],
        [7.3800e-13, 1.0000e+00],
        [7.3800e-13, 1.0000e+00],
        [7.3800e-13, 1.0000e+00],
        [7.3800e-13, 1.0000e+00],
        [7.3800e-13, 1.0000e+00],
        [7.3800e-13, 1.0000e+00],
        [7.3800e-13, 1.0000e+00],
        [7.3800e-13, 1.0000e+00],
        [7.3800e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0267, 0.0267, 0.0400, 0.0400, 0.0267, 0.0400, 0.0267, 0.0267, 0.0267,
        0.0267])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.5584e-13, 1.0000e+00],
        [6.5584e-13, 1.0000e+00],
        [6.5584e-13, 1.0000e+00],
        [6.5584e-13, 1.0000e+00],
        [6.5584e-13, 1.0000e+00],
        [6.5584e-13, 1.0000e+00],
        [6.5584e-13, 1.0000e+00],
        [6.5584e-13, 1.0000e+00],
        [6.5584e-13, 1.0000e+00],
        [6.5584e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0401, 0.0401, 0.0600, 0.0600, 0.0401, 0.0600, 0.0401, 0.0401, 0.0401,
        0.0401])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4542e-13, 1.0000e+00],
        [6.4542e-13, 1.0000e+00],
        [6.4542e-13, 1.0000e+00],
        [6.4542e-13, 1.0000e+00],
        [6.4542e-13, 1.0000e+00],
        [6.4542e-13, 1.0000e+00],
        [6.4542e-13, 1.0000e+00],
        [6.4542e-13, 1.0000e+00],
        [6.4542e-13, 1.0000e+00],
        [6.4542e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0535, 0.0535, 0.0800, 0.0800, 0.0535, 0.0800, 0.0535, 0.0535, 0.0535,
        0.0535])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4402e-13, 1.0000e+00],
        [6.4402e-13, 1.0000e+00],
        [6.4402e-13, 1.0000e+00],
        [6.4402e-13, 1.0000e+00],
        [6.4402e-13, 1.0000e+00],
        [6.4402e-13, 1.0000e+00],
        [6.4402e-13, 1.0000e+00],
        [6.4402e-13, 1.0000e+00],
        [6.4402e-13, 1.0000e+00],
        [6.4402e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0669, 0.0669, 0.1000, 0.1000, 0.0669, 0.1000, 0.0669, 0.0669, 0.0669,
        0.0669])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4383e-13, 1.0000e+00],
        [6.4383e-13, 1.0000e+00],
        [6.4383e-13, 1.0000e+00],
        [6.4383e-13, 1.0000e+00],
        [6.4383e-13, 1.0000e+00],
        [6.4383e-13, 1.0000e+00],
        [6.4383e-13, 1.0000e+00],
        [6.4383e-13, 1.0000e+00],
        [6.4383e-13, 1.0000e+00],
        [6.4383e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0802, 0.0802, 0.1200, 0.1200, 0.0802, 0.1200, 0.0802, 0.0802, 0.0802,
        0.0802])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0936, 0.0936, 0.1400, 0.1400, 0.0936, 0.1400, 0.0936, 0.0936, 0.0936,
        0.0936])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1070, 0.1070, 0.1600, 0.1600, 0.1070, 0.1600, 0.1070, 0.1070, 0.1070,
        0.1070])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1203, 0.1203, 0.1800, 0.1800, 0.1203, 0.1800, 0.1203, 0.1203, 0.1203,
        0.1203])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1337, 0.1337, 0.2000, 0.2000, 0.1337, 0.2000, 0.1337, 0.1337, 0.1337,
        0.1337])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1471, 0.1471, 0.2200, 0.2200, 0.1471, 0.2200, 0.1471, 0.1471, 0.1471,
        0.1471])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1605, 0.1605, 0.2400, 0.2400, 0.1605, 0.2400, 0.1605, 0.1605, 0.1605,
        0.1605])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1738, 0.1738, 0.2600, 0.2600, 0.1738, 0.2600, 0.1738, 0.1738, 0.1738,
        0.1738])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1872, 0.1872, 0.2800, 0.2800, 0.1872, 0.2800, 0.1872, 0.1872, 0.1872,
        0.1872])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2006, 0.2006, 0.3000, 0.3000, 0.2006, 0.3000, 0.2006, 0.2006, 0.2006,
        0.2006])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2139, 0.2139, 0.3200, 0.3200, 0.2139, 0.3200, 0.2139, 0.2139, 0.2139,
        0.2139])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2273, 0.2273, 0.3400, 0.3400, 0.2273, 0.3400, 0.2273, 0.2273, 0.2273,
        0.2273])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2407, 0.2407, 0.3600, 0.3600, 0.2407, 0.3600, 0.2407, 0.2407, 0.2407,
        0.2407])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2541, 0.2541, 0.3800, 0.3800, 0.2541, 0.3800, 0.2541, 0.2541, 0.2541,
        0.2541])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2674, 0.2674, 0.4000, 0.4000, 0.2674, 0.4000, 0.2674, 0.2674, 0.2674,
        0.2674])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2808, 0.2808, 0.4200, 0.4200, 0.2808, 0.4200, 0.2808, 0.2808, 0.2808,
        0.2808])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2942, 0.2942, 0.4400, 0.4400, 0.2942, 0.4400, 0.2942, 0.2942, 0.2942,
        0.2942])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3075, 0.3075, 0.4600, 0.4600, 0.3075, 0.4600, 0.3075, 0.3075, 0.3075,
        0.3075])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3209, 0.3209, 0.4800, 0.4800, 0.3209, 0.4800, 0.3209, 0.3209, 0.3209,
        0.3209])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3343, 0.3343, 0.5000, 0.5000, 0.3343, 0.5000, 0.3343, 0.3343, 0.3343,
        0.3343])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3476, 0.3476, 0.5200, 0.5200, 0.3476, 0.5200, 0.3476, 0.3476, 0.3476,
        0.3476])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3610, 0.3610, 0.5400, 0.5400, 0.3610, 0.5400, 0.3610, 0.3610, 0.3610,
        0.3610])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3744, 0.3744, 0.5600, 0.5600, 0.3744, 0.5600, 0.3744, 0.3744, 0.3744,
        0.3744])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3878, 0.3878, 0.5800, 0.5800, 0.3878, 0.5800, 0.3878, 0.3878, 0.3878,
        0.3878])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4011, 0.4011, 0.6000, 0.6000, 0.4011, 0.6000, 0.4011, 0.4011, 0.4011,
        0.4011])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4145, 0.4145, 0.6200, 0.6200, 0.4145, 0.6200, 0.4145, 0.4145, 0.4145,
        0.4145])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4279, 0.4279, 0.6400, 0.6400, 0.4279, 0.6400, 0.4279, 0.4279, 0.4279,
        0.4279])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4412, 0.4412, 0.6600, 0.6600, 0.4412, 0.6600, 0.4412, 0.4412, 0.4412,
        0.4412])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4546, 0.4546, 0.6800, 0.6800, 0.4546, 0.6800, 0.4546, 0.4546, 0.4546,
        0.4546])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4680, 0.4680, 0.7000, 0.7000, 0.4680, 0.7000, 0.4680, 0.4680, 0.4680,
        0.4680])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4814, 0.4814, 0.7200, 0.7200, 0.4814, 0.7200, 0.4814, 0.4814, 0.4814,
        0.4814])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4947, 0.4947, 0.7400, 0.7400, 0.4947, 0.7400, 0.4947, 0.4947, 0.4947,
        0.4947])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5081, 0.5081, 0.7600, 0.7600, 0.5081, 0.7600, 0.5081, 0.5081, 0.5081,
        0.5081])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5215, 0.5215, 0.7800, 0.7800, 0.5215, 0.7800, 0.5215, 0.5215, 0.5215,
        0.5215])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5348, 0.5348, 0.8000, 0.8000, 0.5348, 0.8000, 0.5348, 0.5348, 0.5348,
        0.5348])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5482, 0.5482, 0.8200, 0.8200, 0.5482, 0.8200, 0.5482, 0.5482, 0.5482,
        0.5482])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5616, 0.5616, 0.8400, 0.8400, 0.5616, 0.8400, 0.5616, 0.5616, 0.5616,
        0.5616])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5750, 0.5750, 0.8600, 0.8600, 0.5750, 0.8600, 0.5750, 0.5750, 0.5750,
        0.5750])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5883, 0.5883, 0.8800, 0.8800, 0.5883, 0.8800, 0.5883, 0.5883, 0.5883,
        0.5883])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6017, 0.6017, 0.9000, 0.9000, 0.6017, 0.9000, 0.6017, 0.6017, 0.6017,
        0.6017])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6151, 0.6151, 0.9200, 0.9200, 0.6151, 0.9200, 0.6151, 0.6151, 0.6151,
        0.6151])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6284, 0.6284, 0.9400, 0.9400, 0.6284, 0.9400, 0.6284, 0.6284, 0.6284,
        0.6284])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6418, 0.6418, 0.9600, 0.9600, 0.6418, 0.9600, 0.6418, 0.6418, 0.6418,
        0.6418])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00],
        [6.4380e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6552, 0.6552, 0.9800, 0.9800, 0.6552, 0.9800, 0.6552, 0.6552, 0.6552,
        0.6552])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 10: Guess correctness - [False False  True  True False  True False False False False]
DEBUG:src.train:Log Probs: tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]], grad_fn=<CatBackward0>)
INFO:src.train:Episode 10: Cumulative reward: 188.1568579748273
INFO:src.train:Episode 10: Reward Differences: 7.372677072882652
INFO:src.train:Episode 10: Average loss: -0.0
INFO:src.train:Episode 10: Last Step Accuracy: 0.30000001192092896
DEBUG:src.train:Episode 11: Input words: ['orange', 'apple', 'orange', 'apple', 'orange', 'orange', 'orange', 'apple', 'orange', 'orange']
DEBUG:src.train:Episode 11: Target words: ['orange', 'orange', 'apple', 'orange', 'apple', 'apple', 'orange', 'apple', 'apple', 'apple']
DEBUG:src.train:Input Word Indices: [1 0 1 0 1 1 1 0 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 0, 1, 0, 1, 1, 1, 0, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9080e-10, 1.0000e+00],
        [1.9080e-10, 1.0000e+00],
        [1.9080e-10, 1.0000e+00],
        [1.9080e-10, 1.0000e+00],
        [1.9080e-10, 1.0000e+00],
        [1.9080e-10, 1.0000e+00],
        [1.9080e-10, 1.0000e+00],
        [1.9080e-10, 1.0000e+00],
        [1.9080e-10, 1.0000e+00],
        [1.9080e-10, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.5275e-13, 1.0000e+00],
        [5.5275e-13, 1.0000e+00],
        [5.5275e-13, 1.0000e+00],
        [5.5275e-13, 1.0000e+00],
        [5.5275e-13, 1.0000e+00],
        [5.5275e-13, 1.0000e+00],
        [5.5275e-13, 1.0000e+00],
        [5.5275e-13, 1.0000e+00],
        [5.5275e-13, 1.0000e+00],
        [5.5275e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0200, 0.0200, 0.0134, 0.0200, 0.0134, 0.0134, 0.0200, 0.0134, 0.0134,
        0.0134])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.2593e-13, 1.0000e+00],
        [2.2593e-13, 1.0000e+00],
        [2.2593e-13, 1.0000e+00],
        [2.2593e-13, 1.0000e+00],
        [2.2593e-13, 1.0000e+00],
        [2.2593e-13, 1.0000e+00],
        [2.2593e-13, 1.0000e+00],
        [2.2593e-13, 1.0000e+00],
        [2.2593e-13, 1.0000e+00],
        [2.2593e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0400, 0.0400, 0.0267, 0.0400, 0.0267, 0.0267, 0.0400, 0.0267, 0.0267,
        0.0267])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9974e-13, 1.0000e+00],
        [1.9974e-13, 1.0000e+00],
        [1.9974e-13, 1.0000e+00],
        [1.9974e-13, 1.0000e+00],
        [1.9974e-13, 1.0000e+00],
        [1.9974e-13, 1.0000e+00],
        [1.9974e-13, 1.0000e+00],
        [1.9974e-13, 1.0000e+00],
        [1.9974e-13, 1.0000e+00],
        [1.9974e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0600, 0.0600, 0.0401, 0.0600, 0.0401, 0.0401, 0.0600, 0.0401, 0.0401,
        0.0401])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9643e-13, 1.0000e+00],
        [1.9643e-13, 1.0000e+00],
        [1.9643e-13, 1.0000e+00],
        [1.9643e-13, 1.0000e+00],
        [1.9643e-13, 1.0000e+00],
        [1.9643e-13, 1.0000e+00],
        [1.9643e-13, 1.0000e+00],
        [1.9643e-13, 1.0000e+00],
        [1.9643e-13, 1.0000e+00],
        [1.9643e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0800, 0.0800, 0.0535, 0.0800, 0.0535, 0.0535, 0.0800, 0.0535, 0.0535,
        0.0535])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9598e-13, 1.0000e+00],
        [1.9598e-13, 1.0000e+00],
        [1.9598e-13, 1.0000e+00],
        [1.9598e-13, 1.0000e+00],
        [1.9598e-13, 1.0000e+00],
        [1.9598e-13, 1.0000e+00],
        [1.9598e-13, 1.0000e+00],
        [1.9598e-13, 1.0000e+00],
        [1.9598e-13, 1.0000e+00],
        [1.9598e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1000, 0.1000, 0.0669, 0.1000, 0.0669, 0.0669, 0.1000, 0.0669, 0.0669,
        0.0669])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9592e-13, 1.0000e+00],
        [1.9592e-13, 1.0000e+00],
        [1.9592e-13, 1.0000e+00],
        [1.9592e-13, 1.0000e+00],
        [1.9592e-13, 1.0000e+00],
        [1.9592e-13, 1.0000e+00],
        [1.9592e-13, 1.0000e+00],
        [1.9592e-13, 1.0000e+00],
        [1.9592e-13, 1.0000e+00],
        [1.9592e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1200, 0.1200, 0.0802, 0.1200, 0.0802, 0.0802, 0.1200, 0.0802, 0.0802,
        0.0802])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1400, 0.1400, 0.0936, 0.1400, 0.0936, 0.0936, 0.1400, 0.0936, 0.0936,
        0.0936])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1600, 0.1600, 0.1070, 0.1600, 0.1070, 0.1070, 0.1600, 0.1070, 0.1070,
        0.1070])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1800, 0.1800, 0.1203, 0.1800, 0.1203, 0.1203, 0.1800, 0.1203, 0.1203,
        0.1203])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2000, 0.2000, 0.1337, 0.2000, 0.1337, 0.1337, 0.2000, 0.1337, 0.1337,
        0.1337])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2200, 0.2200, 0.1471, 0.2200, 0.1471, 0.1471, 0.2200, 0.1471, 0.1471,
        0.1471])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2400, 0.2400, 0.1605, 0.2400, 0.1605, 0.1605, 0.2400, 0.1605, 0.1605,
        0.1605])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2600, 0.2600, 0.1738, 0.2600, 0.1738, 0.1738, 0.2600, 0.1738, 0.1738,
        0.1738])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2800, 0.2800, 0.1872, 0.2800, 0.1872, 0.1872, 0.2800, 0.1872, 0.1872,
        0.1872])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3000, 0.3000, 0.2006, 0.3000, 0.2006, 0.2006, 0.3000, 0.2006, 0.2006,
        0.2006])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3200, 0.3200, 0.2139, 0.3200, 0.2139, 0.2139, 0.3200, 0.2139, 0.2139,
        0.2139])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3400, 0.3400, 0.2273, 0.3400, 0.2273, 0.2273, 0.3400, 0.2273, 0.2273,
        0.2273])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3600, 0.3600, 0.2407, 0.3600, 0.2407, 0.2407, 0.3600, 0.2407, 0.2407,
        0.2407])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3800, 0.3800, 0.2541, 0.3800, 0.2541, 0.2541, 0.3800, 0.2541, 0.2541,
        0.2541])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4000, 0.4000, 0.2674, 0.4000, 0.2674, 0.2674, 0.4000, 0.2674, 0.2674,
        0.2674])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4200, 0.4200, 0.2808, 0.4200, 0.2808, 0.2808, 0.4200, 0.2808, 0.2808,
        0.2808])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4400, 0.4400, 0.2942, 0.4400, 0.2942, 0.2942, 0.4400, 0.2942, 0.2942,
        0.2942])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4600, 0.4600, 0.3075, 0.4600, 0.3075, 0.3075, 0.4600, 0.3075, 0.3075,
        0.3075])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4800, 0.4800, 0.3209, 0.4800, 0.3209, 0.3209, 0.4800, 0.3209, 0.3209,
        0.3209])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5000, 0.5000, 0.3343, 0.5000, 0.3343, 0.3343, 0.5000, 0.3343, 0.3343,
        0.3343])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5200, 0.5200, 0.3476, 0.5200, 0.3476, 0.3476, 0.5200, 0.3476, 0.3476,
        0.3476])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5400, 0.5400, 0.3610, 0.5400, 0.3610, 0.3610, 0.5400, 0.3610, 0.3610,
        0.3610])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5600, 0.5600, 0.3744, 0.5600, 0.3744, 0.3744, 0.5600, 0.3744, 0.3744,
        0.3744])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5800, 0.5800, 0.3878, 0.5800, 0.3878, 0.3878, 0.5800, 0.3878, 0.3878,
        0.3878])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6000, 0.6000, 0.4011, 0.6000, 0.4011, 0.4011, 0.6000, 0.4011, 0.4011,
        0.4011])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6200, 0.6200, 0.4145, 0.6200, 0.4145, 0.4145, 0.6200, 0.4145, 0.4145,
        0.4145])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6400, 0.6400, 0.4279, 0.6400, 0.4279, 0.4279, 0.6400, 0.4279, 0.4279,
        0.4279])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6600, 0.6600, 0.4412, 0.6600, 0.4412, 0.4412, 0.6600, 0.4412, 0.4412,
        0.4412])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6800, 0.6800, 0.4546, 0.6800, 0.4546, 0.4546, 0.6800, 0.4546, 0.4546,
        0.4546])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7000, 0.7000, 0.4680, 0.7000, 0.4680, 0.4680, 0.7000, 0.4680, 0.4680,
        0.4680])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7200, 0.7200, 0.4814, 0.7200, 0.4814, 0.4814, 0.7200, 0.4814, 0.4814,
        0.4814])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7400, 0.7400, 0.4947, 0.7400, 0.4947, 0.4947, 0.7400, 0.4947, 0.4947,
        0.4947])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7600, 0.7600, 0.5081, 0.7600, 0.5081, 0.5081, 0.7600, 0.5081, 0.5081,
        0.5081])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7800, 0.7800, 0.5215, 0.7800, 0.5215, 0.5215, 0.7800, 0.5215, 0.5215,
        0.5215])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8000, 0.8000, 0.5348, 0.8000, 0.5348, 0.5348, 0.8000, 0.5348, 0.5348,
        0.5348])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8200, 0.8200, 0.5482, 0.8200, 0.5482, 0.5482, 0.8200, 0.5482, 0.5482,
        0.5482])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8400, 0.8400, 0.5616, 0.8400, 0.5616, 0.5616, 0.8400, 0.5616, 0.5616,
        0.5616])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8600, 0.8600, 0.5750, 0.8600, 0.5750, 0.5750, 0.8600, 0.5750, 0.5750,
        0.5750])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8800, 0.8800, 0.5883, 0.8800, 0.5883, 0.5883, 0.8800, 0.5883, 0.5883,
        0.5883])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9000, 0.9000, 0.6017, 0.9000, 0.6017, 0.6017, 0.9000, 0.6017, 0.6017,
        0.6017])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9200, 0.9200, 0.6151, 0.9200, 0.6151, 0.6151, 0.9200, 0.6151, 0.6151,
        0.6151])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9400, 0.9400, 0.6284, 0.9400, 0.6284, 0.6284, 0.9400, 0.6284, 0.6284,
        0.6284])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9600, 0.9600, 0.6418, 0.9600, 0.6418, 0.6418, 0.9600, 0.6418, 0.6418,
        0.6418])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00],
        [1.9591e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9800, 0.9800, 0.6552, 0.9800, 0.6552, 0.6552, 0.9800, 0.6552, 0.6552,
        0.6552])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 11: Guess correctness - [ True  True False  True False False  True False False False]
DEBUG:src.train:Log Probs: tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]], grad_fn=<CatBackward0>)
INFO:src.train:Episode 11: Cumulative reward: 196.27730682492256
INFO:src.train:Episode 11: Reward Differences: 7.690866090357304
INFO:src.train:Episode 11: Average loss: -0.0
INFO:src.train:Episode 11: Last Step Accuracy: 0.4000000059604645
DEBUG:src.train:Episode 12: Input words: ['orange', 'apple', 'apple', 'orange', 'orange', 'orange', 'apple', 'apple', 'apple', 'apple']
DEBUG:src.train:Episode 12: Target words: ['apple', 'apple', 'orange', 'apple', 'apple', 'apple', 'orange', 'apple', 'orange', 'orange']
DEBUG:src.train:Input Word Indices: [1 0 0 1 1 1 0 0 0 0]
DEBUG:src.train:Input Tensor: tensor([1, 0, 0, 1, 1, 1, 0, 0, 0, 0])
DEBUG:src.train:Action Probs: tensor([[8.4666e-11, 1.0000e+00],
        [8.4666e-11, 1.0000e+00],
        [8.4666e-11, 1.0000e+00],
        [8.4666e-11, 1.0000e+00],
        [8.4666e-11, 1.0000e+00],
        [8.4666e-11, 1.0000e+00],
        [8.4666e-11, 1.0000e+00],
        [8.4666e-11, 1.0000e+00],
        [8.4666e-11, 1.0000e+00],
        [8.4666e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.9858e-13, 1.0000e+00],
        [1.9858e-13, 1.0000e+00],
        [1.9858e-13, 1.0000e+00],
        [1.9858e-13, 1.0000e+00],
        [1.9858e-13, 1.0000e+00],
        [1.9858e-13, 1.0000e+00],
        [1.9858e-13, 1.0000e+00],
        [1.9858e-13, 1.0000e+00],
        [1.9858e-13, 1.0000e+00],
        [1.9858e-13, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0134, 0.0134, 0.0200, 0.0134, 0.0134, 0.0134, 0.0200, 0.0134, 0.0200,
        0.0200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.8541e-14, 1.0000e+00],
        [7.8541e-14, 1.0000e+00],
        [7.8541e-14, 1.0000e+00],
        [7.8541e-14, 1.0000e+00],
        [7.8541e-14, 1.0000e+00],
        [7.8541e-14, 1.0000e+00],
        [7.8541e-14, 1.0000e+00],
        [7.8541e-14, 1.0000e+00],
        [7.8541e-14, 1.0000e+00],
        [7.8541e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0267, 0.0267, 0.0400, 0.0267, 0.0267, 0.0267, 0.0400, 0.0267, 0.0400,
        0.0400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.9118e-14, 1.0000e+00],
        [6.9118e-14, 1.0000e+00],
        [6.9118e-14, 1.0000e+00],
        [6.9118e-14, 1.0000e+00],
        [6.9118e-14, 1.0000e+00],
        [6.9118e-14, 1.0000e+00],
        [6.9118e-14, 1.0000e+00],
        [6.9118e-14, 1.0000e+00],
        [6.9118e-14, 1.0000e+00],
        [6.9118e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0401, 0.0401, 0.0600, 0.0401, 0.0401, 0.0401, 0.0600, 0.0401, 0.0600,
        0.0600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7930e-14, 1.0000e+00],
        [6.7930e-14, 1.0000e+00],
        [6.7930e-14, 1.0000e+00],
        [6.7930e-14, 1.0000e+00],
        [6.7930e-14, 1.0000e+00],
        [6.7930e-14, 1.0000e+00],
        [6.7930e-14, 1.0000e+00],
        [6.7930e-14, 1.0000e+00],
        [6.7930e-14, 1.0000e+00],
        [6.7930e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0535, 0.0535, 0.0800, 0.0535, 0.0535, 0.0535, 0.0800, 0.0535, 0.0800,
        0.0800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7771e-14, 1.0000e+00],
        [6.7771e-14, 1.0000e+00],
        [6.7771e-14, 1.0000e+00],
        [6.7771e-14, 1.0000e+00],
        [6.7771e-14, 1.0000e+00],
        [6.7771e-14, 1.0000e+00],
        [6.7771e-14, 1.0000e+00],
        [6.7771e-14, 1.0000e+00],
        [6.7771e-14, 1.0000e+00],
        [6.7771e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0669, 0.0669, 0.1000, 0.0669, 0.0669, 0.0669, 0.1000, 0.0669, 0.1000,
        0.1000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7749e-14, 1.0000e+00],
        [6.7749e-14, 1.0000e+00],
        [6.7749e-14, 1.0000e+00],
        [6.7749e-14, 1.0000e+00],
        [6.7749e-14, 1.0000e+00],
        [6.7749e-14, 1.0000e+00],
        [6.7749e-14, 1.0000e+00],
        [6.7749e-14, 1.0000e+00],
        [6.7749e-14, 1.0000e+00],
        [6.7749e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0802, 0.0802, 0.1200, 0.0802, 0.0802, 0.0802, 0.1200, 0.0802, 0.1200,
        0.1200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0936, 0.0936, 0.1400, 0.0936, 0.0936, 0.0936, 0.1400, 0.0936, 0.1400,
        0.1400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1070, 0.1070, 0.1600, 0.1070, 0.1070, 0.1070, 0.1600, 0.1070, 0.1600,
        0.1600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1203, 0.1203, 0.1800, 0.1203, 0.1203, 0.1203, 0.1800, 0.1203, 0.1800,
        0.1800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1337, 0.1337, 0.2000, 0.1337, 0.1337, 0.1337, 0.2000, 0.1337, 0.2000,
        0.2000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1471, 0.1471, 0.2200, 0.1471, 0.1471, 0.1471, 0.2200, 0.1471, 0.2200,
        0.2200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1605, 0.1605, 0.2400, 0.1605, 0.1605, 0.1605, 0.2400, 0.1605, 0.2400,
        0.2400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1738, 0.1738, 0.2600, 0.1738, 0.1738, 0.1738, 0.2600, 0.1738, 0.2600,
        0.2600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1872, 0.1872, 0.2800, 0.1872, 0.1872, 0.1872, 0.2800, 0.1872, 0.2800,
        0.2800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2006, 0.2006, 0.3000, 0.2006, 0.2006, 0.2006, 0.3000, 0.2006, 0.3000,
        0.3000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2139, 0.2139, 0.3200, 0.2139, 0.2139, 0.2139, 0.3200, 0.2139, 0.3200,
        0.3200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2273, 0.2273, 0.3400, 0.2273, 0.2273, 0.2273, 0.3400, 0.2273, 0.3400,
        0.3400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2407, 0.2407, 0.3600, 0.2407, 0.2407, 0.2407, 0.3600, 0.2407, 0.3600,
        0.3600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2541, 0.2541, 0.3800, 0.2541, 0.2541, 0.2541, 0.3800, 0.2541, 0.3800,
        0.3800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2674, 0.2674, 0.4000, 0.2674, 0.2674, 0.2674, 0.4000, 0.2674, 0.4000,
        0.4000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2808, 0.2808, 0.4200, 0.2808, 0.2808, 0.2808, 0.4200, 0.2808, 0.4200,
        0.4200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2942, 0.2942, 0.4400, 0.2942, 0.2942, 0.2942, 0.4400, 0.2942, 0.4400,
        0.4400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3075, 0.3075, 0.4600, 0.3075, 0.3075, 0.3075, 0.4600, 0.3075, 0.4600,
        0.4600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3209, 0.3209, 0.4800, 0.3209, 0.3209, 0.3209, 0.4800, 0.3209, 0.4800,
        0.4800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3343, 0.3343, 0.5000, 0.3343, 0.3343, 0.3343, 0.5000, 0.3343, 0.5000,
        0.5000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3476, 0.3476, 0.5200, 0.3476, 0.3476, 0.3476, 0.5200, 0.3476, 0.5200,
        0.5200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3610, 0.3610, 0.5400, 0.3610, 0.3610, 0.3610, 0.5400, 0.3610, 0.5400,
        0.5400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3744, 0.3744, 0.5600, 0.3744, 0.3744, 0.3744, 0.5600, 0.3744, 0.5600,
        0.5600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3878, 0.3878, 0.5800, 0.3878, 0.3878, 0.3878, 0.5800, 0.3878, 0.5800,
        0.5800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4011, 0.4011, 0.6000, 0.4011, 0.4011, 0.4011, 0.6000, 0.4011, 0.6000,
        0.6000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4145, 0.4145, 0.6200, 0.4145, 0.4145, 0.4145, 0.6200, 0.4145, 0.6200,
        0.6200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4279, 0.4279, 0.6400, 0.4279, 0.4279, 0.4279, 0.6400, 0.4279, 0.6400,
        0.6400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4412, 0.4412, 0.6600, 0.4412, 0.4412, 0.4412, 0.6600, 0.4412, 0.6600,
        0.6600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4546, 0.4546, 0.6800, 0.4546, 0.4546, 0.4546, 0.6800, 0.4546, 0.6800,
        0.6800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4680, 0.4680, 0.7000, 0.4680, 0.4680, 0.4680, 0.7000, 0.4680, 0.7000,
        0.7000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4814, 0.4814, 0.7200, 0.4814, 0.4814, 0.4814, 0.7200, 0.4814, 0.7200,
        0.7200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4947, 0.4947, 0.7400, 0.4947, 0.4947, 0.4947, 0.7400, 0.4947, 0.7400,
        0.7400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5081, 0.5081, 0.7600, 0.5081, 0.5081, 0.5081, 0.7600, 0.5081, 0.7600,
        0.7600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5215, 0.5215, 0.7800, 0.5215, 0.5215, 0.5215, 0.7800, 0.5215, 0.7800,
        0.7800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5348, 0.5348, 0.8000, 0.5348, 0.5348, 0.5348, 0.8000, 0.5348, 0.8000,
        0.8000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5482, 0.5482, 0.8200, 0.5482, 0.5482, 0.5482, 0.8200, 0.5482, 0.8200,
        0.8200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5616, 0.5616, 0.8400, 0.5616, 0.5616, 0.5616, 0.8400, 0.5616, 0.8400,
        0.8400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5750, 0.5750, 0.8600, 0.5750, 0.5750, 0.5750, 0.8600, 0.5750, 0.8600,
        0.8600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5883, 0.5883, 0.8800, 0.5883, 0.5883, 0.5883, 0.8800, 0.5883, 0.8800,
        0.8800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6017, 0.6017, 0.9000, 0.6017, 0.6017, 0.6017, 0.9000, 0.6017, 0.9000,
        0.9000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6151, 0.6151, 0.9200, 0.6151, 0.6151, 0.6151, 0.9200, 0.6151, 0.9200,
        0.9200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6284, 0.6284, 0.9400, 0.6284, 0.6284, 0.6284, 0.9400, 0.6284, 0.9400,
        0.9400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6418, 0.6418, 0.9600, 0.6418, 0.6418, 0.6418, 0.9600, 0.6418, 0.9600,
        0.9600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00],
        [6.7746e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6552, 0.6552, 0.9800, 0.6552, 0.6552, 0.6552, 0.9800, 0.6552, 0.9800,
        0.9800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 12: Guess correctness - [False False  True False False False  True False  True  True]
DEBUG:src.train:Log Probs: tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]], grad_fn=<CatBackward0>)
INFO:src.train:Episode 12: Cumulative reward: 196.27730682492256
INFO:src.train:Episode 12: Reward Differences: 7.690866090357304
INFO:src.train:Episode 12: Average loss: -0.0
INFO:src.train:Episode 12: Last Step Accuracy: 0.4000000059604645
DEBUG:src.train:Episode 13: Input words: ['apple', 'orange', 'apple', 'orange', 'apple', 'apple', 'apple', 'apple', 'apple', 'apple']
DEBUG:src.train:Episode 13: Target words: ['apple', 'orange', 'orange', 'apple', 'orange', 'apple', 'apple', 'orange', 'orange', 'orange']
DEBUG:src.train:Input Word Indices: [0 1 0 1 0 0 0 0 0 0]
DEBUG:src.train:Input Tensor: tensor([0, 1, 0, 1, 0, 0, 0, 0, 0, 0])
DEBUG:src.train:Action Probs: tensor([[4.0866e-11, 1.0000e+00],
        [4.0866e-11, 1.0000e+00],
        [4.0866e-11, 1.0000e+00],
        [4.0866e-11, 1.0000e+00],
        [4.0866e-11, 1.0000e+00],
        [4.0866e-11, 1.0000e+00],
        [4.0866e-11, 1.0000e+00],
        [4.0866e-11, 1.0000e+00],
        [4.0866e-11, 1.0000e+00],
        [4.0866e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.9321e-14, 1.0000e+00],
        [7.9321e-14, 1.0000e+00],
        [7.9321e-14, 1.0000e+00],
        [7.9321e-14, 1.0000e+00],
        [7.9321e-14, 1.0000e+00],
        [7.9321e-14, 1.0000e+00],
        [7.9321e-14, 1.0000e+00],
        [7.9321e-14, 1.0000e+00],
        [7.9321e-14, 1.0000e+00],
        [7.9321e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0134, 0.0200, 0.0200, 0.0134, 0.0200, 0.0134, 0.0134, 0.0200, 0.0200,
        0.0200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[3.0466e-14, 1.0000e+00],
        [3.0466e-14, 1.0000e+00],
        [3.0466e-14, 1.0000e+00],
        [3.0466e-14, 1.0000e+00],
        [3.0466e-14, 1.0000e+00],
        [3.0466e-14, 1.0000e+00],
        [3.0466e-14, 1.0000e+00],
        [3.0466e-14, 1.0000e+00],
        [3.0466e-14, 1.0000e+00],
        [3.0466e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0267, 0.0400, 0.0400, 0.0267, 0.0400, 0.0267, 0.0267, 0.0400, 0.0400,
        0.0400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6703e-14, 1.0000e+00],
        [2.6703e-14, 1.0000e+00],
        [2.6703e-14, 1.0000e+00],
        [2.6703e-14, 1.0000e+00],
        [2.6703e-14, 1.0000e+00],
        [2.6703e-14, 1.0000e+00],
        [2.6703e-14, 1.0000e+00],
        [2.6703e-14, 1.0000e+00],
        [2.6703e-14, 1.0000e+00],
        [2.6703e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0401, 0.0600, 0.0600, 0.0401, 0.0600, 0.0401, 0.0401, 0.0600, 0.0600,
        0.0600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6229e-14, 1.0000e+00],
        [2.6229e-14, 1.0000e+00],
        [2.6229e-14, 1.0000e+00],
        [2.6229e-14, 1.0000e+00],
        [2.6229e-14, 1.0000e+00],
        [2.6229e-14, 1.0000e+00],
        [2.6229e-14, 1.0000e+00],
        [2.6229e-14, 1.0000e+00],
        [2.6229e-14, 1.0000e+00],
        [2.6229e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0535, 0.0800, 0.0800, 0.0535, 0.0800, 0.0535, 0.0535, 0.0800, 0.0800,
        0.0800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6166e-14, 1.0000e+00],
        [2.6166e-14, 1.0000e+00],
        [2.6166e-14, 1.0000e+00],
        [2.6166e-14, 1.0000e+00],
        [2.6166e-14, 1.0000e+00],
        [2.6166e-14, 1.0000e+00],
        [2.6166e-14, 1.0000e+00],
        [2.6166e-14, 1.0000e+00],
        [2.6166e-14, 1.0000e+00],
        [2.6166e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0669, 0.1000, 0.1000, 0.0669, 0.1000, 0.0669, 0.0669, 0.1000, 0.1000,
        0.1000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6157e-14, 1.0000e+00],
        [2.6157e-14, 1.0000e+00],
        [2.6157e-14, 1.0000e+00],
        [2.6157e-14, 1.0000e+00],
        [2.6157e-14, 1.0000e+00],
        [2.6157e-14, 1.0000e+00],
        [2.6157e-14, 1.0000e+00],
        [2.6157e-14, 1.0000e+00],
        [2.6157e-14, 1.0000e+00],
        [2.6157e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0802, 0.1200, 0.1200, 0.0802, 0.1200, 0.0802, 0.0802, 0.1200, 0.1200,
        0.1200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0936, 0.1400, 0.1400, 0.0936, 0.1400, 0.0936, 0.0936, 0.1400, 0.1400,
        0.1400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1070, 0.1600, 0.1600, 0.1070, 0.1600, 0.1070, 0.1070, 0.1600, 0.1600,
        0.1600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1203, 0.1800, 0.1800, 0.1203, 0.1800, 0.1203, 0.1203, 0.1800, 0.1800,
        0.1800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1337, 0.2000, 0.2000, 0.1337, 0.2000, 0.1337, 0.1337, 0.2000, 0.2000,
        0.2000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1471, 0.2200, 0.2200, 0.1471, 0.2200, 0.1471, 0.1471, 0.2200, 0.2200,
        0.2200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1605, 0.2400, 0.2400, 0.1605, 0.2400, 0.1605, 0.1605, 0.2400, 0.2400,
        0.2400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1738, 0.2600, 0.2600, 0.1738, 0.2600, 0.1738, 0.1738, 0.2600, 0.2600,
        0.2600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1872, 0.2800, 0.2800, 0.1872, 0.2800, 0.1872, 0.1872, 0.2800, 0.2800,
        0.2800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2006, 0.3000, 0.3000, 0.2006, 0.3000, 0.2006, 0.2006, 0.3000, 0.3000,
        0.3000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2139, 0.3200, 0.3200, 0.2139, 0.3200, 0.2139, 0.2139, 0.3200, 0.3200,
        0.3200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2273, 0.3400, 0.3400, 0.2273, 0.3400, 0.2273, 0.2273, 0.3400, 0.3400,
        0.3400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2407, 0.3600, 0.3600, 0.2407, 0.3600, 0.2407, 0.2407, 0.3600, 0.3600,
        0.3600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2541, 0.3800, 0.3800, 0.2541, 0.3800, 0.2541, 0.2541, 0.3800, 0.3800,
        0.3800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2674, 0.4000, 0.4000, 0.2674, 0.4000, 0.2674, 0.2674, 0.4000, 0.4000,
        0.4000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2808, 0.4200, 0.4200, 0.2808, 0.4200, 0.2808, 0.2808, 0.4200, 0.4200,
        0.4200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2942, 0.4400, 0.4400, 0.2942, 0.4400, 0.2942, 0.2942, 0.4400, 0.4400,
        0.4400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3075, 0.4600, 0.4600, 0.3075, 0.4600, 0.3075, 0.3075, 0.4600, 0.4600,
        0.4600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3209, 0.4800, 0.4800, 0.3209, 0.4800, 0.3209, 0.3209, 0.4800, 0.4800,
        0.4800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3343, 0.5000, 0.5000, 0.3343, 0.5000, 0.3343, 0.3343, 0.5000, 0.5000,
        0.5000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3476, 0.5200, 0.5200, 0.3476, 0.5200, 0.3476, 0.3476, 0.5200, 0.5200,
        0.5200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3610, 0.5400, 0.5400, 0.3610, 0.5400, 0.3610, 0.3610, 0.5400, 0.5400,
        0.5400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3744, 0.5600, 0.5600, 0.3744, 0.5600, 0.3744, 0.3744, 0.5600, 0.5600,
        0.5600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3878, 0.5800, 0.5800, 0.3878, 0.5800, 0.3878, 0.3878, 0.5800, 0.5800,
        0.5800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4011, 0.6000, 0.6000, 0.4011, 0.6000, 0.4011, 0.4011, 0.6000, 0.6000,
        0.6000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4145, 0.6200, 0.6200, 0.4145, 0.6200, 0.4145, 0.4145, 0.6200, 0.6200,
        0.6200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4279, 0.6400, 0.6400, 0.4279, 0.6400, 0.4279, 0.4279, 0.6400, 0.6400,
        0.6400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4412, 0.6600, 0.6600, 0.4412, 0.6600, 0.4412, 0.4412, 0.6600, 0.6600,
        0.6600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4546, 0.6800, 0.6800, 0.4546, 0.6800, 0.4546, 0.4546, 0.6800, 0.6800,
        0.6800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4680, 0.7000, 0.7000, 0.4680, 0.7000, 0.4680, 0.4680, 0.7000, 0.7000,
        0.7000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4814, 0.7200, 0.7200, 0.4814, 0.7200, 0.4814, 0.4814, 0.7200, 0.7200,
        0.7200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4947, 0.7400, 0.7400, 0.4947, 0.7400, 0.4947, 0.4947, 0.7400, 0.7400,
        0.7400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5081, 0.7600, 0.7600, 0.5081, 0.7600, 0.5081, 0.5081, 0.7600, 0.7600,
        0.7600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5215, 0.7800, 0.7800, 0.5215, 0.7800, 0.5215, 0.5215, 0.7800, 0.7800,
        0.7800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5348, 0.8000, 0.8000, 0.5348, 0.8000, 0.5348, 0.5348, 0.8000, 0.8000,
        0.8000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5482, 0.8200, 0.8200, 0.5482, 0.8200, 0.5482, 0.5482, 0.8200, 0.8200,
        0.8200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5616, 0.8400, 0.8400, 0.5616, 0.8400, 0.5616, 0.5616, 0.8400, 0.8400,
        0.8400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5750, 0.8600, 0.8600, 0.5750, 0.8600, 0.5750, 0.5750, 0.8600, 0.8600,
        0.8600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5883, 0.8800, 0.8800, 0.5883, 0.8800, 0.5883, 0.5883, 0.8800, 0.8800,
        0.8800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6017, 0.9000, 0.9000, 0.6017, 0.9000, 0.6017, 0.6017, 0.9000, 0.9000,
        0.9000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6151, 0.9200, 0.9200, 0.6151, 0.9200, 0.6151, 0.6151, 0.9200, 0.9200,
        0.9200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6284, 0.9400, 0.9400, 0.6284, 0.9400, 0.6284, 0.6284, 0.9400, 0.9400,
        0.9400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6418, 0.9600, 0.9600, 0.6418, 0.9600, 0.6418, 0.6418, 0.9600, 0.9600,
        0.9600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00],
        [2.6156e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6552, 0.9800, 0.9800, 0.6552, 0.9800, 0.6552, 0.6552, 0.9800, 0.9800,
        0.9800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 13: Guess correctness - [False  True  True False  True False False  True  True  True]
DEBUG:src.train:Log Probs: tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]], grad_fn=<CatBackward0>)
INFO:src.train:Episode 13: Cumulative reward: 212.5182045251131
INFO:src.train:Episode 13: Reward Differences: 8.327244125306606
INFO:src.train:Episode 13: Average loss: -0.0
INFO:src.train:Episode 13: Last Step Accuracy: 0.6000000238418579
DEBUG:src.train:Episode 14: Input words: ['orange', 'apple', 'apple', 'orange', 'orange', 'orange', 'apple', 'orange', 'orange', 'orange']
DEBUG:src.train:Episode 14: Target words: ['orange', 'orange', 'apple', 'apple', 'apple', 'orange', 'apple', 'orange', 'orange', 'apple']
DEBUG:src.train:Input Word Indices: [1 0 0 1 1 1 0 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 0, 0, 1, 1, 1, 0, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.1232e-11, 1.0000e+00],
        [2.1232e-11, 1.0000e+00],
        [2.1232e-11, 1.0000e+00],
        [2.1232e-11, 1.0000e+00],
        [2.1232e-11, 1.0000e+00],
        [2.1232e-11, 1.0000e+00],
        [2.1232e-11, 1.0000e+00],
        [2.1232e-11, 1.0000e+00],
        [2.1232e-11, 1.0000e+00],
        [2.1232e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[3.4761e-14, 1.0000e+00],
        [3.4761e-14, 1.0000e+00],
        [3.4761e-14, 1.0000e+00],
        [3.4761e-14, 1.0000e+00],
        [3.4761e-14, 1.0000e+00],
        [3.4761e-14, 1.0000e+00],
        [3.4761e-14, 1.0000e+00],
        [3.4761e-14, 1.0000e+00],
        [3.4761e-14, 1.0000e+00],
        [3.4761e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0200, 0.0200, 0.0134, 0.0134, 0.0134, 0.0200, 0.0134, 0.0200, 0.0200,
        0.0134])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3006e-14, 1.0000e+00],
        [1.3006e-14, 1.0000e+00],
        [1.3006e-14, 1.0000e+00],
        [1.3006e-14, 1.0000e+00],
        [1.3006e-14, 1.0000e+00],
        [1.3006e-14, 1.0000e+00],
        [1.3006e-14, 1.0000e+00],
        [1.3006e-14, 1.0000e+00],
        [1.3006e-14, 1.0000e+00],
        [1.3006e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0400, 0.0400, 0.0267, 0.0267, 0.0267, 0.0400, 0.0267, 0.0400, 0.0400,
        0.0267])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1358e-14, 1.0000e+00],
        [1.1358e-14, 1.0000e+00],
        [1.1358e-14, 1.0000e+00],
        [1.1358e-14, 1.0000e+00],
        [1.1358e-14, 1.0000e+00],
        [1.1358e-14, 1.0000e+00],
        [1.1358e-14, 1.0000e+00],
        [1.1358e-14, 1.0000e+00],
        [1.1358e-14, 1.0000e+00],
        [1.1358e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0600, 0.0600, 0.0401, 0.0401, 0.0401, 0.0600, 0.0401, 0.0600, 0.0600,
        0.0401])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1151e-14, 1.0000e+00],
        [1.1151e-14, 1.0000e+00],
        [1.1151e-14, 1.0000e+00],
        [1.1151e-14, 1.0000e+00],
        [1.1151e-14, 1.0000e+00],
        [1.1151e-14, 1.0000e+00],
        [1.1151e-14, 1.0000e+00],
        [1.1151e-14, 1.0000e+00],
        [1.1151e-14, 1.0000e+00],
        [1.1151e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0800, 0.0800, 0.0535, 0.0535, 0.0535, 0.0800, 0.0535, 0.0800, 0.0800,
        0.0535])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1123e-14, 1.0000e+00],
        [1.1123e-14, 1.0000e+00],
        [1.1123e-14, 1.0000e+00],
        [1.1123e-14, 1.0000e+00],
        [1.1123e-14, 1.0000e+00],
        [1.1123e-14, 1.0000e+00],
        [1.1123e-14, 1.0000e+00],
        [1.1123e-14, 1.0000e+00],
        [1.1123e-14, 1.0000e+00],
        [1.1123e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1000, 0.1000, 0.0669, 0.0669, 0.0669, 0.1000, 0.0669, 0.1000, 0.1000,
        0.0669])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1200, 0.1200, 0.0802, 0.0802, 0.0802, 0.1200, 0.0802, 0.1200, 0.1200,
        0.0802])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1400, 0.1400, 0.0936, 0.0936, 0.0936, 0.1400, 0.0936, 0.1400, 0.1400,
        0.0936])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1600, 0.1600, 0.1070, 0.1070, 0.1070, 0.1600, 0.1070, 0.1600, 0.1600,
        0.1070])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1800, 0.1800, 0.1203, 0.1203, 0.1203, 0.1800, 0.1203, 0.1800, 0.1800,
        0.1203])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2000, 0.2000, 0.1337, 0.1337, 0.1337, 0.2000, 0.1337, 0.2000, 0.2000,
        0.1337])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2200, 0.2200, 0.1471, 0.1471, 0.1471, 0.2200, 0.1471, 0.2200, 0.2200,
        0.1471])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2400, 0.2400, 0.1605, 0.1605, 0.1605, 0.2400, 0.1605, 0.2400, 0.2400,
        0.1605])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2600, 0.2600, 0.1738, 0.1738, 0.1738, 0.2600, 0.1738, 0.2600, 0.2600,
        0.1738])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2800, 0.2800, 0.1872, 0.1872, 0.1872, 0.2800, 0.1872, 0.2800, 0.2800,
        0.1872])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3000, 0.3000, 0.2006, 0.2006, 0.2006, 0.3000, 0.2006, 0.3000, 0.3000,
        0.2006])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3200, 0.3200, 0.2139, 0.2139, 0.2139, 0.3200, 0.2139, 0.3200, 0.3200,
        0.2139])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3400, 0.3400, 0.2273, 0.2273, 0.2273, 0.3400, 0.2273, 0.3400, 0.3400,
        0.2273])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3600, 0.3600, 0.2407, 0.2407, 0.2407, 0.3600, 0.2407, 0.3600, 0.3600,
        0.2407])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3800, 0.3800, 0.2541, 0.2541, 0.2541, 0.3800, 0.2541, 0.3800, 0.3800,
        0.2541])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4000, 0.4000, 0.2674, 0.2674, 0.2674, 0.4000, 0.2674, 0.4000, 0.4000,
        0.2674])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4200, 0.4200, 0.2808, 0.2808, 0.2808, 0.4200, 0.2808, 0.4200, 0.4200,
        0.2808])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4400, 0.4400, 0.2942, 0.2942, 0.2942, 0.4400, 0.2942, 0.4400, 0.4400,
        0.2942])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4600, 0.4600, 0.3075, 0.3075, 0.3075, 0.4600, 0.3075, 0.4600, 0.4600,
        0.3075])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4800, 0.4800, 0.3209, 0.3209, 0.3209, 0.4800, 0.3209, 0.4800, 0.4800,
        0.3209])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5000, 0.5000, 0.3343, 0.3343, 0.3343, 0.5000, 0.3343, 0.5000, 0.5000,
        0.3343])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5200, 0.5200, 0.3476, 0.3476, 0.3476, 0.5200, 0.3476, 0.5200, 0.5200,
        0.3476])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5400, 0.5400, 0.3610, 0.3610, 0.3610, 0.5400, 0.3610, 0.5400, 0.5400,
        0.3610])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5600, 0.5600, 0.3744, 0.3744, 0.3744, 0.5600, 0.3744, 0.5600, 0.5600,
        0.3744])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5800, 0.5800, 0.3878, 0.3878, 0.3878, 0.5800, 0.3878, 0.5800, 0.5800,
        0.3878])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6000, 0.6000, 0.4011, 0.4011, 0.4011, 0.6000, 0.4011, 0.6000, 0.6000,
        0.4011])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6200, 0.6200, 0.4145, 0.4145, 0.4145, 0.6200, 0.4145, 0.6200, 0.6200,
        0.4145])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6400, 0.6400, 0.4279, 0.4279, 0.4279, 0.6400, 0.4279, 0.6400, 0.6400,
        0.4279])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6600, 0.6600, 0.4412, 0.4412, 0.4412, 0.6600, 0.4412, 0.6600, 0.6600,
        0.4412])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6800, 0.6800, 0.4546, 0.4546, 0.4546, 0.6800, 0.4546, 0.6800, 0.6800,
        0.4546])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7000, 0.7000, 0.4680, 0.4680, 0.4680, 0.7000, 0.4680, 0.7000, 0.7000,
        0.4680])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7200, 0.7200, 0.4814, 0.4814, 0.4814, 0.7200, 0.4814, 0.7200, 0.7200,
        0.4814])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7400, 0.7400, 0.4947, 0.4947, 0.4947, 0.7400, 0.4947, 0.7400, 0.7400,
        0.4947])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7600, 0.7600, 0.5081, 0.5081, 0.5081, 0.7600, 0.5081, 0.7600, 0.7600,
        0.5081])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7800, 0.7800, 0.5215, 0.5215, 0.5215, 0.7800, 0.5215, 0.7800, 0.7800,
        0.5215])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8000, 0.8000, 0.5348, 0.5348, 0.5348, 0.8000, 0.5348, 0.8000, 0.8000,
        0.5348])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8200, 0.8200, 0.5482, 0.5482, 0.5482, 0.8200, 0.5482, 0.8200, 0.8200,
        0.5482])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8400, 0.8400, 0.5616, 0.5616, 0.5616, 0.8400, 0.5616, 0.8400, 0.8400,
        0.5616])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8600, 0.8600, 0.5750, 0.5750, 0.5750, 0.8600, 0.5750, 0.8600, 0.8600,
        0.5750])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8800, 0.8800, 0.5883, 0.5883, 0.5883, 0.8800, 0.5883, 0.8800, 0.8800,
        0.5883])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9000, 0.9000, 0.6017, 0.6017, 0.6017, 0.9000, 0.6017, 0.9000, 0.9000,
        0.6017])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9200, 0.9200, 0.6151, 0.6151, 0.6151, 0.9200, 0.6151, 0.9200, 0.9200,
        0.6151])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9400, 0.9400, 0.6284, 0.6284, 0.6284, 0.9400, 0.6284, 0.9400, 0.9400,
        0.6284])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9600, 0.9600, 0.6418, 0.6418, 0.6418, 0.9600, 0.6418, 0.9600, 0.9600,
        0.6418])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00],
        [1.1119e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9800, 0.9800, 0.6552, 0.6552, 0.6552, 0.9800, 0.6552, 0.9800, 0.9800,
        0.6552])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 14: Guess correctness - [ True  True False False False  True False  True  True False]
DEBUG:src.train:Log Probs: tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]], grad_fn=<CatBackward0>)
INFO:src.train:Episode 14: Cumulative reward: 204.39775567501783
INFO:src.train:Episode 14: Reward Differences: 8.009055107831955
INFO:src.train:Episode 14: Average loss: -0.0
INFO:src.train:Episode 14: Last Step Accuracy: 0.5
DEBUG:src.train:Episode 15: Input words: ['orange', 'orange', 'apple', 'orange', 'orange', 'orange', 'orange', 'orange', 'apple', 'apple']
DEBUG:src.train:Episode 15: Target words: ['orange', 'apple', 'orange', 'apple', 'apple', 'orange', 'orange', 'orange', 'orange', 'orange']
DEBUG:src.train:Input Word Indices: [1 1 0 1 1 1 1 1 0 0]
DEBUG:src.train:Input Tensor: tensor([1, 1, 0, 1, 1, 1, 1, 1, 0, 0])
DEBUG:src.train:Action Probs: tensor([[1.1771e-11, 1.0000e+00],
        [1.1771e-11, 1.0000e+00],
        [1.1771e-11, 1.0000e+00],
        [1.1771e-11, 1.0000e+00],
        [1.1771e-11, 1.0000e+00],
        [1.1771e-11, 1.0000e+00],
        [1.1771e-11, 1.0000e+00],
        [1.1771e-11, 1.0000e+00],
        [1.1771e-11, 1.0000e+00],
        [1.1771e-11, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.6532e-14, 1.0000e+00],
        [1.6532e-14, 1.0000e+00],
        [1.6532e-14, 1.0000e+00],
        [1.6532e-14, 1.0000e+00],
        [1.6532e-14, 1.0000e+00],
        [1.6532e-14, 1.0000e+00],
        [1.6532e-14, 1.0000e+00],
        [1.6532e-14, 1.0000e+00],
        [1.6532e-14, 1.0000e+00],
        [1.6532e-14, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0200, 0.0134, 0.0200, 0.0134, 0.0134, 0.0200, 0.0200, 0.0200, 0.0200,
        0.0200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[6.0409e-15, 1.0000e+00],
        [6.0409e-15, 1.0000e+00],
        [6.0409e-15, 1.0000e+00],
        [6.0409e-15, 1.0000e+00],
        [6.0409e-15, 1.0000e+00],
        [6.0409e-15, 1.0000e+00],
        [6.0409e-15, 1.0000e+00],
        [6.0409e-15, 1.0000e+00],
        [6.0409e-15, 1.0000e+00],
        [6.0409e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0400, 0.0267, 0.0400, 0.0267, 0.0267, 0.0400, 0.0400, 0.0400, 0.0400,
        0.0400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.2585e-15, 1.0000e+00],
        [5.2585e-15, 1.0000e+00],
        [5.2585e-15, 1.0000e+00],
        [5.2585e-15, 1.0000e+00],
        [5.2585e-15, 1.0000e+00],
        [5.2585e-15, 1.0000e+00],
        [5.2585e-15, 1.0000e+00],
        [5.2585e-15, 1.0000e+00],
        [5.2585e-15, 1.0000e+00],
        [5.2585e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0600, 0.0401, 0.0600, 0.0401, 0.0401, 0.0600, 0.0600, 0.0600, 0.0600,
        0.0600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1604e-15, 1.0000e+00],
        [5.1604e-15, 1.0000e+00],
        [5.1604e-15, 1.0000e+00],
        [5.1604e-15, 1.0000e+00],
        [5.1604e-15, 1.0000e+00],
        [5.1604e-15, 1.0000e+00],
        [5.1604e-15, 1.0000e+00],
        [5.1604e-15, 1.0000e+00],
        [5.1604e-15, 1.0000e+00],
        [5.1604e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0800, 0.0535, 0.0800, 0.0535, 0.0535, 0.0800, 0.0800, 0.0800, 0.0800,
        0.0800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1473e-15, 1.0000e+00],
        [5.1473e-15, 1.0000e+00],
        [5.1473e-15, 1.0000e+00],
        [5.1473e-15, 1.0000e+00],
        [5.1473e-15, 1.0000e+00],
        [5.1473e-15, 1.0000e+00],
        [5.1473e-15, 1.0000e+00],
        [5.1473e-15, 1.0000e+00],
        [5.1473e-15, 1.0000e+00],
        [5.1473e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1000, 0.0669, 0.1000, 0.0669, 0.0669, 0.1000, 0.1000, 0.1000, 0.1000,
        0.1000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1455e-15, 1.0000e+00],
        [5.1455e-15, 1.0000e+00],
        [5.1455e-15, 1.0000e+00],
        [5.1455e-15, 1.0000e+00],
        [5.1455e-15, 1.0000e+00],
        [5.1455e-15, 1.0000e+00],
        [5.1455e-15, 1.0000e+00],
        [5.1455e-15, 1.0000e+00],
        [5.1455e-15, 1.0000e+00],
        [5.1455e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1200, 0.0802, 0.1200, 0.0802, 0.0802, 0.1200, 0.1200, 0.1200, 0.1200,
        0.1200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1453e-15, 1.0000e+00],
        [5.1453e-15, 1.0000e+00],
        [5.1453e-15, 1.0000e+00],
        [5.1453e-15, 1.0000e+00],
        [5.1453e-15, 1.0000e+00],
        [5.1453e-15, 1.0000e+00],
        [5.1453e-15, 1.0000e+00],
        [5.1453e-15, 1.0000e+00],
        [5.1453e-15, 1.0000e+00],
        [5.1453e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1400, 0.0936, 0.1400, 0.0936, 0.0936, 0.1400, 0.1400, 0.1400, 0.1400,
        0.1400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1600, 0.1070, 0.1600, 0.1070, 0.1070, 0.1600, 0.1600, 0.1600, 0.1600,
        0.1600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1800, 0.1203, 0.1800, 0.1203, 0.1203, 0.1800, 0.1800, 0.1800, 0.1800,
        0.1800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2000, 0.1337, 0.2000, 0.1337, 0.1337, 0.2000, 0.2000, 0.2000, 0.2000,
        0.2000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2200, 0.1471, 0.2200, 0.1471, 0.1471, 0.2200, 0.2200, 0.2200, 0.2200,
        0.2200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2400, 0.1605, 0.2400, 0.1605, 0.1605, 0.2400, 0.2400, 0.2400, 0.2400,
        0.2400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2600, 0.1738, 0.2600, 0.1738, 0.1738, 0.2600, 0.2600, 0.2600, 0.2600,
        0.2600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2800, 0.1872, 0.2800, 0.1872, 0.1872, 0.2800, 0.2800, 0.2800, 0.2800,
        0.2800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3000, 0.2006, 0.3000, 0.2006, 0.2006, 0.3000, 0.3000, 0.3000, 0.3000,
        0.3000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3200, 0.2139, 0.3200, 0.2139, 0.2139, 0.3200, 0.3200, 0.3200, 0.3200,
        0.3200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3400, 0.2273, 0.3400, 0.2273, 0.2273, 0.3400, 0.3400, 0.3400, 0.3400,
        0.3400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3600, 0.2407, 0.3600, 0.2407, 0.2407, 0.3600, 0.3600, 0.3600, 0.3600,
        0.3600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3800, 0.2541, 0.3800, 0.2541, 0.2541, 0.3800, 0.3800, 0.3800, 0.3800,
        0.3800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4000, 0.2674, 0.4000, 0.2674, 0.2674, 0.4000, 0.4000, 0.4000, 0.4000,
        0.4000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4200, 0.2808, 0.4200, 0.2808, 0.2808, 0.4200, 0.4200, 0.4200, 0.4200,
        0.4200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4400, 0.2942, 0.4400, 0.2942, 0.2942, 0.4400, 0.4400, 0.4400, 0.4400,
        0.4400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4600, 0.3075, 0.4600, 0.3075, 0.3075, 0.4600, 0.4600, 0.4600, 0.4600,
        0.4600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4800, 0.3209, 0.4800, 0.3209, 0.3209, 0.4800, 0.4800, 0.4800, 0.4800,
        0.4800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5000, 0.3343, 0.5000, 0.3343, 0.3343, 0.5000, 0.5000, 0.5000, 0.5000,
        0.5000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5200, 0.3476, 0.5200, 0.3476, 0.3476, 0.5200, 0.5200, 0.5200, 0.5200,
        0.5200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5400, 0.3610, 0.5400, 0.3610, 0.3610, 0.5400, 0.5400, 0.5400, 0.5400,
        0.5400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5600, 0.3744, 0.5600, 0.3744, 0.3744, 0.5600, 0.5600, 0.5600, 0.5600,
        0.5600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5800, 0.3878, 0.5800, 0.3878, 0.3878, 0.5800, 0.5800, 0.5800, 0.5800,
        0.5800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6000, 0.4011, 0.6000, 0.4011, 0.4011, 0.6000, 0.6000, 0.6000, 0.6000,
        0.6000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6200, 0.4145, 0.6200, 0.4145, 0.4145, 0.6200, 0.6200, 0.6200, 0.6200,
        0.6200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6400, 0.4279, 0.6400, 0.4279, 0.4279, 0.6400, 0.6400, 0.6400, 0.6400,
        0.6400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6600, 0.4412, 0.6600, 0.4412, 0.4412, 0.6600, 0.6600, 0.6600, 0.6600,
        0.6600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6800, 0.4546, 0.6800, 0.4546, 0.4546, 0.6800, 0.6800, 0.6800, 0.6800,
        0.6800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7000, 0.4680, 0.7000, 0.4680, 0.4680, 0.7000, 0.7000, 0.7000, 0.7000,
        0.7000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7200, 0.4814, 0.7200, 0.4814, 0.4814, 0.7200, 0.7200, 0.7200, 0.7200,
        0.7200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7400, 0.4947, 0.7400, 0.4947, 0.4947, 0.7400, 0.7400, 0.7400, 0.7400,
        0.7400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7600, 0.5081, 0.7600, 0.5081, 0.5081, 0.7600, 0.7600, 0.7600, 0.7600,
        0.7600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7800, 0.5215, 0.7800, 0.5215, 0.5215, 0.7800, 0.7800, 0.7800, 0.7800,
        0.7800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8000, 0.5348, 0.8000, 0.5348, 0.5348, 0.8000, 0.8000, 0.8000, 0.8000,
        0.8000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8200, 0.5482, 0.8200, 0.5482, 0.5482, 0.8200, 0.8200, 0.8200, 0.8200,
        0.8200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8400, 0.5616, 0.8400, 0.5616, 0.5616, 0.8400, 0.8400, 0.8400, 0.8400,
        0.8400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8600, 0.5750, 0.8600, 0.5750, 0.5750, 0.8600, 0.8600, 0.8600, 0.8600,
        0.8600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8800, 0.5883, 0.8800, 0.5883, 0.5883, 0.8800, 0.8800, 0.8800, 0.8800,
        0.8800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9000, 0.6017, 0.9000, 0.6017, 0.6017, 0.9000, 0.9000, 0.9000, 0.9000,
        0.9000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9200, 0.6151, 0.9200, 0.6151, 0.6151, 0.9200, 0.9200, 0.9200, 0.9200,
        0.9200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9400, 0.6284, 0.9400, 0.6284, 0.6284, 0.9400, 0.9400, 0.9400, 0.9400,
        0.9400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9600, 0.6418, 0.9600, 0.6418, 0.6418, 0.9600, 0.9600, 0.9600, 0.9600,
        0.9600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00],
        [5.1452e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9800, 0.6552, 0.9800, 0.6552, 0.6552, 0.9800, 0.9800, 0.9800, 0.9800,
        0.9800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 15: Guess correctness - [ True False  True False False  True  True  True  True  True]
DEBUG:src.train:Log Probs: tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]], grad_fn=<CatBackward0>)
INFO:src.train:Episode 15: Cumulative reward: 220.63865337520838
INFO:src.train:Episode 15: Reward Differences: 8.645433142781258
INFO:src.train:Episode 15: Average loss: -0.0
INFO:src.train:Episode 15: Last Step Accuracy: 0.699999988079071
DEBUG:src.train:Episode 16: Input words: ['apple', 'apple', 'apple', 'orange', 'orange', 'apple', 'apple', 'orange', 'apple', 'orange']
DEBUG:src.train:Episode 16: Target words: ['orange', 'apple', 'apple', 'orange', 'apple', 'orange', 'orange', 'orange', 'apple', 'apple']
DEBUG:src.train:Input Word Indices: [0 0 0 1 1 0 0 1 0 1]
DEBUG:src.train:Input Tensor: tensor([0, 0, 0, 1, 1, 0, 0, 1, 0, 1])
DEBUG:src.train:Action Probs: tensor([[6.9128e-12, 1.0000e+00],
        [6.9128e-12, 1.0000e+00],
        [6.9128e-12, 1.0000e+00],
        [6.9128e-12, 1.0000e+00],
        [6.9128e-12, 1.0000e+00],
        [6.9128e-12, 1.0000e+00],
        [6.9128e-12, 1.0000e+00],
        [6.9128e-12, 1.0000e+00],
        [6.9128e-12, 1.0000e+00],
        [6.9128e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[8.4541e-15, 1.0000e+00],
        [8.4541e-15, 1.0000e+00],
        [8.4541e-15, 1.0000e+00],
        [8.4541e-15, 1.0000e+00],
        [8.4541e-15, 1.0000e+00],
        [8.4541e-15, 1.0000e+00],
        [8.4541e-15, 1.0000e+00],
        [8.4541e-15, 1.0000e+00],
        [8.4541e-15, 1.0000e+00],
        [8.4541e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0200, 0.0134, 0.0134, 0.0200, 0.0134, 0.0200, 0.0200, 0.0200, 0.0134,
        0.0134])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[3.0243e-15, 1.0000e+00],
        [3.0243e-15, 1.0000e+00],
        [3.0243e-15, 1.0000e+00],
        [3.0243e-15, 1.0000e+00],
        [3.0243e-15, 1.0000e+00],
        [3.0243e-15, 1.0000e+00],
        [3.0243e-15, 1.0000e+00],
        [3.0243e-15, 1.0000e+00],
        [3.0243e-15, 1.0000e+00],
        [3.0243e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0400, 0.0267, 0.0267, 0.0400, 0.0267, 0.0400, 0.0400, 0.0400, 0.0267,
        0.0267])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6249e-15, 1.0000e+00],
        [2.6249e-15, 1.0000e+00],
        [2.6249e-15, 1.0000e+00],
        [2.6249e-15, 1.0000e+00],
        [2.6249e-15, 1.0000e+00],
        [2.6249e-15, 1.0000e+00],
        [2.6249e-15, 1.0000e+00],
        [2.6249e-15, 1.0000e+00],
        [2.6249e-15, 1.0000e+00],
        [2.6249e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0600, 0.0401, 0.0401, 0.0600, 0.0401, 0.0600, 0.0600, 0.0600, 0.0401,
        0.0401])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5749e-15, 1.0000e+00],
        [2.5749e-15, 1.0000e+00],
        [2.5749e-15, 1.0000e+00],
        [2.5749e-15, 1.0000e+00],
        [2.5749e-15, 1.0000e+00],
        [2.5749e-15, 1.0000e+00],
        [2.5749e-15, 1.0000e+00],
        [2.5749e-15, 1.0000e+00],
        [2.5749e-15, 1.0000e+00],
        [2.5749e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0800, 0.0535, 0.0535, 0.0800, 0.0535, 0.0800, 0.0800, 0.0800, 0.0535,
        0.0535])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5682e-15, 1.0000e+00],
        [2.5682e-15, 1.0000e+00],
        [2.5682e-15, 1.0000e+00],
        [2.5682e-15, 1.0000e+00],
        [2.5682e-15, 1.0000e+00],
        [2.5682e-15, 1.0000e+00],
        [2.5682e-15, 1.0000e+00],
        [2.5682e-15, 1.0000e+00],
        [2.5682e-15, 1.0000e+00],
        [2.5682e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1000, 0.0669, 0.0669, 0.1000, 0.0669, 0.1000, 0.1000, 0.1000, 0.0669,
        0.0669])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5673e-15, 1.0000e+00],
        [2.5673e-15, 1.0000e+00],
        [2.5673e-15, 1.0000e+00],
        [2.5673e-15, 1.0000e+00],
        [2.5673e-15, 1.0000e+00],
        [2.5673e-15, 1.0000e+00],
        [2.5673e-15, 1.0000e+00],
        [2.5673e-15, 1.0000e+00],
        [2.5673e-15, 1.0000e+00],
        [2.5673e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1200, 0.0802, 0.0802, 0.1200, 0.0802, 0.1200, 0.1200, 0.1200, 0.0802,
        0.0802])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5672e-15, 1.0000e+00],
        [2.5672e-15, 1.0000e+00],
        [2.5672e-15, 1.0000e+00],
        [2.5672e-15, 1.0000e+00],
        [2.5672e-15, 1.0000e+00],
        [2.5672e-15, 1.0000e+00],
        [2.5672e-15, 1.0000e+00],
        [2.5672e-15, 1.0000e+00],
        [2.5672e-15, 1.0000e+00],
        [2.5672e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1400, 0.0936, 0.0936, 0.1400, 0.0936, 0.1400, 0.1400, 0.1400, 0.0936,
        0.0936])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5672e-15, 1.0000e+00],
        [2.5672e-15, 1.0000e+00],
        [2.5672e-15, 1.0000e+00],
        [2.5672e-15, 1.0000e+00],
        [2.5672e-15, 1.0000e+00],
        [2.5672e-15, 1.0000e+00],
        [2.5672e-15, 1.0000e+00],
        [2.5672e-15, 1.0000e+00],
        [2.5672e-15, 1.0000e+00],
        [2.5672e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1600, 0.1070, 0.1070, 0.1600, 0.1070, 0.1600, 0.1600, 0.1600, 0.1070,
        0.1070])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1800, 0.1203, 0.1203, 0.1800, 0.1203, 0.1800, 0.1800, 0.1800, 0.1203,
        0.1203])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2000, 0.1337, 0.1337, 0.2000, 0.1337, 0.2000, 0.2000, 0.2000, 0.1337,
        0.1337])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2200, 0.1471, 0.1471, 0.2200, 0.1471, 0.2200, 0.2200, 0.2200, 0.1471,
        0.1471])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2400, 0.1605, 0.1605, 0.2400, 0.1605, 0.2400, 0.2400, 0.2400, 0.1605,
        0.1605])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2600, 0.1738, 0.1738, 0.2600, 0.1738, 0.2600, 0.2600, 0.2600, 0.1738,
        0.1738])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2800, 0.1872, 0.1872, 0.2800, 0.1872, 0.2800, 0.2800, 0.2800, 0.1872,
        0.1872])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3000, 0.2006, 0.2006, 0.3000, 0.2006, 0.3000, 0.3000, 0.3000, 0.2006,
        0.2006])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3200, 0.2139, 0.2139, 0.3200, 0.2139, 0.3200, 0.3200, 0.3200, 0.2139,
        0.2139])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3400, 0.2273, 0.2273, 0.3400, 0.2273, 0.3400, 0.3400, 0.3400, 0.2273,
        0.2273])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3600, 0.2407, 0.2407, 0.3600, 0.2407, 0.3600, 0.3600, 0.3600, 0.2407,
        0.2407])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3800, 0.2541, 0.2541, 0.3800, 0.2541, 0.3800, 0.3800, 0.3800, 0.2541,
        0.2541])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4000, 0.2674, 0.2674, 0.4000, 0.2674, 0.4000, 0.4000, 0.4000, 0.2674,
        0.2674])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4200, 0.2808, 0.2808, 0.4200, 0.2808, 0.4200, 0.4200, 0.4200, 0.2808,
        0.2808])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4400, 0.2942, 0.2942, 0.4400, 0.2942, 0.4400, 0.4400, 0.4400, 0.2942,
        0.2942])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4600, 0.3075, 0.3075, 0.4600, 0.3075, 0.4600, 0.4600, 0.4600, 0.3075,
        0.3075])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4800, 0.3209, 0.3209, 0.4800, 0.3209, 0.4800, 0.4800, 0.4800, 0.3209,
        0.3209])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5000, 0.3343, 0.3343, 0.5000, 0.3343, 0.5000, 0.5000, 0.5000, 0.3343,
        0.3343])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5200, 0.3476, 0.3476, 0.5200, 0.3476, 0.5200, 0.5200, 0.5200, 0.3476,
        0.3476])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5400, 0.3610, 0.3610, 0.5400, 0.3610, 0.5400, 0.5400, 0.5400, 0.3610,
        0.3610])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5600, 0.3744, 0.3744, 0.5600, 0.3744, 0.5600, 0.5600, 0.5600, 0.3744,
        0.3744])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5800, 0.3878, 0.3878, 0.5800, 0.3878, 0.5800, 0.5800, 0.5800, 0.3878,
        0.3878])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6000, 0.4011, 0.4011, 0.6000, 0.4011, 0.6000, 0.6000, 0.6000, 0.4011,
        0.4011])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6200, 0.4145, 0.4145, 0.6200, 0.4145, 0.6200, 0.6200, 0.6200, 0.4145,
        0.4145])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6400, 0.4279, 0.4279, 0.6400, 0.4279, 0.6400, 0.6400, 0.6400, 0.4279,
        0.4279])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6600, 0.4412, 0.4412, 0.6600, 0.4412, 0.6600, 0.6600, 0.6600, 0.4412,
        0.4412])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6800, 0.4546, 0.4546, 0.6800, 0.4546, 0.6800, 0.6800, 0.6800, 0.4546,
        0.4546])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7000, 0.4680, 0.4680, 0.7000, 0.4680, 0.7000, 0.7000, 0.7000, 0.4680,
        0.4680])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7200, 0.4814, 0.4814, 0.7200, 0.4814, 0.7200, 0.7200, 0.7200, 0.4814,
        0.4814])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7400, 0.4947, 0.4947, 0.7400, 0.4947, 0.7400, 0.7400, 0.7400, 0.4947,
        0.4947])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7600, 0.5081, 0.5081, 0.7600, 0.5081, 0.7600, 0.7600, 0.7600, 0.5081,
        0.5081])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7800, 0.5215, 0.5215, 0.7800, 0.5215, 0.7800, 0.7800, 0.7800, 0.5215,
        0.5215])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8000, 0.5348, 0.5348, 0.8000, 0.5348, 0.8000, 0.8000, 0.8000, 0.5348,
        0.5348])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8200, 0.5482, 0.5482, 0.8200, 0.5482, 0.8200, 0.8200, 0.8200, 0.5482,
        0.5482])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8400, 0.5616, 0.5616, 0.8400, 0.5616, 0.8400, 0.8400, 0.8400, 0.5616,
        0.5616])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8600, 0.5750, 0.5750, 0.8600, 0.5750, 0.8600, 0.8600, 0.8600, 0.5750,
        0.5750])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8800, 0.5883, 0.5883, 0.8800, 0.5883, 0.8800, 0.8800, 0.8800, 0.5883,
        0.5883])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9000, 0.6017, 0.6017, 0.9000, 0.6017, 0.9000, 0.9000, 0.9000, 0.6017,
        0.6017])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9200, 0.6151, 0.6151, 0.9200, 0.6151, 0.9200, 0.9200, 0.9200, 0.6151,
        0.6151])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9400, 0.6284, 0.6284, 0.9400, 0.6284, 0.9400, 0.9400, 0.9400, 0.6284,
        0.6284])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9600, 0.6418, 0.6418, 0.9600, 0.6418, 0.9600, 0.9600, 0.9600, 0.6418,
        0.6418])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00],
        [2.5671e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9800, 0.6552, 0.6552, 0.9800, 0.6552, 0.9800, 0.9800, 0.9800, 0.6552,
        0.6552])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 16: Guess correctness - [ True False False  True False  True  True  True False False]
DEBUG:src.train:Log Probs: tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]], grad_fn=<CatBackward0>)
INFO:src.train:Episode 16: Cumulative reward: 204.39775567501783
INFO:src.train:Episode 16: Reward Differences: 8.009055107831955
INFO:src.train:Episode 16: Average loss: -0.0
INFO:src.train:Episode 16: Last Step Accuracy: 0.5
DEBUG:src.train:Episode 17: Input words: ['apple', 'apple', 'orange', 'orange', 'orange', 'orange', 'apple', 'orange', 'apple', 'apple']
DEBUG:src.train:Episode 17: Target words: ['orange', 'apple', 'orange', 'orange', 'orange', 'apple', 'apple', 'orange', 'orange', 'orange']
DEBUG:src.train:Input Word Indices: [0 0 1 1 1 1 0 1 0 0]
DEBUG:src.train:Input Tensor: tensor([0, 0, 1, 1, 1, 1, 0, 1, 0, 0])
DEBUG:src.train:Action Probs: tensor([[4.2740e-12, 1.0000e+00],
        [4.2740e-12, 1.0000e+00],
        [4.2740e-12, 1.0000e+00],
        [4.2740e-12, 1.0000e+00],
        [4.2740e-12, 1.0000e+00],
        [4.2740e-12, 1.0000e+00],
        [4.2740e-12, 1.0000e+00],
        [4.2740e-12, 1.0000e+00],
        [4.2740e-12, 1.0000e+00],
        [4.2740e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6126e-15, 1.0000e+00],
        [4.6126e-15, 1.0000e+00],
        [4.6126e-15, 1.0000e+00],
        [4.6126e-15, 1.0000e+00],
        [4.6126e-15, 1.0000e+00],
        [4.6126e-15, 1.0000e+00],
        [4.6126e-15, 1.0000e+00],
        [4.6126e-15, 1.0000e+00],
        [4.6126e-15, 1.0000e+00],
        [4.6126e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0200, 0.0134, 0.0200, 0.0200, 0.0200, 0.0134, 0.0134, 0.0200, 0.0200,
        0.0200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.6187e-15, 1.0000e+00],
        [1.6187e-15, 1.0000e+00],
        [1.6187e-15, 1.0000e+00],
        [1.6187e-15, 1.0000e+00],
        [1.6187e-15, 1.0000e+00],
        [1.6187e-15, 1.0000e+00],
        [1.6187e-15, 1.0000e+00],
        [1.6187e-15, 1.0000e+00],
        [1.6187e-15, 1.0000e+00],
        [1.6187e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0400, 0.0267, 0.0400, 0.0400, 0.0400, 0.0267, 0.0267, 0.0400, 0.0400,
        0.0400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.4012e-15, 1.0000e+00],
        [1.4012e-15, 1.0000e+00],
        [1.4012e-15, 1.0000e+00],
        [1.4012e-15, 1.0000e+00],
        [1.4012e-15, 1.0000e+00],
        [1.4012e-15, 1.0000e+00],
        [1.4012e-15, 1.0000e+00],
        [1.4012e-15, 1.0000e+00],
        [1.4012e-15, 1.0000e+00],
        [1.4012e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0600, 0.0401, 0.0600, 0.0600, 0.0600, 0.0401, 0.0401, 0.0600, 0.0600,
        0.0600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3740e-15, 1.0000e+00],
        [1.3740e-15, 1.0000e+00],
        [1.3740e-15, 1.0000e+00],
        [1.3740e-15, 1.0000e+00],
        [1.3740e-15, 1.0000e+00],
        [1.3740e-15, 1.0000e+00],
        [1.3740e-15, 1.0000e+00],
        [1.3740e-15, 1.0000e+00],
        [1.3740e-15, 1.0000e+00],
        [1.3740e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0800, 0.0535, 0.0800, 0.0800, 0.0800, 0.0535, 0.0535, 0.0800, 0.0800,
        0.0800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3704e-15, 1.0000e+00],
        [1.3704e-15, 1.0000e+00],
        [1.3704e-15, 1.0000e+00],
        [1.3704e-15, 1.0000e+00],
        [1.3704e-15, 1.0000e+00],
        [1.3704e-15, 1.0000e+00],
        [1.3704e-15, 1.0000e+00],
        [1.3704e-15, 1.0000e+00],
        [1.3704e-15, 1.0000e+00],
        [1.3704e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1000, 0.0669, 0.1000, 0.1000, 0.1000, 0.0669, 0.0669, 0.1000, 0.1000,
        0.1000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3699e-15, 1.0000e+00],
        [1.3699e-15, 1.0000e+00],
        [1.3699e-15, 1.0000e+00],
        [1.3699e-15, 1.0000e+00],
        [1.3699e-15, 1.0000e+00],
        [1.3699e-15, 1.0000e+00],
        [1.3699e-15, 1.0000e+00],
        [1.3699e-15, 1.0000e+00],
        [1.3699e-15, 1.0000e+00],
        [1.3699e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1200, 0.0802, 0.1200, 0.1200, 0.1200, 0.0802, 0.0802, 0.1200, 0.1200,
        0.1200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1400, 0.0936, 0.1400, 0.1400, 0.1400, 0.0936, 0.0936, 0.1400, 0.1400,
        0.1400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1600, 0.1070, 0.1600, 0.1600, 0.1600, 0.1070, 0.1070, 0.1600, 0.1600,
        0.1600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1800, 0.1203, 0.1800, 0.1800, 0.1800, 0.1203, 0.1203, 0.1800, 0.1800,
        0.1800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2000, 0.1337, 0.2000, 0.2000, 0.2000, 0.1337, 0.1337, 0.2000, 0.2000,
        0.2000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2200, 0.1471, 0.2200, 0.2200, 0.2200, 0.1471, 0.1471, 0.2200, 0.2200,
        0.2200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2400, 0.1605, 0.2400, 0.2400, 0.2400, 0.1605, 0.1605, 0.2400, 0.2400,
        0.2400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2600, 0.1738, 0.2600, 0.2600, 0.2600, 0.1738, 0.1738, 0.2600, 0.2600,
        0.2600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2800, 0.1872, 0.2800, 0.2800, 0.2800, 0.1872, 0.1872, 0.2800, 0.2800,
        0.2800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3000, 0.2006, 0.3000, 0.3000, 0.3000, 0.2006, 0.2006, 0.3000, 0.3000,
        0.3000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3200, 0.2139, 0.3200, 0.3200, 0.3200, 0.2139, 0.2139, 0.3200, 0.3200,
        0.3200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3400, 0.2273, 0.3400, 0.3400, 0.3400, 0.2273, 0.2273, 0.3400, 0.3400,
        0.3400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3600, 0.2407, 0.3600, 0.3600, 0.3600, 0.2407, 0.2407, 0.3600, 0.3600,
        0.3600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3800, 0.2541, 0.3800, 0.3800, 0.3800, 0.2541, 0.2541, 0.3800, 0.3800,
        0.3800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4000, 0.2674, 0.4000, 0.4000, 0.4000, 0.2674, 0.2674, 0.4000, 0.4000,
        0.4000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4200, 0.2808, 0.4200, 0.4200, 0.4200, 0.2808, 0.2808, 0.4200, 0.4200,
        0.4200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4400, 0.2942, 0.4400, 0.4400, 0.4400, 0.2942, 0.2942, 0.4400, 0.4400,
        0.4400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4600, 0.3075, 0.4600, 0.4600, 0.4600, 0.3075, 0.3075, 0.4600, 0.4600,
        0.4600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4800, 0.3209, 0.4800, 0.4800, 0.4800, 0.3209, 0.3209, 0.4800, 0.4800,
        0.4800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5000, 0.3343, 0.5000, 0.5000, 0.5000, 0.3343, 0.3343, 0.5000, 0.5000,
        0.5000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5200, 0.3476, 0.5200, 0.5200, 0.5200, 0.3476, 0.3476, 0.5200, 0.5200,
        0.5200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5400, 0.3610, 0.5400, 0.5400, 0.5400, 0.3610, 0.3610, 0.5400, 0.5400,
        0.5400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5600, 0.3744, 0.5600, 0.5600, 0.5600, 0.3744, 0.3744, 0.5600, 0.5600,
        0.5600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5800, 0.3878, 0.5800, 0.5800, 0.5800, 0.3878, 0.3878, 0.5800, 0.5800,
        0.5800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6000, 0.4011, 0.6000, 0.6000, 0.6000, 0.4011, 0.4011, 0.6000, 0.6000,
        0.6000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6200, 0.4145, 0.6200, 0.6200, 0.6200, 0.4145, 0.4145, 0.6200, 0.6200,
        0.6200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6400, 0.4279, 0.6400, 0.6400, 0.6400, 0.4279, 0.4279, 0.6400, 0.6400,
        0.6400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6600, 0.4412, 0.6600, 0.6600, 0.6600, 0.4412, 0.4412, 0.6600, 0.6600,
        0.6600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6800, 0.4546, 0.6800, 0.6800, 0.6800, 0.4546, 0.4546, 0.6800, 0.6800,
        0.6800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7000, 0.4680, 0.7000, 0.7000, 0.7000, 0.4680, 0.4680, 0.7000, 0.7000,
        0.7000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7200, 0.4814, 0.7200, 0.7200, 0.7200, 0.4814, 0.4814, 0.7200, 0.7200,
        0.7200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7400, 0.4947, 0.7400, 0.7400, 0.7400, 0.4947, 0.4947, 0.7400, 0.7400,
        0.7400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7600, 0.5081, 0.7600, 0.7600, 0.7600, 0.5081, 0.5081, 0.7600, 0.7600,
        0.7600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7800, 0.5215, 0.7800, 0.7800, 0.7800, 0.5215, 0.5215, 0.7800, 0.7800,
        0.7800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8000, 0.5348, 0.8000, 0.8000, 0.8000, 0.5348, 0.5348, 0.8000, 0.8000,
        0.8000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8200, 0.5482, 0.8200, 0.8200, 0.8200, 0.5482, 0.5482, 0.8200, 0.8200,
        0.8200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8400, 0.5616, 0.8400, 0.8400, 0.8400, 0.5616, 0.5616, 0.8400, 0.8400,
        0.8400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8600, 0.5750, 0.8600, 0.8600, 0.8600, 0.5750, 0.5750, 0.8600, 0.8600,
        0.8600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8800, 0.5883, 0.8800, 0.8800, 0.8800, 0.5883, 0.5883, 0.8800, 0.8800,
        0.8800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9000, 0.6017, 0.9000, 0.9000, 0.9000, 0.6017, 0.6017, 0.9000, 0.9000,
        0.9000])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9200, 0.6151, 0.9200, 0.9200, 0.9200, 0.6151, 0.6151, 0.9200, 0.9200,
        0.9200])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9400, 0.6284, 0.9400, 0.9400, 0.9400, 0.6284, 0.6284, 0.9400, 0.9400,
        0.9400])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9600, 0.6418, 0.9600, 0.9600, 0.9600, 0.6418, 0.6418, 0.9600, 0.9600,
        0.9600])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00],
        [1.3698e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9800, 0.6552, 0.9800, 0.9800, 0.9800, 0.6552, 0.6552, 0.9800, 0.9800,
        0.9800])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 17: Guess correctness - [ True False  True  True  True False False  True  True  True]
DEBUG:src.train:Log Probs: tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]], grad_fn=<CatBackward0>)
INFO:src.train:Episode 17: Cumulative reward: 220.63865337520838
INFO:src.train:Episode 17: Reward Differences: 8.645433142781258
INFO:src.train:Episode 17: Average loss: -0.0
INFO:src.train:Episode 17: Last Step Accuracy: 0.699999988079071
DEBUG:src.train:Episode 18: Input words: ['apple', 'orange', 'apple', 'orange', 'apple', 'apple', 'orange', 'orange', 'orange', 'apple']
DEBUG:src.train:Episode 18: Target words: ['apple', 'apple', 'orange', 'apple', 'orange', 'orange', 'orange', 'apple', 'orange', 'apple']
DEBUG:src.train:Input Word Indices: [0 1 0 1 0 0 1 1 1 0]
DEBUG:src.train:Input Tensor: tensor([0, 1, 0, 1, 0, 0, 1, 1, 1, 0])
DEBUG:src.train:Action Probs: tensor([[2.7671e-12, 1.0000e+00],
        [2.7671e-12, 1.0000e+00],
        [2.7671e-12, 1.0000e+00],
        [2.7671e-12, 1.0000e+00],
        [2.7671e-12, 1.0000e+00],
        [2.7671e-12, 1.0000e+00],
        [2.7671e-12, 1.0000e+00],
        [2.7671e-12, 1.0000e+00],
        [2.7671e-12, 1.0000e+00],
        [2.7671e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[2.6670e-15, 1.0000e+00],
        [2.6670e-15, 1.0000e+00],
        [2.6670e-15, 1.0000e+00],
        [2.6670e-15, 1.0000e+00],
        [2.6670e-15, 1.0000e+00],
        [2.6670e-15, 1.0000e+00],
        [2.6670e-15, 1.0000e+00],
        [2.6670e-15, 1.0000e+00],
        [2.6670e-15, 1.0000e+00],
        [2.6670e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0134, 0.0134, 0.0200, 0.0134, 0.0200, 0.0200, 0.0200, 0.0134, 0.0200,
        0.0134])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[9.1982e-16, 1.0000e+00],
        [9.1982e-16, 1.0000e+00],
        [9.1982e-16, 1.0000e+00],
        [9.1982e-16, 1.0000e+00],
        [9.1982e-16, 1.0000e+00],
        [9.1982e-16, 1.0000e+00],
        [9.1982e-16, 1.0000e+00],
        [9.1982e-16, 1.0000e+00],
        [9.1982e-16, 1.0000e+00],
        [9.1982e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0267, 0.0267, 0.0400, 0.0267, 0.0400, 0.0400, 0.0400, 0.0267, 0.0400,
        0.0267])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.9433e-16, 1.0000e+00],
        [7.9433e-16, 1.0000e+00],
        [7.9433e-16, 1.0000e+00],
        [7.9433e-16, 1.0000e+00],
        [7.9433e-16, 1.0000e+00],
        [7.9433e-16, 1.0000e+00],
        [7.9433e-16, 1.0000e+00],
        [7.9433e-16, 1.0000e+00],
        [7.9433e-16, 1.0000e+00],
        [7.9433e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0401, 0.0401, 0.0600, 0.0401, 0.0600, 0.0600, 0.0600, 0.0401, 0.0600,
        0.0401])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7868e-16, 1.0000e+00],
        [7.7868e-16, 1.0000e+00],
        [7.7868e-16, 1.0000e+00],
        [7.7868e-16, 1.0000e+00],
        [7.7868e-16, 1.0000e+00],
        [7.7868e-16, 1.0000e+00],
        [7.7868e-16, 1.0000e+00],
        [7.7868e-16, 1.0000e+00],
        [7.7868e-16, 1.0000e+00],
        [7.7868e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0535, 0.0535, 0.0800, 0.0535, 0.0800, 0.0800, 0.0800, 0.0535, 0.0800,
        0.0535])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7658e-16, 1.0000e+00],
        [7.7658e-16, 1.0000e+00],
        [7.7658e-16, 1.0000e+00],
        [7.7658e-16, 1.0000e+00],
        [7.7658e-16, 1.0000e+00],
        [7.7658e-16, 1.0000e+00],
        [7.7658e-16, 1.0000e+00],
        [7.7658e-16, 1.0000e+00],
        [7.7658e-16, 1.0000e+00],
        [7.7658e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0669, 0.0669, 0.1000, 0.0669, 0.1000, 0.1000, 0.1000, 0.0669, 0.1000,
        0.0669])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7630e-16, 1.0000e+00],
        [7.7630e-16, 1.0000e+00],
        [7.7630e-16, 1.0000e+00],
        [7.7630e-16, 1.0000e+00],
        [7.7630e-16, 1.0000e+00],
        [7.7630e-16, 1.0000e+00],
        [7.7630e-16, 1.0000e+00],
        [7.7630e-16, 1.0000e+00],
        [7.7630e-16, 1.0000e+00],
        [7.7630e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0802, 0.0802, 0.1200, 0.0802, 0.1200, 0.1200, 0.1200, 0.0802, 0.1200,
        0.0802])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7626e-16, 1.0000e+00],
        [7.7626e-16, 1.0000e+00],
        [7.7626e-16, 1.0000e+00],
        [7.7626e-16, 1.0000e+00],
        [7.7626e-16, 1.0000e+00],
        [7.7626e-16, 1.0000e+00],
        [7.7626e-16, 1.0000e+00],
        [7.7626e-16, 1.0000e+00],
        [7.7626e-16, 1.0000e+00],
        [7.7626e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0936, 0.0936, 0.1400, 0.0936, 0.1400, 0.1400, 0.1400, 0.0936, 0.1400,
        0.0936])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7626e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7626e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7626e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7626e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7626e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1070, 0.1070, 0.1600, 0.1070, 0.1600, 0.1600, 0.1600, 0.1070, 0.1600,
        0.1070])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1203, 0.1203, 0.1800, 0.1203, 0.1800, 0.1800, 0.1800, 0.1203, 0.1800,
        0.1203])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1337, 0.1337, 0.2000, 0.1337, 0.2000, 0.2000, 0.2000, 0.1337, 0.2000,
        0.1337])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1471, 0.1471, 0.2200, 0.1471, 0.2200, 0.2200, 0.2200, 0.1471, 0.2200,
        0.1471])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1605, 0.1605, 0.2400, 0.1605, 0.2400, 0.2400, 0.2400, 0.1605, 0.2400,
        0.1605])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1738, 0.1738, 0.2600, 0.1738, 0.2600, 0.2600, 0.2600, 0.1738, 0.2600,
        0.1738])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1872, 0.1872, 0.2800, 0.1872, 0.2800, 0.2800, 0.2800, 0.1872, 0.2800,
        0.1872])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2006, 0.2006, 0.3000, 0.2006, 0.3000, 0.3000, 0.3000, 0.2006, 0.3000,
        0.2006])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2139, 0.2139, 0.3200, 0.2139, 0.3200, 0.3200, 0.3200, 0.2139, 0.3200,
        0.2139])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2273, 0.2273, 0.3400, 0.2273, 0.3400, 0.3400, 0.3400, 0.2273, 0.3400,
        0.2273])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2407, 0.2407, 0.3600, 0.2407, 0.3600, 0.3600, 0.3600, 0.2407, 0.3600,
        0.2407])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2541, 0.2541, 0.3800, 0.2541, 0.3800, 0.3800, 0.3800, 0.2541, 0.3800,
        0.2541])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2674, 0.2674, 0.4000, 0.2674, 0.4000, 0.4000, 0.4000, 0.2674, 0.4000,
        0.2674])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2808, 0.2808, 0.4200, 0.2808, 0.4200, 0.4200, 0.4200, 0.2808, 0.4200,
        0.2808])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2942, 0.2942, 0.4400, 0.2942, 0.4400, 0.4400, 0.4400, 0.2942, 0.4400,
        0.2942])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3075, 0.3075, 0.4600, 0.3075, 0.4600, 0.4600, 0.4600, 0.3075, 0.4600,
        0.3075])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3209, 0.3209, 0.4800, 0.3209, 0.4800, 0.4800, 0.4800, 0.3209, 0.4800,
        0.3209])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3343, 0.3343, 0.5000, 0.3343, 0.5000, 0.5000, 0.5000, 0.3343, 0.5000,
        0.3343])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3476, 0.3476, 0.5200, 0.3476, 0.5200, 0.5200, 0.5200, 0.3476, 0.5200,
        0.3476])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3610, 0.3610, 0.5400, 0.3610, 0.5400, 0.5400, 0.5400, 0.3610, 0.5400,
        0.3610])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3744, 0.3744, 0.5600, 0.3744, 0.5600, 0.5600, 0.5600, 0.3744, 0.5600,
        0.3744])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3878, 0.3878, 0.5800, 0.3878, 0.5800, 0.5800, 0.5800, 0.3878, 0.5800,
        0.3878])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4011, 0.4011, 0.6000, 0.4011, 0.6000, 0.6000, 0.6000, 0.4011, 0.6000,
        0.4011])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4145, 0.4145, 0.6200, 0.4145, 0.6200, 0.6200, 0.6200, 0.4145, 0.6200,
        0.4145])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4279, 0.4279, 0.6400, 0.4279, 0.6400, 0.6400, 0.6400, 0.4279, 0.6400,
        0.4279])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4412, 0.4412, 0.6600, 0.4412, 0.6600, 0.6600, 0.6600, 0.4412, 0.6600,
        0.4412])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4546, 0.4546, 0.6800, 0.4546, 0.6800, 0.6800, 0.6800, 0.4546, 0.6800,
        0.4546])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4680, 0.4680, 0.7000, 0.4680, 0.7000, 0.7000, 0.7000, 0.4680, 0.7000,
        0.4680])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4814, 0.4814, 0.7200, 0.4814, 0.7200, 0.7200, 0.7200, 0.4814, 0.7200,
        0.4814])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4947, 0.4947, 0.7400, 0.4947, 0.7400, 0.7400, 0.7400, 0.4947, 0.7400,
        0.4947])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5081, 0.5081, 0.7600, 0.5081, 0.7600, 0.7600, 0.7600, 0.5081, 0.7600,
        0.5081])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5215, 0.5215, 0.7800, 0.5215, 0.7800, 0.7800, 0.7800, 0.5215, 0.7800,
        0.5215])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5348, 0.5348, 0.8000, 0.5348, 0.8000, 0.8000, 0.8000, 0.5348, 0.8000,
        0.5348])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5482, 0.5482, 0.8200, 0.5482, 0.8200, 0.8200, 0.8200, 0.5482, 0.8200,
        0.5482])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5616, 0.5616, 0.8400, 0.5616, 0.8400, 0.8400, 0.8400, 0.5616, 0.8400,
        0.5616])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5750, 0.5750, 0.8600, 0.5750, 0.8600, 0.8600, 0.8600, 0.5750, 0.8600,
        0.5750])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5883, 0.5883, 0.8800, 0.5883, 0.8800, 0.8800, 0.8800, 0.5883, 0.8800,
        0.5883])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6017, 0.6017, 0.9000, 0.6017, 0.9000, 0.9000, 0.9000, 0.6017, 0.9000,
        0.6017])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6151, 0.6151, 0.9200, 0.6151, 0.9200, 0.9200, 0.9200, 0.6151, 0.9200,
        0.6151])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6284, 0.6284, 0.9400, 0.6284, 0.9400, 0.9400, 0.9400, 0.6284, 0.9400,
        0.6284])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6418, 0.6418, 0.9600, 0.6418, 0.9600, 0.9600, 0.9600, 0.6418, 0.9600,
        0.6418])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00],
        [7.7625e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6552, 0.6552, 0.9800, 0.6552, 0.9800, 0.9800, 0.9800, 0.6552, 0.9800,
        0.6552])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 18: Guess correctness - [False False  True False  True  True  True False  True False]
DEBUG:src.train:Log Probs: tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]], grad_fn=<CatBackward0>)
INFO:src.train:Episode 18: Cumulative reward: 204.39775567501783
INFO:src.train:Episode 18: Reward Differences: 8.009055107831955
INFO:src.train:Episode 18: Average loss: -0.0
INFO:src.train:Episode 18: Last Step Accuracy: 0.5
DEBUG:src.train:Episode 19: Input words: ['apple', 'apple', 'apple', 'orange', 'apple', 'apple', 'orange', 'apple', 'apple', 'orange']
DEBUG:src.train:Episode 19: Target words: ['orange', 'orange', 'orange', 'apple', 'apple', 'orange', 'orange', 'apple', 'orange', 'apple']
DEBUG:src.train:Input Word Indices: [0 0 0 1 0 0 1 0 0 1]
DEBUG:src.train:Input Tensor: tensor([0, 0, 0, 1, 0, 0, 1, 0, 0, 1])
DEBUG:src.train:Action Probs: tensor([[1.8671e-12, 1.0000e+00],
        [1.8671e-12, 1.0000e+00],
        [1.8671e-12, 1.0000e+00],
        [1.8671e-12, 1.0000e+00],
        [1.8671e-12, 1.0000e+00],
        [1.8671e-12, 1.0000e+00],
        [1.8671e-12, 1.0000e+00],
        [1.8671e-12, 1.0000e+00],
        [1.8671e-12, 1.0000e+00],
        [1.8671e-12, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[1.6246e-15, 1.0000e+00],
        [1.6246e-15, 1.0000e+00],
        [1.6246e-15, 1.0000e+00],
        [1.6246e-15, 1.0000e+00],
        [1.6246e-15, 1.0000e+00],
        [1.6246e-15, 1.0000e+00],
        [1.6246e-15, 1.0000e+00],
        [1.6246e-15, 1.0000e+00],
        [1.6246e-15, 1.0000e+00],
        [1.6246e-15, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0200, 0.0200, 0.0200, 0.0134, 0.0134, 0.0200, 0.0200, 0.0134, 0.0200,
        0.0134])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[5.5158e-16, 1.0000e+00],
        [5.5158e-16, 1.0000e+00],
        [5.5158e-16, 1.0000e+00],
        [5.5158e-16, 1.0000e+00],
        [5.5158e-16, 1.0000e+00],
        [5.5158e-16, 1.0000e+00],
        [5.5158e-16, 1.0000e+00],
        [5.5158e-16, 1.0000e+00],
        [5.5158e-16, 1.0000e+00],
        [5.5158e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0400, 0.0400, 0.0400, 0.0267, 0.0267, 0.0400, 0.0400, 0.0267, 0.0400,
        0.0267])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.7530e-16, 1.0000e+00],
        [4.7530e-16, 1.0000e+00],
        [4.7530e-16, 1.0000e+00],
        [4.7530e-16, 1.0000e+00],
        [4.7530e-16, 1.0000e+00],
        [4.7530e-16, 1.0000e+00],
        [4.7530e-16, 1.0000e+00],
        [4.7530e-16, 1.0000e+00],
        [4.7530e-16, 1.0000e+00],
        [4.7530e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0600, 0.0600, 0.0600, 0.0401, 0.0401, 0.0600, 0.0600, 0.0401, 0.0600,
        0.0401])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6579e-16, 1.0000e+00],
        [4.6579e-16, 1.0000e+00],
        [4.6579e-16, 1.0000e+00],
        [4.6579e-16, 1.0000e+00],
        [4.6579e-16, 1.0000e+00],
        [4.6579e-16, 1.0000e+00],
        [4.6579e-16, 1.0000e+00],
        [4.6579e-16, 1.0000e+00],
        [4.6579e-16, 1.0000e+00],
        [4.6579e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.0800, 0.0800, 0.0800, 0.0535, 0.0535, 0.0800, 0.0800, 0.0535, 0.0800,
        0.0535])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6452e-16, 1.0000e+00],
        [4.6452e-16, 1.0000e+00],
        [4.6452e-16, 1.0000e+00],
        [4.6452e-16, 1.0000e+00],
        [4.6452e-16, 1.0000e+00],
        [4.6452e-16, 1.0000e+00],
        [4.6452e-16, 1.0000e+00],
        [4.6452e-16, 1.0000e+00],
        [4.6452e-16, 1.0000e+00],
        [4.6452e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1000, 0.1000, 0.1000, 0.0669, 0.0669, 0.1000, 0.1000, 0.0669, 0.1000,
        0.0669])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6435e-16, 1.0000e+00],
        [4.6435e-16, 1.0000e+00],
        [4.6435e-16, 1.0000e+00],
        [4.6435e-16, 1.0000e+00],
        [4.6435e-16, 1.0000e+00],
        [4.6435e-16, 1.0000e+00],
        [4.6435e-16, 1.0000e+00],
        [4.6435e-16, 1.0000e+00],
        [4.6435e-16, 1.0000e+00],
        [4.6435e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1200, 0.1200, 0.1200, 0.0802, 0.0802, 0.1200, 0.1200, 0.0802, 0.1200,
        0.0802])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6433e-16, 1.0000e+00],
        [4.6433e-16, 1.0000e+00],
        [4.6433e-16, 1.0000e+00],
        [4.6433e-16, 1.0000e+00],
        [4.6433e-16, 1.0000e+00],
        [4.6433e-16, 1.0000e+00],
        [4.6433e-16, 1.0000e+00],
        [4.6433e-16, 1.0000e+00],
        [4.6433e-16, 1.0000e+00],
        [4.6433e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1400, 0.1400, 0.1400, 0.0936, 0.0936, 0.1400, 0.1400, 0.0936, 0.1400,
        0.0936])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6433e-16, 1.0000e+00],
        [4.6433e-16, 1.0000e+00],
        [4.6433e-16, 1.0000e+00],
        [4.6433e-16, 1.0000e+00],
        [4.6433e-16, 1.0000e+00],
        [4.6433e-16, 1.0000e+00],
        [4.6433e-16, 1.0000e+00],
        [4.6433e-16, 1.0000e+00],
        [4.6433e-16, 1.0000e+00],
        [4.6433e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1600, 0.1600, 0.1600, 0.1070, 0.1070, 0.1600, 0.1600, 0.1070, 0.1600,
        0.1070])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.1800, 0.1800, 0.1800, 0.1203, 0.1203, 0.1800, 0.1800, 0.1203, 0.1800,
        0.1203])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2000, 0.2000, 0.2000, 0.1337, 0.1337, 0.2000, 0.2000, 0.1337, 0.2000,
        0.1337])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2200, 0.2200, 0.2200, 0.1471, 0.1471, 0.2200, 0.2200, 0.1471, 0.2200,
        0.1471])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2400, 0.2400, 0.2400, 0.1605, 0.1605, 0.2400, 0.2400, 0.1605, 0.2400,
        0.1605])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2600, 0.2600, 0.2600, 0.1738, 0.1738, 0.2600, 0.2600, 0.1738, 0.2600,
        0.1738])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.2800, 0.2800, 0.2800, 0.1872, 0.1872, 0.2800, 0.2800, 0.1872, 0.2800,
        0.1872])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3000, 0.3000, 0.3000, 0.2006, 0.2006, 0.3000, 0.3000, 0.2006, 0.3000,
        0.2006])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3200, 0.3200, 0.3200, 0.2139, 0.2139, 0.3200, 0.3200, 0.2139, 0.3200,
        0.2139])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3400, 0.3400, 0.3400, 0.2273, 0.2273, 0.3400, 0.3400, 0.2273, 0.3400,
        0.2273])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3600, 0.3600, 0.3600, 0.2407, 0.2407, 0.3600, 0.3600, 0.2407, 0.3600,
        0.2407])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.3800, 0.3800, 0.3800, 0.2541, 0.2541, 0.3800, 0.3800, 0.2541, 0.3800,
        0.2541])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4000, 0.4000, 0.4000, 0.2674, 0.2674, 0.4000, 0.4000, 0.2674, 0.4000,
        0.2674])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4200, 0.4200, 0.4200, 0.2808, 0.2808, 0.4200, 0.4200, 0.2808, 0.4200,
        0.2808])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4400, 0.4400, 0.4400, 0.2942, 0.2942, 0.4400, 0.4400, 0.2942, 0.4400,
        0.2942])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4600, 0.4600, 0.4600, 0.3075, 0.3075, 0.4600, 0.4600, 0.3075, 0.4600,
        0.3075])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.4800, 0.4800, 0.4800, 0.3209, 0.3209, 0.4800, 0.4800, 0.3209, 0.4800,
        0.3209])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5000, 0.5000, 0.5000, 0.3343, 0.3343, 0.5000, 0.5000, 0.3343, 0.5000,
        0.3343])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5200, 0.5200, 0.5200, 0.3476, 0.3476, 0.5200, 0.5200, 0.3476, 0.5200,
        0.3476])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5400, 0.5400, 0.5400, 0.3610, 0.3610, 0.5400, 0.5400, 0.3610, 0.5400,
        0.3610])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5600, 0.5600, 0.5600, 0.3744, 0.3744, 0.5600, 0.5600, 0.3744, 0.5600,
        0.3744])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.5800, 0.5800, 0.5800, 0.3878, 0.3878, 0.5800, 0.5800, 0.3878, 0.5800,
        0.3878])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6000, 0.6000, 0.6000, 0.4011, 0.4011, 0.6000, 0.6000, 0.4011, 0.6000,
        0.4011])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6200, 0.6200, 0.6200, 0.4145, 0.4145, 0.6200, 0.6200, 0.4145, 0.6200,
        0.4145])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6400, 0.6400, 0.6400, 0.4279, 0.4279, 0.6400, 0.6400, 0.4279, 0.6400,
        0.4279])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6600, 0.6600, 0.6600, 0.4412, 0.4412, 0.6600, 0.6600, 0.4412, 0.6600,
        0.4412])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.6800, 0.6800, 0.6800, 0.4546, 0.4546, 0.6800, 0.6800, 0.4546, 0.6800,
        0.4546])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7000, 0.7000, 0.7000, 0.4680, 0.4680, 0.7000, 0.7000, 0.4680, 0.7000,
        0.4680])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7200, 0.7200, 0.7200, 0.4814, 0.4814, 0.7200, 0.7200, 0.4814, 0.7200,
        0.4814])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7400, 0.7400, 0.7400, 0.4947, 0.4947, 0.7400, 0.7400, 0.4947, 0.7400,
        0.4947])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7600, 0.7600, 0.7600, 0.5081, 0.5081, 0.7600, 0.7600, 0.5081, 0.7600,
        0.5081])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.7800, 0.7800, 0.7800, 0.5215, 0.5215, 0.7800, 0.7800, 0.5215, 0.7800,
        0.5215])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8000, 0.8000, 0.8000, 0.5348, 0.5348, 0.8000, 0.8000, 0.5348, 0.8000,
        0.5348])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8200, 0.8200, 0.8200, 0.5482, 0.5482, 0.8200, 0.8200, 0.5482, 0.8200,
        0.5482])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8400, 0.8400, 0.8400, 0.5616, 0.5616, 0.8400, 0.8400, 0.5616, 0.8400,
        0.5616])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8600, 0.8600, 0.8600, 0.5750, 0.5750, 0.8600, 0.8600, 0.5750, 0.8600,
        0.5750])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.8800, 0.8800, 0.8800, 0.5883, 0.5883, 0.8800, 0.8800, 0.5883, 0.8800,
        0.5883])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9000, 0.9000, 0.9000, 0.6017, 0.6017, 0.9000, 0.9000, 0.6017, 0.9000,
        0.6017])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9200, 0.9200, 0.9200, 0.6151, 0.6151, 0.9200, 0.9200, 0.6151, 0.9200,
        0.6151])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9400, 0.9400, 0.9400, 0.6284, 0.6284, 0.9400, 0.9400, 0.6284, 0.9400,
        0.6284])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9600, 0.9600, 0.9600, 0.6418, 0.6418, 0.9600, 0.9600, 0.6418, 0.9600,
        0.6418])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
DEBUG:src.train:Input Word Indices: [1 1 1 1 1 1 1 1 1 1]
DEBUG:src.train:Input Tensor: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action Probs: tensor([[4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00],
        [4.6432e-16, 1.0000e+00]], grad_fn=<SqueezeBackward0>)
DEBUG:src.train:Action indices: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
DEBUG:src.train:Action words: ['orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange' 'orange'
 'orange' 'orange']
DEBUG:src.train:Rewards: tensor([0.9800, 0.9800, 0.9800, 0.6552, 0.6552, 0.9800, 0.9800, 0.6552, 0.9800,
        0.6552])
DEBUG:src.train:Log Probabilities: tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], grad_fn=<LogBackward0>)
DEBUG:src.train:Episode 19: Guess correctness - [ True  True  True False False  True  True False  True False]
